(()=>{var e={6324:()=>{var e;webix.ui.datafilter.avgColumn=webix.extend({refresh:function(t,i,o){e=0,t.mapCells(null,o.columnId,null,1,(function(t){return e++,t})),i.firstChild.innerHTML=e}},webix.ui.datafilter.summColumn),webix.ui.datafilter.minColumn=webix.extend({refresh:function(e,t,i){var o=0;e.mapCells(null,i.columnId,null,1,(function(e){return e*=1,isNaN(e)||(o+=e),e})),t.firstChild.innerHTML=o.toFixed(2)}},webix.ui.datafilter.summColumn),webix.ui.datafilter.avaregeColumn=webix.extend({refresh:function(e,t,i){var o=0,s=0;e.mapCells(null,i.columnId,null,1,(function(e){return e*=1,isNaN(e)||(o+=e,s++),e})),t.firstChild.innerHTML=(o/s).toFixed(2)}},webix.ui.datafilter.summColumn),webix.ui.datafilter.summTimeColumn=webix.extend({refresh:function(e,t,i){var o=0,s=0,a=0,l=0,r=0,n=0,d=0,c=new Array,u=new Array,h=new Array;for(e.mapCells(null,i.columnId,null,1,(function(e){return e&&(2==(c=e.split(" ")).length?(u=c[0].split(translate("d")),o+=parseInt(u[0],10),h=c[1].split(":"),s+=parseInt(h[0],10),l+=parseInt(h[1],10),n+=parseInt(h[2],10)):3==(h=c[0].split(":")).length?(s+=parseInt(h[0],10),l+=parseInt(h[1],10),n+=parseInt(h[2],10)):(l+=parseInt(h[0],10),n+=parseInt(h[1],10))),e}));n>=60;)n-=60,d++;for(l+=d;l>=60;)l-=60,r++;for(s+=r;s>=24;)s-=24,a++;n<10&&(n="0"+n),l<10&&(l="0"+l);var w="";(o+=a)>0&&(w=w+o+translate("d")+" "),s>0?w=w+s+":":o>0&&(w+="0:"),l>0?w=w+l+":":w+="00:",w+=n>0?n:"00",t.firstChild.innerHTML=w}},webix.ui.datafilter.summColumn),webix.ui.datafilter.avaregeTimeColumn=webix.extend({refresh:function(e,t,i){var o=0,s=0,a=0,l=0,r=0,n=0,d=new Array;for(e.mapCells(null,i.columnId,null,1,(function(e){return e&&(d=e.split(":"),s+=parseInt(d[0],10),l+=parseInt(d[1],10),n++),e})),l=(60*s+l)/n,l=Math.round(l);l>=60;)l-=60,r++;for(s=r;s>=60;)s-=60,a++;l<10&&(l="0"+l),s<10&&(s="0"+s);var c=(o+=a)+":";s>0?c=c+s+":":c+="00:",c+=l>0?l:"00",t.firstChild.innerHTML=c}},webix.ui.datafilter.summColumn),webix.ui.datafilter.avgTime=webix.extend({refresh:function(e,t,i){var o=0,s=0,a=0,l=0,r=0,n=0,d=0;for(e.mapCells(null,i.columnId,null,1,(function(e){return e&&(d+=e,n++),e})),l=d/n,l=Math.round(l);l>=60;)l-=60,r++;for(s=r;s>=60;)s-=60,a++;l<10&&(l="0"+l),s<10&&(s="0"+s);var c=(o+=a)+":";s>0?c=c+s+":":c+="00:",c+=l>0?l:"00",t.firstChild.innerHTML=c}},webix.ui.datafilter.summColumn)},3489:()=>{webix.protoUI({name:"nic-editor",defaults:{config:{buttonList:["fontSize","bold","italic","underline","strikeThrough","subscript","superscript"]},value:""},$init:function(e){this.$view.innerHTML="<div style='padding:10px'>Loading...</div>",this.$view.className+=" webix_selectable",this._waitEditor=webix.promise.defer(),this.$ready.push(this._init_nic_editor)},_init_nic_editor:function(){if(!1!==this.config.cdn){var e=[],t=this.config.cdn?this.config.cdn:"https://cdnjs.cloudflare.com/ajax/libs/NicEdit/0.93";e.push(t+"/nicEdit.js"),webix.require(e).then(webix.bind(this._render_nic_editor,this)).catch((function(e){console.log(e)}))}else this._render_nic_editor()},_render_nic_editor:function(){if(!this._editorCss){".nicEdit-panelContain{border-top-width:0px !important;}\n",".webix_selectable>div:nth-child(2){overflow-y:auto;}",webix.html.addStyle(".nicEdit-panel{height:auto}\n.nicEdit-panelContain{border-top-width:0px !important;}\n.webix_selectable>div:nth-child(2){overflow-y:auto;}"),this._editorCss=!0}this.config.cdn&&!this.config.config.iconsPath&&(this.config.config.iconsPath=cdn+"/nicEditorIcons.gif");var e=new nicEditor(this.config.config).panelInstance(this.$view.firstChild);this._3rd_editor=e.nicInstances[e.nicInstances.length-1],this._set_inner_size(),this._waitEditor.resolve(this._3rd_editor),this.setValue(this.config.value),this._focus_await&&this.focus()},_set_inner_size:function(){if(this._3rd_editor&&this.$width){var e=this.$view.firstChild;e.style.width=this.$width+"px",(e=e.nextSibling).style.width=this.$width-20+"px",e.style.height=this.$height-46+"px"}},$setSize:function(e,t){webix.ui.view.prototype.$setSize.call(this,e,t)&&this._set_inner_size()},setValue:function(e){this.config.value=e,this._3rd_editor&&this._3rd_editor.setContent(e)},getValue:function(){return this._3rd_editor?this._3rd_editor.getContent():this.config.value},focus:function(){this._focus_await=!0,this._3rd_editor&&this._3rd_editor.elm.focus()},getEditor:function(e){return e?this._waitEditor:this._3rd_editor}},webix.ui.view)},5656:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Roles=void 0,function(e){e.REPORTS="phc.reports",e.ADMIN="erpico.admin",e.OUTGOING_CAMPAIGNS="phc.oc",e.USER="user"}(t.Roles||(t.Roles={}))},7713:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=i(9587),s=i(3199);let a=webix.guiutils.getMenuData(s.data);class l extends o.JetView{config(){return{width:200,collapsed:!1,collapsedWidth:48,view:"sidebar",id:"sidebar",css:"sidebar",layout:"y",scroll:"y",select:!0,data:a,on:{onBeforeOpen:function(e,t,i){let o=this.getItem(e);if(o&&o.disabled)return!1},onBeforeSelect:function(e){let t=this.getItem(e);if(t&&t.disabled)return webix.message({type:"error",text:"У вас нет доступа к этому разделу. Обратитесь к администратору."}),this.select("cti"),!1},onAfterSelect:function(e){document.location.hash="!/main/"+e,webix.AppConfig.showHideView(e)}}}}init(e){e.parse(a)}}t.default=l},223:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=i(9587);class s extends o.JetView{constructor(){super(...arguments),this.windowName="mediafilesWindow",this.formName="mediafilesForm"}config(){return{view:"window",id:this.windowName,position:"center",modal:!0,minWidth:800,minHeight:450,autoheight:!0,move:!0,resize:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Загрузка файлов",align:"left"},{view:"icon",icon:"wxi-close",click:()=>{$$(this.windowName).close()}}]},body:{view:"form",id:this.formName,minWidth:600,minHeight:300,autoheight:!0,scrollY:!0,elements:[{view:"text",editable:!1,id:"name",name:"name"},{id:"image",hidden:!0,css:"mediafile-image",template:()=>""},{id:"audio",name:"audio",css:"mediafile-audio",hidden:!0,template:()=>""}]},on:{onShow:()=>{const e=$$("mediafilesTable").getSelectedItem();$$("name").setValue(e.name),"image"===e.type&&($$("image").show(),$$("image").setHTML(`<image class="media-image" src="/mediafiles/${e.id}.${e.extension}" alt="image">`)),"audio"===e.type&&($$("audio").show(),$$("audio").setHTML(`\n                            <div>\n                            <audio controls>\n                                <source src="/mediafiles/${e.id}.${e.extension}" type="audio/mpeg">\n                            </audio>\n                            </div>\n                        `))}}}}showWindow(){this.getRoot().show()}}t.default=s},3199:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.data=void 0;const o=i(5656);t.data=[{id:"phone",value:"Телефоны",icon:"fa fa-phone-square",rules:[o.Roles.ADMIN]},{id:"cti",value:"Инструкция",icon:"fa fa-cubes",$css:""},{id:"cdr_reports",value:"Звонки",icon:"fa fa-phone-volume",$css:""},{id:"forms",value:"Отчеты",icon:"fa fa-chart-bar",rules:[o.Roles.REPORTS,o.Roles.ADMIN],data:[{id:"ext_dashboard",value:"Dashboard"},{id:"grouped_reports",value:"Входящие"},{id:"grouped_reports_by_agents",value:"По агентам"},{id:"grouped_reports_by_queues",value:"По очередям"},{id:"lost_calls",value:"Потерянные"},{id:"analysis_outgoing_calls",value:"Исходящие"},{id:"operators_work_report",value:"Сотрудники"},{id:"checklist",value:"Чеклисты"}]},{id:"calendar",value:"Анализ трафика",icon:"fa fa-sliders-h",rules:[o.Roles.REPORTS,o.Roles.ADMIN],data:[{id:"interval_reports",value:"Входящие"},{id:"daily_report",value:"По дням"},{id:"month_traffic",value:"По месяцам"},{id:"hourly_load",value:"По часам"},{id:"compare_calls",value:"Сравнить"}]},{id:"statistics",value:"Статистика",icon:"fa fa-chart-bar",rules:[o.Roles.REPORTS,o.Roles.ADMIN],data:[{id:"ext_incoming_external",value:"Внешние"},{id:"ext_incoming_internal",value:"Внутренние"},{id:"ext_outgoing",value:"Исходящие"}]},{id:"extended",value:"Расширенные",icon:"fa fa-th-large",rules:[o.Roles.REPORTS,o.Roles.ADMIN],data:[{id:"extended_calls",value:"Звонки"},{id:"extended_contact_calls",value:"Входящие"}]},{id:"outgoingcampaign_general",value:"Кампании",icon:"fa fa-phone-square",$css:"",rules:["phc.oc",o.Roles.ADMIN],data:[{id:"outgoingcampaign",value:"Активные"},{id:"outgoingcampaign_archive",value:"Архив"}]},{id:"control",value:"Управление",icon:"fa fa-tools",rules:[o.Roles.ADMIN],subrules:!0,data:[{id:"users",value:"Пользователи",rules:[o.Roles.ADMIN]},{id:"aliases",value:"Алиасы",rules:[o.Roles.ADMIN]},{id:"groups",value:"Группы",rules:[o.Roles.ADMIN]},{id:"contact_groups",value:"Контактные группы",rules:["phc.admin",o.Roles.ADMIN]},{id:"phones",value:"Телефоны",rules:[o.Roles.ADMIN]},{id:"phones_groups",value:"Группы телефонов",rules:[o.Roles.ADMIN]},{id:"queues",value:"Очереди",rules:["phc.admin",o.Roles.ADMIN]},{id:"channels",value:"Каналы",rules:[o.Roles.ADMIN]},{id:"scripts",value:"Скрипты",rules:["phc.admin",o.Roles.ADMIN]},{id:"api_keys",value:"Ключи API",rules:[o.Roles.ADMIN]},{id:"mediafiles",value:"Медиафайлы",rules:[o.Roles.ADMIN]},{id:"journal",value:"Журнал",rules:[o.Roles.ADMIN]},{id:"setup",value:"Настройки",rules:[o.Roles.ADMIN]},{id:"blacklist",value:"Blacklist",rules:[o.Roles.ADMIN]}]}]},8354:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=i(9587),s=i(1537),a=i(3998),l=i(5656);class r extends o.JetView{constructor(e,t){return super(e,t),this.app=e,this.config=t,this.loaded=0,webix.Manager.setComponent("outgoingcampaign",this),t}roleAllowed(){return[l.Roles.OUTGOING_CAMPAIGNS,l.Roles.ADMIN]}getView(){return{id:"outgoingcampaign",hidden:!0,rows:[(new s.default).getView(webix.outgoingcampaignArchive),new a.default(this.app,this.config).getView()]}}loadData(){$$("outgoingcampaign-toolbar").show();const e=$$("outgoingcampaign-toolbar").getChildViews();webix.outgoingcampaignArchive=location.hash.includes("archive")?1:0,Array.from(e).forEach((e=>{["СТАРТ","Новая кампания","Правила по умолчанию"].includes(e.data.label)&&(webix.outgoingcampaignArchive?e.hide():e.show())}));const t=$$("cmenuoutgoingcampaigns");webix.outgoingcampaignArchive&&t?(t.hideItem("copy"),t.getItem("archive").value="Удалить из архива",t.refresh()):t&&(t.showItem("copy"),t.getItem("archive").value="Добавить в архив",t.refresh());const i=$$("outgoingcampaigns");if(i){webix.extend(i,webix.ProgressBar);let e="/outgoingcampaign/list";webix.outgoingcampaignArchive&&(e+="?filter[archive]=1"),i.clearAll(),i.load(e,"json",(()=>{this.loaded=1}))}}}t.default=r},79:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=i(9587),s=i(5656),a=i(223);class l extends o.JetView{constructor(e,t){super(e,t),this.toolbarName="mediafiles_toolbar",this.tableName="mediafilesTable",webix.Manager.setComponent("mediafiles",this)}roleAllowed(){return[s.Roles.ADMIN]}getView(){let e=this;return{id:"mediafiles",rows:[{view:"datatable",id:this.tableName,columns:[{id:"id",hidden:!0},{id:"name",header:[{text:"Название файла"},{content:"textFilter"}]},{id:"time",header:[{text:"Дата"}],fillspace:1,format:webix.Date.dateToStr("%d.%m.%Y в %H:%i")},{id:"user",header:[{text:"Пользователь"},{content:"textFilter"}],fillspace:1}],clipboard:"selection",scrollAlignY:!0,scrollX:!0,tooltip:!0,export:!0,select:!0,on:{onItemDblClick:()=>{const e=$$(this.tableName).getSelectedItem();$$(this.toolbarName).$scope.ui(a.default).showWindow(Object.assign({},e))},onBeforeContextMenu:function(e){this.select(e)}},ready(){webix.ui({id:"mediafiles-contextmenu",view:"contextmenu",width:210,data:[{id:"delete",value:"Удалить",icon:"wxi-trash"}],on:{onMenuItemClick:t=>{const i=$$(e.tableName).getSelectedItem(),o=`${i.id}.${i.name.split(".").pop()}`;if("delete"===t)console.log(`/mediafiles/${o}`),webix.ajax().del(`/mediafiles/${o}`,{},(t=>{t=JSON.parse(t),webix.message(t.message,t.result?"success":"error"),e.loadTable()}))}}}),$$("mediafiles-contextmenu").attachTo(this)}}]}}getToolBar(){return{id:this.toolbarName,css:"top-menu-right-item",hidden:!0,cols:[{view:"uploader",type:"icon",icon:"wxi-plus",css:"last-button-on-left-position",width:150,label:"Добавить файл",autosend:!0,upload:"/upload",on:{onAfterFileAdd:function(e){},onUploadComplete:e=>{e.hasOwnProperty("status")&&0===e.status?webix.message("Ошибка при загрузке изображения. Убедитесь, что размер файла не превышает 5Мб.","error"):(webix.message("Загрузка файла произошла успешно","success"),this.loadTable())},onFileUploadError:(e,t)=>{webix.message("Ошибка при загрузке изображения. Убедитесь, что размер файла не превышает 5Мб.","error")}}},{},{css:"disable_margin_btn_tbar",view:"button",type:"icon",icon:"fa fa-sync",width:56,click:()=>{this.loadTable()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:()=>{webix.toExcel($$(this.tableName),{filterHTML:!0,filename:"Медиафайлы"})}}]}}showToolBar(){$$(this.toolbarName).show()}setToolBar(){if(!$$(this.toolbarName)){$$("top-menu").addView(this.getToolBar())}this.showToolBar()}loadTable(){const e=$$(this.tableName);webix.extend($$(this.tableName),webix.ProgressBar),$$(this.tableName).showProgress(),$$(this.tableName).disable(),e.clearAll(),e.load("/mediafiles","json",(()=>{$$(this.tableName).hideProgress(),$$(this.tableName).enable()}))}loadData(){this.setToolBar(),this.loadTable()}}t.default=l},9587:(e,t,i)=>{"use strict";i.r(t),i.d(t,{EmptyRouter:()=>x,HashRouter:()=>p,JetApp:()=>m,JetView:()=>d,StoreRouter:()=>f,SubRouter:()=>u,UrlRouter:()=>$,errors:()=>O,plugins:()=>N});class o{}class s{constructor(e){this.webixJet=!0,this.webix=e,this._events=[],this._subs={},this._data={}}getRoot(){return this._root}destructor(){this._detachEvents(),this._destroySubs(),this._events=this._container=this.app=this._parent=this._root=null}setParam(e,t,i){if(this._data[e]!==t&&(this._data[e]=t,this._segment.update(e,t,0),i))return this.show(null)}getParam(e,t){const i=this._data[e];if(void 0!==i||!t)return i;const o=this.getParentView();return o?o.getParam(e,t):void 0}getUrl(){return this._segment.suburl()}getUrlString(){return this._segment.toString()}getParentView(){return this._parent}$$(e){if("string"==typeof e){const t=this.getRoot();return t.queryView((i=>(i.config.id===e||i.config.localId===e)&&i.$scope===t.$scope),"self")}return e}on(e,t,i){const o=e.attachEvent(t,i);return this._events.push({obj:e,id:o}),o}contains(e){for(const t in this._subs){const i=this._subs[t].view;if(i===e||i.contains(e))return!0}return!1}getSubView(e){const t=this.getSubViewInfo(e);if(t)return t.subview.view}getSubViewInfo(e){const t=this._subs[e||"default"];return t?{subview:t,parent:this}:"_top"===e?(this._subs[e]={url:"",id:null,popup:!0},this.getSubViewInfo(e)):this._parent?this._parent.getSubViewInfo(e):null}_detachEvents(){const e=this._events;for(let t=e.length-1;t>=0;t--)e[t].obj.detachEvent(e[t].id)}_destroySubs(){for(const e in this._subs){const t=this._subs[e].view;t&&t.destructor()}this._subs={}}_init_url_data(){const e=this._segment.current();this._data={},this.webix.extend(this._data,e.params,!0)}_getDefaultSub(){if(this._subs.default)return this._subs.default;for(const e in this._subs){const t=this._subs[e];if(!t.branch&&t.view&&"_top"!==e){const e=t.view._getDefaultSub();if(e)return e}}}_routed_view(){const e=this.getParentView();if(!e)return!0;const t=e._getDefaultSub();return!(!t&&t!==this)&&e._routed_view()}}function a(e){"/"===e[0]&&(e=e.substr(1));const t=e.split("/"),i=[];for(let e=0;e<t.length;e++){const o=t[e],s={};let a=o.indexOf(":");if(-1===a&&(a=o.indexOf("?")),-1!==a){const e=o.substr(a+1).split(/[\:\?\&]/g);for(const t of e){const e=t.split("=");s[e[0]]=decodeURIComponent(e[1])}}i[e]={page:a>-1?o.substr(0,a):o,params:s,isNew:!0}}return i}function l(e){const t=[];for(const i of e){t.push("/"+i.page);const e=r(i.params);e&&t.push("?"+e)}return t.join("")}function r(e){const t=[];for(const i in e)t.length&&t.push("&"),t.push(i+"="+encodeURIComponent(e[i]));return t.join("")}class n{constructor(e,t){this._next=1,this.route="string"==typeof e?{url:a(e),path:e}:e,this.index=t}current(){return this.route.url[this.index]}next(){return this.route.url[this.index+this._next]}suburl(){return this.route.url.slice(this.index)}shift(){return new n(this.route,this.index+this._next)}refresh(){const e=this.route.url;for(let t=this.index+1;t<e.length;t++)e[t].isNew=!0}toString(){const e=l(this.suburl());return e?e.substr(1):""}_join(e,t){let i=this.route.url;if(null===e)return i;const o=this.route.url;if(i=o.slice(0,this.index+(t?this._next:0)),e){i=i.concat(a(e));for(let e=0;e<i.length;e++)o[e]&&(i[e].view=o[e].view),o[e]&&i[e].page===o[e].page&&(i[e].isNew=!1)}return i}append(e){const t=this._join(e,!0);return this.route.path=l(t),this.route.url=t,this.route.path}show(e,t,i){const s=this._join(e,i);return new Promise(((e,i)=>{const a=l(s),r={url:s,redirect:a,confirm:Promise.resolve()},n=t?t.app:null;if(n){if(!n.callEvent("app:guard",[r.redirect,t,r]))return void i(new o)}r.confirm.catch((e=>i(e))).then((()=>{if(null!==r.redirect){if(r.redirect!==a)return n.show(r.redirect),void i(new o);this.route.path=a,this.route.url=s,e()}else i(new o)}))}))}size(e){this._next=e}split(){const e={url:this.route.url.slice(this.index+1),path:""};return e.url.length&&(e.path=l(e.url)),new n(e,0)}update(e,t,i){const o=this.route.url[this.index+(i||0)];if(!o)return this.route.url.push({page:"",params:{}}),this.update(e,t,i);""===e?o.page=t:o.params[e]=t,this.route.path=l(this.route.url)}}class d extends s{constructor(e,t){super(e.webix),this.app=e,this._children=[]}ui(e,t){const i=(t=t||{}).container||e.container,o=this.app.createView(e);return this._children.push(o),o.render(i,this._segment,this),"object"!=typeof e||e instanceof s?o:o.getRoot()}show(e,t){if(t=t||{},"object"==typeof e){for(const t in e)this.setParam(t,e[t]);e=null}else{if("/"===e.substr(0,1))return this.app.show(e);if(0===e.indexOf("./")&&(e=e.substr(2)),0===e.indexOf("../")){const i=this.getParentView();return i?i.show(e.substr(3),t):this.app.show("/"+e.substr(3))}const i=this.getSubViewInfo(t.target);if(i){if(i.parent!==this)return i.parent.show(e,t);if(t.target&&"default"!==t.target)return this._renderFrameLock(t.target,i.subview,e)}else if(e)return this.app.show("/"+e)}return this._show(this._segment,e,this)}_show(e,t,i){return e.show(t,i,!0).then((()=>(this._init_url_data(),this._urlChange()))).then((()=>{e.route.linkRouter&&(this.app.getRouter().set(e.route.path,{silent:!0}),this.app.callEvent("app:route",[e.route.path]))}))}init(e,t){}ready(e,t){}config(){this.app.webix.message("View:Config is not implemented")}urlChange(e,t){}destroy(){}destructor(){this.destroy(),this._destroyKids(),this._root.destructor(),super.destructor()}use(e,t){e(this.app,this,t)}refresh(){this.getUrl();return this.destroy(),this._destroyKids(),this._destroySubs(),this._detachEvents(),this._container.tagName&&this._root.destructor(),this._segment.refresh(),this._render(this._segment)}render(e,t,i){"string"==typeof t&&(t=new n(t,0)),this._segment=t,this._parent=i,this._init_url_data();const o="string"==typeof(e=e||document.body)?this.webix.toNode(e):e;return this._container!==o?(this._container=o,this._render(t)):this._urlChange().then((()=>this.getRoot()))}_render(e){const t=this.config();return t.then?t.then((t=>this._render_final(t,e))):this._render_final(t,e)}_render_final(e,t){let i,o=null,s=null,a=!1;if(this._container.tagName?s=this._container:(o=this._container,o.popup?(s=document.body,a=!0):s=this.webix.$$(o.id)),!this.app||!s)return Promise.reject(null);const l=this._segment.current(),r={ui:{}};this.app.copyConfig(e,r.ui,this._subs),this.app.callEvent("app:render",[this,t,r]),r.ui.$scope=this,!o&&l.isNew&&l.view&&l.view.destructor();try{if(o&&!a){const e=s,t=e.getParentView();t&&"multiview"===t.name&&!r.ui.id&&(r.ui.id=e.config.id)}this._root=this.app.webix.ui(r.ui,s);const e=this._root;a&&e.setPosition&&!e.isVisible()&&e.show(),o&&(o.view&&o.view!==this&&o.view!==this.app&&o.view.destructor(),o.id=this._root.config.id,this.getParentView()||!this.app.app?o.view=this:o.view=this.app),l.isNew&&(l.view=this,l.isNew=!1),i=Promise.resolve(this._init(this._root,t)).then((()=>this._urlChange().then((()=>(this._initUrl=null,this.ready(this._root,t.suburl()))))))}catch(e){i=Promise.reject(e)}return i.catch((e=>this._initError(this,e)))}_init(e,t){return this.init(e,t.suburl())}_urlChange(){this.app.callEvent("app:urlchange",[this,this._segment]);const e=[];for(const t in this._subs){const i=this._subs[t],o=this._renderFrameLock(t,i,null);o&&e.push(o)}return Promise.all(e).then((()=>this.urlChange(this._root,this._segment.suburl())))}_renderFrameLock(e,t,i){if(!t.lock){const o=this._renderFrame(e,t,i);o&&(t.lock=o.then((()=>t.lock=null),(()=>t.lock=null)))}return t.lock}_renderFrame(e,t,i){if("default"===e){if(this._segment.next())return this._createSubView(t,this._segment.shift());t.view&&t.popup&&(t.view.destructor(),t.view=null)}if(null!==i&&(t.url=i),t.route){if(null!==i)return t.route.show(i,t.view).then((()=>this._createSubView(t,t.route)));if(t.branch)return}let o=t.view;if(!o&&t.url){if("string"==typeof t.url)return t.route=new n(t.url,0),this._createSubView(t,t.route);"function"!=typeof t.url||o instanceof t.url||(o=new t.url(this.app,"")),o||(o=t.url)}if(o)return o.render(t,t.route||this._segment,this)}_initError(e,t){return this.app&&this.app.error("app:error:initview",[t,e]),!0}_createSubView(e,t){return this.app.createFromURL(t.current()).then((i=>i.render(e,t,this)))}_destroyKids(){const e=this._children;for(let t=e.length-1;t>=0;t--)e[t]&&e[t].destructor&&e[t].destructor();this._children=[]}}class c extends d{constructor(e,t){super(e,t),this._ui=t.ui}config(){return this._ui}}class u{constructor(e,t,i){this.path="",this.app=i}set(e,t){this.path=e;const i=this.app;i.app.getRouter().set(i._segment.append(this.path),{silent:!0})}get(){return this.path}}let h=!0;class w extends s{constructor(e){super((e||{}).webix||window.webix),this.config=this.webix.extend({name:"App",version:"1.0",start:"/home"},e,!0),this.app=this.config.app,this.ready=Promise.resolve(),this._services={},this.webix.extend(this,this.webix.EventSystem)}getUrl(){return this._subSegment.suburl()}getUrlString(){return this._subSegment.toString()}getService(e){let t=this._services[e];return"function"==typeof t&&(t=this._services[e]=t(this)),t}setService(e,t){this._services[e]=t}destructor(){this.getSubView().destructor(),super.destructor()}copyConfig(e,t,i){if((e instanceof s||"function"==typeof e&&e.prototype instanceof s)&&(e={$subview:e}),void 0!==e.$subview)return this.addSubView(e,t,i);t=t||(e instanceof Array?[]:{});for(const o in e){let a=e[o];if("function"==typeof a&&a.prototype instanceof s&&(a={$subview:a}),!a||"object"!=typeof a||a instanceof this.webix.DataCollection||a instanceof RegExp||a instanceof Map)t[o]=a;else if(a instanceof Date)t[o]=new Date(a);else{const e=this.copyConfig(a,a instanceof Array?[]:{},i);null!==e&&(t[o]=e)}}return t}getRouter(){return this.$router}clickHandler(e,t){if(e&&(t=t||e.target||e.srcElement)&&t.getAttribute){const i=t.getAttribute("trigger");if(i)return this._forView(t,(e=>e.app.trigger(i))),e.cancelBubble=!0,e.preventDefault();const o=t.getAttribute("route");if(o)return this._forView(t,(e=>e.show(o))),e.cancelBubble=!0,e.preventDefault()}const i=t.parentNode;i&&this.clickHandler(e,i)}getRoot(){return this.getSubView().getRoot()}refresh(){return this._subSegment?this.getSubView().refresh().then((e=>(this.callEvent("app:route",[this.getUrl()]),e))):Promise.resolve(null)}loadView(e){const t=this.config.views;let i=null;if(""===e)return Promise.resolve(this._loadError("",new Error("Webix Jet: Empty url segment")));try{t&&(i="function"==typeof t?t(e):t[e],"string"==typeof i&&(e=i,i=null)),i||(i="_blank"===e?{}:this._loadViewDynamic(e))}catch(t){i=this._loadError(e,t)}return i.then||(i=Promise.resolve(i)),i=i.then((e=>e.__esModule?e.default:e)).catch((t=>this._loadError(e,t))),i}_forView(e,t){const i=this.webix.$$(e);i&&t(i.$scope)}_loadViewDynamic(e){return null}createFromURL(e){let t;return t=e.isNew||!e.view?this.loadView(e.page).then((e=>this.createView(e,name))):Promise.resolve(e.view),t}createView(e,t){let i;if("function"==typeof e){if(e.prototype instanceof w)return new e({app:this,name:t,router:u});if(e.prototype instanceof s)return new e(this,{name:t});e=e(this)}return i=e instanceof s?e:new c(this,{name:t,ui:e}),i}show(e){return this.render(this._container,e||this.config.start)}trigger(e,...t){this.apply(e,t)}apply(e,t){this.callEvent(e,t)}action(e){return this.webix.bind((function(...t){this.apply(e,t)}),this)}on(e,t){this.attachEvent(e,t)}use(e,t){e(this,null,t)}error(e,t){if(this.callEvent(e,t),this.callEvent("app:error",t),this.config.debug)for(var i=0;i<t.length;i++)if(console.error(t[i]),t[i]instanceof Error){let e=t[i].message;0===e.indexOf("Module build failed")?(e=e.replace(/\x1b\[[0-9;]*m/g,""),document.body.innerHTML=`<pre style='font-size:16px; background-color: #ec6873; color: #000; padding:10px;'>${e}</pre>`):(e+="<br><br>Check console for more details",this.webix.message({type:"error",text:e,expire:-1}))}}render(e,t,i){this._container="string"==typeof e?this.webix.toNode(e):e||document.body;let o=null;!this.$router?(h&&"tagName"in this._container&&(this.webix.event(document.body,"click",(e=>this.clickHandler(e))),h=!1),"string"==typeof t&&(t=new n(t,0)),this._subSegment=this._first_start(t),this._subSegment.route.linkRouter=!0):o="string"==typeof t?t:this.app?t.split().route.path||this.config.start:t.toString();const s=this.getSubView(),a=this._subSegment,l=a.show(o,s).then((()=>this.createFromURL(a.current()))).then((t=>t.render(e,a))).then((e=>(this.$router.set(a.route.path,{silent:!0}),this.callEvent("app:route",[this.getUrl()]),e)));return this.ready=this.ready.then((()=>l)),l}getSubView(){if(this._subSegment){const e=this._subSegment.current().view;if(e)return e}return new d(this,{})}_first_start(e){this._segment=e;if(this.$router=new this.config.router((e=>setTimeout((()=>{this.show(e).catch((e=>{if(!(e instanceof o))throw e}))}),1)),this.config,this),this._container===document.body&&!1!==this.config.animation){const e=this._container;this.webix.html.addCss(e,"webixappstart"),setTimeout((()=>{this.webix.html.removeCss(e,"webixappstart"),this.webix.html.addCss(e,"webixapp")}),10)}if(e){if(this.app){const t=e,i=e.current().view;e.current().view=this,e.next()?(e.refresh(),e=e.split()):e=new n(this.config.start,0),t.current().view=i||this}}else{let t=this.$router.get();t||(t=this.config.start,this.$router.set(t,{silent:!0})),e=new n(t,0)}return e}_loadError(e,t){return this.error("app:error:resolve",[t,e]),{template:" "}}addSubView(e,t,i){const o=!0!==e.$subview?e.$subview:null,s=e.name||(o?this.webix.uid():"default");t.id=e.id||"s"+this.webix.uid();return(i[s]={id:t.id,url:o,branch:e.branch,popup:e.popup}).popup?null:t}}class p{constructor(e,t){this.config=t||{},this._detectPrefix(),this.cb=e,window.onpopstate=()=>this.cb(this.get())}set(e,t){if(this.config.routes){const t=e.split("?",2);for(const i in this.config.routes)if(this.config.routes[i]===t[0]){e=i+(t.length>1?"?"+t[1]:"");break}}this.get()!==e&&window.history.pushState(null,null,this.prefix+this.sufix+e),t&&t.silent||setTimeout((()=>this.cb(e)),1)}get(){let e=this._getRaw().replace(this.prefix,"").replace(this.sufix,"");if(e="/"!==e&&"#"!==e?e:"",this.config.routes){const t=e.split("?",2),i=this.config.routes[t[0]];i&&(e=i+(t.length>1?"?"+t[1]:""))}return e}_detectPrefix(){const e=this.config.routerPrefix;this.sufix="#"+(void 0===e?"!":e),this.prefix=document.location.href.split("#",2)[0]}_getRaw(){return document.location.href}}let g=!1;function b(e){if(g||!e)return;g=!0;const t=window;t.Promise||(t.Promise=e.promise);const i=e.version.split(".");10*i[0]+1*i[1]<53&&(e.ui.freeze=function(t){const i=t();return i&&i.then?i.then((function(t){return e.ui.$freeze=!1,e.ui.resize(),t})):(e.ui.$freeze=!1,e.ui.resize()),i});const o=e.ui.baselayout.prototype.addView,s=e.ui.baselayout.prototype.removeView,a={addView(e,t){if(this.$scope&&this.$scope.webixJet&&!e.queryView){const i=this.$scope,s={};e=i.app.copyConfig(e,{},s),o.apply(this,[e,t]);for(const e in s)i._renderFrame(e,s[e],null).then((()=>{i._subs[e]=s[e]}));return e.id}return o.apply(this,arguments)},removeView(){if(s.apply(this,arguments),this.$scope&&this.$scope.webixJet){const t=this.$scope._subs;for(const i in t){const o=t[i];e.$$(o.id)||(o.view.destructor(),delete t[i])}}}};e.extend(e.ui.layout.prototype,a,!0),e.extend(e.ui.baselayout.prototype,a,!0),e.protoUI({name:"jetapp",$init(t){this.$app=new this.app(t);const i=e.uid().toString();for(var o in t.body={id:i},this.$ready.push((function(){this.$app.render({id:i})})),this.$app){var s=this.$app[o];"function"!=typeof s||this[o]||(this[o]=s.bind(this.$app))}}},e.ui.proxy)}class m extends w{constructor(e){e.router=e.router||p,super(e),b(this.webix)}_loadViewDynamic(e){return e=e.replace(/\./g,"/"),i(2403)("./"+e)}}class f{constructor(e,t,i){this.storage=t.storage||i.webix.storage.session,this.name=t.storeName||t.id+":route",this.cb=e}set(e,t){this.storage.put(this.name,e),t&&t.silent||setTimeout((()=>this.cb(e)),1)}get(){return this.storage.get(this.name)}}class $ extends p{_detectPrefix(){this.prefix="",this.sufix=this.config.routerPrefix||""}_getRaw(){return document.location.pathname+(document.location.search||"")}}class x{constructor(e,t){this.path="",this.cb=e}set(e,t){this.path=e,t&&t.silent||setTimeout((()=>this.cb(e)),1)}get(){return this.path}}function _(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function v(e,t,i){for(var o in e)_(e,o)&&t.call(i||e,e[o],o,e)}function y(e){e="Warning: "+e,"undefined"!=typeof console&&console.error(e);try{throw new Error(e)}catch(e){}}var k=String.prototype.replace,C=String.prototype.split,F="||||",I=function(e){var t=e%10;return 11!==e&&1===t?0:2<=t&&t<=4&&!(e>=12&&e<=14)?1:2},T={arabic:function(e){if(e<3)return e;var t=e%100;return t>=3&&t<=10?3:t>=11?4:5},bosnian_serbian:I,chinese:function(){return 0},croatian:I,french:function(e){return e>1?1:0},german:function(e){return 1!==e?1:0},russian:I,lithuanian:function(e){return e%10==1&&e%100!=11?0:e%10>=2&&e%10<=9&&(e%100<11||e%100>19)?1:2},czech:function(e){return 1===e?0:e>=2&&e<=4?1:2},polish:function(e){if(1===e)return 0;var t=e%10;return 2<=t&&t<=4&&(e%100<10||e%100>=20)?1:2},icelandic:function(e){return e%10!=1||e%100==11?1:0},slovenian:function(e){var t=e%100;return 1===t?0:2===t?1:3===t||4===t?2:3}},S={arabic:["ar"],bosnian_serbian:["bs-Latn-BA","bs-Cyrl-BA","srl-RS","sr-RS"],chinese:["id","id-ID","ja","ko","ko-KR","lo","ms","th","th-TH","zh"],croatian:["hr","hr-HR"],german:["fa","da","de","en","es","fi","el","he","hi-IN","hu","hu-HU","it","nl","no","pt","sv","tr"],french:["fr","tl","pt-br"],russian:["ru","ru-RU"],lithuanian:["lt"],czech:["cs","cs-CZ","sk"],polish:["pl"],icelandic:["is"],slovenian:["sl-SL"]};function A(e){var t,i=(t={},v(S,(function(e,i){v(e,(function(e){t[e]=i}))})),t);return i[e]||i[C.call(e,/-/,1)[0]]||i.en}function V(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}var B=/\$/g,D="$$",P=/%\{(.*?)\}/g;function R(e,t,i,o){if("string"!=typeof e)throw new TypeError("Polyglot.transformPhrase expects argument #1 to be string");if(null==t)return e;var s,a=e,l=o||P,r="number"==typeof t?{smart_count:t}:t;if(null!=r.smart_count&&a){var n=C.call(a,F);s=n[function(e,t){return T[A(e)](t)}(i||"en",r.smart_count)]||n[0],a=s.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}return a=k.call(a,l,(function(e,t){return _(r,t)&&null!=r[t]?k.call(r[t],B,D):e}))}function W(e){var t=e||{};this.phrases={},this.extend(t.phrases||{}),this.currentLocale=t.locale||"en";var i=t.allowMissing?R:null;this.onMissingKey="function"==typeof t.onMissingKey?t.onMissingKey:i,this.warn=t.warn||y,this.tokenRegex=function(e){var t=e&&e.prefix||"%{",i=e&&e.suffix||"}";if(t===F||i===F)throw new RangeError('"'+F+'" token is reserved for pluralization');return new RegExp(V(t)+"(.*?)"+V(i),"g")}(t.interpolation)}W.prototype.locale=function(e){return e&&(this.currentLocale=e),this.currentLocale},W.prototype.extend=function(e,t){v(e,(function(e,i){var o=t?t+"."+i:i;"object"==typeof e?this.extend(e,o):this.phrases[o]=e}),this)},W.prototype.unset=function(e,t){"string"==typeof e?delete this.phrases[e]:v(e,(function(e,i){var o=t?t+"."+i:i;"object"==typeof e?this.unset(e,o):delete this.phrases[o]}),this)},W.prototype.clear=function(){this.phrases={}},W.prototype.replace=function(e){this.clear(),this.extend(e)},W.prototype.t=function(e,t){var i,o,s=null==t?{}:t;if("string"==typeof this.phrases[e])i=this.phrases[e];else if("string"==typeof s._)i=s._;else if(this.onMissingKey){o=(0,this.onMissingKey)(e,s,this.currentLocale,this.tokenRegex)}else this.warn('Missing translation for key: "'+e+'"'),o=e;return"string"==typeof i&&(o=R(i,s,this.currentLocale,this.tokenRegex)),o},W.prototype.has=function(e){return _(this.phrases,e)},W.transformPhrase=function(e,t,i){return R(e,t,i)};var j=W;function q(e,t,i){t.urls?i=t.urls[i]||i:t.param&&(i={[t.param]:i}),e.show(i)}const M={good:"check",error:"warning",saving:"refresh fa-spin"},E={good:"Ok",error:"Error",saving:"Connecting..."};function z(e,t,i){for(let o=0;o<i.length;o++)e[i[o]]=t[o+1]?t[o+1].page:""}let L=window.webix;L&&b(L);const N={UnloadGuard:function(e,t,i){t.on(e,"app:guard",(function(e,s,a){if(s===t||s.contains(t)){const e=i();a.confirm=!1===e?Promise.reject(new o):a.confirm.then((()=>e))}}))},Locale:function(e,t,o){const s=(o=o||{}).storage;let a=s?s.get("lang")||"en":o.lang||"en";function l(t,i,l){i.__esModule&&(i=i.default);const r={phrases:i};o.polyglot&&e.webix.extend(r,o.polyglot);const d=n.polyglot=new j(r);if(d.locale(t),n._=e.webix.bind(d.t,d),a=t,s&&s.put("lang",a),o.webix){const i=o.webix[t];i&&e.webix.i18n.setLocale(i)}return l?Promise.resolve():e.refresh()}function r(e,t){if(!1===o.path)return;const s=(o.path?o.path+"/":"")+e;l(e,i(796)("./"+s),t)}const n={getLang:function(){return a},setLang:r,setLangData:l,_:null,polyglot:null};e.setService("locale",n),r(a,!0)},Menu:function(e,t,i){const o=t.getSubViewInfo().parent,s=t.$$(i.id||i);let a=!1;s.attachEvent("onchange",(function(){a||q(o,i,this.getValue())})),s.attachEvent("onafterselect",(function(){if(!a){let e=null;s.setValue?e=this.getValue():s.getSelectedId&&(e=s.getSelectedId()),q(o,i,e)}})),t.on(e,"app:route",(function(){let e="";if(i.param)e=t.getParam(i.param,!0);else{const t=o.getUrl()[1];t&&(e=t.page)}e&&(a=!0,s.setValue&&s.getValue()!==e?s.setValue(e):s.select&&s.exists(e)&&s.getSelectedId()!==e&&s.select(e),a=!1)}))},Theme:function(e,t,i){const o=(i=i||{}).storage;let s=o?o.get("theme")||"flat-default":i.theme||"flat-default";const a={getTheme:()=>s,setTheme(t,i){const a=t.split("-"),l=document.getElementsByTagName("link");for(let e=0;e<l.length;e++){const i=l[e].getAttribute("title");i&&(i===t||i===a[0]?l[e].disabled=!1:l[e].disabled=!0)}e.webix.skin.set(a[0]),e.webix.html.removeCss(document.body,"theme-"+s),e.webix.html.addCss(document.body,"theme-"+t),s=t,o&&o.put("theme",t),i||e.refresh()}};e.setService("theme",a),a.setTheme(s,!0)},User:function(e,t,i){const o=(i=i||{}).login||"/login",s=i.logout||"/logout",a=i.afterLogin||e.config.start,l=i.afterLogout||"/login",r=i.ping||3e5,n=i.model;let d=i.user;const c={getUser:()=>d,getStatus:e=>e?n.status().catch((()=>null)).then((e=>{d=e})):null!==d,login:(t,i)=>n.login(t,i).then((t=>{if(d=t,!t)throw new Error("Access denied");e.callEvent("app:user:login",[d]),e.show(a)})),logout:()=>(d=null,n.logout().then((t=>(e.callEvent("app:user:logout",[]),t))))};function u(e,t){e===s?(c.logout(),t.redirect=l):e===o||c.getStatus()||(t.redirect=o)}e.setService("user",c),e.attachEvent("app:guard",(function(e,t,o){return!(!i.public||!i.public(e))||(void 0===d&&(o.confirm=c.getStatus(!0).then((()=>u(e,o)))),u(e,o))})),r&&setInterval((()=>c.getStatus(!0)),r)},Status:function(e,t,i){let o="good",s=0,a=!1,l=i.expire;l||!1===l||(l=2e3);const r=i.texts||E,n=i.icons||M;function d(e){const s=t.$$(i.target);s&&(e||(e="<div class='status_"+o+"'><span class='webix_icon fa-"+n[o]+"'></span> "+r[o]+"</div>"),s.setHTML(e))}function c(){s--,p("good")}function u(e){s--,p("error",e)}function h(e){s++,p("saving"),e&&e.then&&e.then(c,u)}function w(){0===s&&d(" ")}function p(t,i){s<0&&(s=0),"saving"===t?(o="saving",d()):(a="error"===t,0===s&&(o=a?"error":"good",a?e.error("app:error:server",[i.responseText||i]):l&&setTimeout(w,l),d()))}function g(i){const o=e.webix.dp(i);o&&(t.on(o,"onAfterDataSend",h),t.on(o,"onAfterSaveError",((e,t,i)=>u(i))),t.on(o,"onAfterSave",c))}"string"==typeof i&&(i={target:i}),e.setService("status",{getStatus:function(){return o},setStatus:p,track:g}),i.remote&&t.on(e.webix,"onRemoteCall",h),i.ajax&&t.on(e.webix,"onBeforeAjax",((e,t,i,o,s,a,l)=>{h(l)})),i.data&&g(i.data)},UrlParam:function(e,t,i){const o=i.route||i,s={};t.on(e,"app:urlchange",(function(e,i){t===e&&(z(s,i.suburl(),o),i.size(o.length+1))}));const a=t.setParam,l=t.getParam;t.setParam=function(e,i,l){const r=o.indexOf(e);return r>=0?(s[e]=i,this._segment.update("",i,r+1),l?t.show(null):void 0):a.call(this,e,i,l)},t.getParam=function(e,t){const i=s[e];return void 0!==i?i:l.call(this,e,t)},z(s,t.getUrl(),o)}},O={NavigationBlocked:o},H=window;H.Promise||(H.Promise=H.webix.promise)},2968:(e,t,i)=>{"use strict";i.d(t,{Z:()=>o});class o extends chat.services.Backend{constructor(e){setInterval((()=>{this.chats()}),1e4),super(e)}messages(e){return webix.ajax().get("/chat/users/"+e+"/messages").then()}users(){return webix.ajax().get("/chat/users")}resetCounter(e){this.updateSunUnreadCount(this.sumUnread($$("chatWindowForm").getService("local").chats().serialize())),webix.ajax().post("/chat/users/"+e+"/counter").then((t=>super.resetCounter(e)))}addMessage(e,t,i){return this.resetCounter(e),webix.ajax().post("/chat/users/"+e+"/messages",{content:t,recipient_id:e})}addDirect(){}addChat(e){return Promise.resolve({date:new Date,id:e,message:"Hi there",name:"Today's meeting",unread_count:1,users:[e,12]})}chats(){return webix.ajax().get("/chat/chats").then((e=>{const t=e.json();return this.updateSunUnreadCount(this.sumUnread(t)),$$("chatWindowForm").queryView("list").refresh(),Promise.resolve(e.json())}))}updateChat(e,t,i){return super.updateChat(e,t,i)}sumUnread(e){let t=0;return(e=e.filter((e=>e.unread_count>0))).forEach((e=>{t+=e.unread_count;let i=$$("chatWindowForm").getService("local").chats();i.getItem(e.id)&&(i.moveTop(e.id),$$("chatWindowForm").getService("local").chats().updateItem(e.id,{unread_count:e.unread_count,message:e.message}))})),t}updateSunUnreadCount(e){$$("chatBadge")&&($$("chatBadge").config.badge=e,$$("chatBadge").refresh())}}},2557:(e,t,i)=>{"use strict";i.d(t,{Z:()=>o});class o extends chat.views["messages/toolbar"]{init(e){super.init(e)}config(){const e=super.config();return e.elements.map((e=>{e.hasOwnProperty("onClick")&&(e.onClick=()=>{})})),e.elements.pop(),e.elements.pop(),e}}},9380:(e,t,i)=>{"use strict";i.d(t,{Z:()=>o});class o extends chat.views.sidebar{init(e){super.init(e)}config(){const e=super.config();return e.rows.splice(0,1),e}}},8421:()=>{webix.i18n.locales["en-US"]={groupDelimiter:",",groupSize:3,decimalDelimiter:".",decimalSize:2,dateFormat:"%m/%d/%Y",timeFormat:"%h:%i %A",longDateFormat:"%d %F %Y",fullDateFormat:"%m/%d/%Y %h:%i %A",am:["am","AM"],pm:["pm","PM"],price:"${obj}",priceSettings:{groupDelimiter:",",groupSize:3,decimalDelimiter:".",decimalSize:2},fileSize:["b","Kb","Mb","Gb","Tb","Pb","Eb"],calendar:{monthFull:["January","February","March","April","May","June","July","August","September","October","November","December"],monthShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayFull:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],hours:"Hours",minutes:"Minutes",done:"Done",clear:"Clear",today:"Today"},dataExport:{page:"Page",of:"of"},PDFviewer:{of:"of",automaticZoom:"Automatic Zoom",actualSize:"Actual Size",pageFit:"Page Fit",pageWidth:"Page Width",pageHeight:"Page Height"},aria:{calendar:"Calendar",increaseValue:"Increase value",decreaseValue:"Decrease value",navMonth:["Previous month","Next month"],navYear:["Previous year","Next year"],navDecade:["Previous decade","Next decade"],dateFormat:"%d %F %Y",monthFormat:"%F %Y",yearFormat:"%Y",hourFormat:"Hours: %h %A",minuteFormat:"Minutes: %i",removeItem:"Remove item",pages:["First page","Previous page","Next page","Last page"],page:"Page",headermenu:"Header menu",openGroup:"Open column group",closeGroup:"Close column group",closeTab:"Close tab",showTabs:"Show more tabs",resetTreeMap:"Reset tree map",navTreeMap:"Level up",nextTab:"Next tab",prevTab:"Previous tab",multitextSection:"Add section",multitextextraSection:"Remove section",showChart:"Show chart",hideChart:"Hide chart",resizeChart:"Resize chart"},richtext:{underline:"Underline",bold:"Bold",italic:"Italic"},combo:{select:"Select",selectAll:"Select all",unselectAll:"Unselect all"},message:{ok:"OK",cancel:"Cancel"}}},3134:()=>{webix.i18n.locales["ru-RU"]={groupDelimiter:" ",groupSize:3,decimalDelimiter:",",decimalSize:2,dateFormat:"%d.%m.%Y",timeFormat:"%H:%i",longDateFormat:"%d %F %Y",fullDateFormat:"%d.%m.%Y %H:%i",price:"{obj} руб.",priceSettings:null,calendar:{monthFull:["Январь","Февраль","Март","Апрель","Maй","Июнь","Июль","Август","Сентябрь","Oктябрь","Ноябрь","Декабрь"],monthShort:["Янв","Фев","Maр","Aпр","Maй","Июн","Июл","Aвг","Сен","Окт","Ноя","Дек"],dayFull:["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"],dayShort:["Вс","Пн","Вт","Ср","Чт","Пт","Сб"],hours:"Часы",minutes:"Минуты",done:"Гoтовo",clear:"Очистить",today:"Сегодня"},dataExport:{page:"Страница",of:"из"},PDFviewer:{of:"из",automaticZoom:"Автоматический зум",actualSize:"Настоящий размер",pageFit:"Размер страницы",pageWidth:"Ширина страницы",pageHeight:"Высота страницы"},aria:{calendar:"Календарь",increaseValue:"Увеличить значение",decreaseValue:"Уменьшить значение",navMonth:["Предыдущий месяц","Следующий месяц"],navYear:["Предыдущий год","Следующий год"],navDecade:["Предыдущие десять лет","Следующие десять лет"],dateFormat:"%d %F %Y",monthFormat:"%F %Y",yearFormat:"%Y",hourFormat:"Часы: %H",minuteFormat:"Минуты: %i",removeItem:"Удалить элемент",pages:["Первая страница","Предыдущая страница","Следующая страница","Последняя страница"],page:"Страница",headermenu:"Меню шапки таблицы",openGroup:"Развернуть группу столбцов",closeGroup:"Свернуть группу столбцов",closeTab:"Закрыть вкладку",showTabs:"Показать больше вкладок",resetTreeMap:"Вернуться к первоначальному представлению",navTreeMap:"Перейти на уровень выше",nextTab:"Следующая вкладка",prevTab:"Предыдущая вкладка",multitextSection:"Добавить элемент",multitextextraSection:"Удалить элемент",showChart:"Показать чарт",hideChart:"Спрятать чарт",resizeChart:"Изменить размер чарта"},richtext:{underline:"Подчеркивание",bold:"Жирный",italic:"Курсив"},combo:{select:"Выбрать",selectAll:"Выбрать все",unselectAll:"Сброс выбора"},message:{ok:"OK",cancel:"Отмена"}}},796:(e,t,i)=>{var o={"./en":8421,"./en.js":8421,"./ru":3134,"./ru.js":3134};function s(e){var t=a(e);return i(t)}function a(e){if(!i.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}s.keys=function(){return Object.keys(o)},s.resolve=a,e.exports=s,s.id=796},3559:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.phonesLoaded=0,this.intervalReportsLoaded=0,this.groupedAgentsReportsLoaded=0,this.extOutgoingReportsLoaded=0,this.extIncomingReportsLoaded=0,this.dailyReportsLoaded=0,this.hourlyReportsLoaded=0,this.compareCallsLoaded=0,this.channelsLoaded=0,this.queuesLoaded=0,this.contactGroupsLoaded=0,this.groupsLoaded=0,this.usersLoaded=0,this.aliasesLoaded=0,this.setupLoaded=0,this.clientsLoaded=0,this.outgoingcampaignsLoaded=0,this.extIncomingExternalReportsLoaded=0,webix.filterSuggest={fitMaster:!1,width:250,body:{template:"#id#"},on:{onBeforeShow:function(){var e=this.getList(),t=[];e.data.each((function(e){t.push(e.id)}));var i=webix.html.getTextSize(t,"webix_list_item").width+100;this.define("width",i),this.resize()}}},webix.ui.datafilter.rowCount=webix.extend({refresh:function(e,t,i){t.firstChild.innerHTML="Итого:  "+e.count()||0}},webix.ui.datafilter.summColumn),webix.ui.datafilter.rowCount=webix.extend({refresh:function(e,t,i){t.firstChild.innerHTML="Итого: "+e.count()||0}},webix.ui.datafilter.summColumn),webix.protoUI({name:"my_suggest1",$init:function(e){var t=e.body.rows.length;t>1&&(e.body.rows[t]={view:"counter",step:10,value:0,label:"От",id:e.id+"_from"},e.body.rows[t+1]={view:"counter",step:10,value:0,label:"До",id:e.id+"_to"},e.body.rows[t+2]={view:"button",label:"Применить",click:()=>{if(e.id&&$$(e.id+"_from").getValue()>$$(e.id+"_to").getValue())return webix.message({type:"error",text:"Время ДО не может быть меньше времени ОТ"}),!1;e&&e.table?$$(e.table).filterByAll():$$("cdr_reports").filterByAll()}})}},webix.ui.checksuggest),webix.protoUI({name:"select_suggest",$init:function(e){var t=e.body.rows.length;t>1&&(e.body.rows[t]={view:"button",label:"Очистить все",click:()=>{$$(this.config.master).setValue()}})}},webix.ui.checksuggest),webix.ui.datafilter.sum_duration=webix.extend({refresh:function(e,t,i){e.config.serverFooter&&e.config.serverFooter.sum_duration&&(t.firstChild.innerHTML=e.config.serverFooter.sum_duration)}},webix.ui.datafilter.summColumn),webix.ui.datafilter.sum_billsec=webix.extend({refresh:function(e,t,i){if(e.config.calls){let i=0,o=0;e.config.calls.map((e=>{i+=e.talk,e.talk&&o++}));const s=webix.guiutils.roundNumber(i/o,2);t.firstChild.innerHTML=s||""}}},webix.ui.datafilter.summColumn),webix.ui.datafilter.count_answered=webix.extend({refresh:function(e,t,i){e.config.serverFooter&&e.config.serverFooter.total&&e.config.serverFooter.count_answered&&(t.firstChild.innerHTML="ASR "+webix.guiutils.roundNumber(e.config.serverFooter.count_answered/e.config.serverFooter.total*100,2)+" %")}},webix.ui.datafilter.summColumn),webix.ui.datafilter.pdd=webix.extend({refresh:function(e,t,i){if(e.config.calls){let i=0;e.config.calls.map((e=>{i+=e.hold})),t.firstChild.innerHTML="ср. время ожидания ";const o=webix.guiutils.roundNumber(i/e.config.calls.length,2);t.firstChild.innerHTML+=o||""}}},webix.ui.datafilter.summColumn),webix.ui.datafilter.summTotal=webix.extend({refresh:function(e,t,i){var o=e.count();o&&0!=o&&1e5!=o?(t.firstChild.innerHTML="<span class='color_footer_totals'>"+o+"</span> звонков",$$("cdr_excel_button").show(),this.loaded||$$("cdr_reports")&&($$("cdr_reports").load("/cdr/list"),this.loaded=1)):($$("cdr_excel_button").hide(),t.firstChild.innerHTML="")}},webix.ui.datafilter.summColumn),webix.ui.datafilter.playback=webix.extend({refresh:function(e,t,i){}},webix.ui.datafilter.summColumn),webix.ui.datafilter.customPlayback={getValue:function(){},setValue:function(){},refresh:function(e,t,i){t.onchange=function(){console.log("On change...")},t.onclick=function(){console.log("On click...")}},render:function(e,t){return console.log("Render..."),"..."}},webix.proxy.calldatePartialLoad={$proxy:!0,load:function(e,t){if(t&&(t.filter||t.sort)){var i=this.source+(-1==this.source.indexOf("?")?"?":"&"),o=[];for(var s in t)"filter"!=s&&"sort"!=s&&o.push(s+"="+t[s]),"start"==s&&0==t[s]&&$$("cdr_reports").clearAll();t.sort&&o.push("sort["+t.sort.id+"]="+encodeURIComponent(t.sort.dir)),t.filter&&(t.filter.hold=JSON.stringify({from:$$(e.getFilter("hold").config.suggest+"_from").getValue(),to:$$(e.getFilter("hold").config.suggest+"_from").getValue()})),t.filter.talk=JSON.stringify({from:$$("$my_suggest12_from").getValue(),to:$$("$my_suggest12_to").getValue()});for(let e in t.filter){let i=t.filter[e];if("object"==typeof i)if("time"===e){const t=JSON.stringify(i.start).slice(1,-1);i.start=JSON.stringify(i.start).slice(1,-1);let s="";i.end&&(s=JSON.stringify(i.end).slice(1,-1),i.end=JSON.stringify(i.end).slice(1,-1)),o.push("filter["+e+"]="+encodeURIComponent(JSON.stringify(i))),i.start=new Date(t),""!==s&&(i.end=new Date(s))}else o.push("filter["+e+"]="+encodeURIComponent(JSON.stringify(i)));else""!==i&&o.push("filter["+e+"]="+encodeURIComponent(i))}var a=0,l=0;return $$("cdr_reports").data.each((function(e){e&&e.time&&(a=e.time,l++)})),o.push("lcd="+encodeURIComponent(a)),o.push("lli="+encodeURIComponent(l)),i+=o.join("&"),webix.ajax().get(i)}return webix.ajax().get(this.source,t)}},webix.proxy.outgoingArchive={$proxy:!0,load:function(){this.source.includes("list")&&$$("outgoingcampaigns").clearAll();let e=this.source;return webix.outgoingcampaignArchive&&(e+="?filter[archive]=1"),webix.ajax().get(e)}}}hideAllView(){const e=$$("sidebar").serialize();e.push({id:"chat"}),e.forEach((e=>{$$(e.id)&&$$(e.id)&&($$(e.id).hide(),webix.guiutils.hideAllToolbars()),e.data&&e.data.forEach((e=>{$$(e.id)&&$$(e.id).hide()}))}))}loadPhoneReport(){$$("phoneExcelButton").show()}showHideView(e,t=0){if("outgoingcampaign_archive"===e&&(e="outgoingcampaign"),$$(e)){this.hideAllView();const i=webix.Manager.getComponent(e);"object"==typeof i&&i.loadData(),parseInt(t)?$$(e).hide():$$(e).show()}else console.error("viewId "+e+" is not defined")}}},3264:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.id="appFilterBody",this.additonalsBodyId="appFilterAdditionalBody",this.body={},this.result=[],this.defaultHeader="Панель поиска",this.reset}setReset(e){this.reset=e}setBody(e,t){if($$("defaultsForReports").hide(),$$("defaultsForLostCalls").hide(),"object"==typeof t&&t.hasOwnProperty("id")){for(let e in this.body)this.body[e].id&&$$(this.body[e].id)&&$$(this.body[e].id).hide();this.body[e]&&this.body[e].id&&$$(this.body[e].id)?$$(this.body[e].id).show():($$(this.additonalsBodyId).addView(t),this.body[e]=t)}t.rows?($$("appFilterAdditionalBody").show(),$$("line_label_first").show()):($$("appFilterAdditionalBody").hide(),$$("line_label_first").hide())}setIntervalToWeek(){$$("reportDateRange").setValue({start:webix.Date.add(webix.startDayDateTime,-1,"week"),end:webix.endDayDateTime})}hide(){$$("filterCol")&&$$("filterCol").hide()}show(){$$("filterCol")&&($$("filterCol").show(),$$("dstFilters").show(),$$("srcFilters").show(),$$("queueFilters").show(),$$("filterReports").show(),$$("queueReports").show(),$$("defaultsForTraffic").hide())}setSubmit(e){$$(this.id).detachEvent("onSubmit"),$$(this.id).attachEvent("onSubmit",e)}getTextValues(e){if(e)for(let t in e)"function"==typeof e[t].getText&&e[t].getText()?this.result.push(e[t].getText()):e[t].getChildViews()&&this.getTextValues(e[t].getChildViews())}updateHeader(){let e=$$(this.id).getValues();this.result=[];for(let t in e)e[t]&&$$(t)&&$$(t).getText()&&this.result.push($$(t).getText());this.getTextValues($$(this.id).getChildViews())}setHeader(e){$$("appFilterContent").define("header",e),$$("appFilterContent").refresh()}submit(){$$("appFilterBody").callEvent("onSubmit"),this.updateHeader()}resetDefaultReport(){$$("queueReports").setValue(""),$$("filterReports").setValue("")}resetDefaultTraffic(){$$("srcFilters").setValue(""),$$("dstFilters").setValue(""),$$("queueFilters").setValue(""),$$("groupByUUUID").setValue("")}getView(){return{id:"appFilter",multi:!0,view:"accordion",css:"webix_dark",cols:[{width:380,header:"Панель поиска",id:"appFilterContent",body:{rows:[{view:"form",complexData:!0,id:"appFilterBody",elements:[{rows:[{view:"daterangepicker",id:"reportDateRange",labelWidth:100,hidden:!0,label:"Период",timepicker:!0,labelPosition:"top",format:"%d.%m.%Y %H:%i",value:{start:webix.Date.add(webix.startDayDateTime,-1,"week"),end:webix.endDayDateTime},suggest:{view:"daterangesuggest",body:{timepicker:!0,calendar:{weekNumber:!0,on:{onAfterZoom(e){-1===e&&(this.$timeSelectionActive=!0)},onBeforeDateSelect(e){if(this.$timeSelectionActive)this.$timeSelectionActive=!1;else{let t=$$("reportDateRange").getValue();t.start&&t.end?e.setHours(0,0,0):e.setHours(23,59,59)}}}},icons:[{template:function(){return"<span role='button' tabindex='0' class='webix_cal_icon_today webix_cal_icon'>"+webix.i18n.calendar.today+"</span>"},on_click:{webix_cal_icon_today:function(){let e=new Date,t=new Date;e.setHours(23,59,59),t.setHours(0,0,0),this.addToRange(t),this.addToRange(e),this.callEvent("onTodaySet",[this.getValue()])}}},{template:function(){return"<span role='button' tabindex='0' class='webix_cal_icon_clear webix_cal_icon'>"+webix.i18n.calendar.clear+"</span>"},on_click:{webix_cal_icon_clear:function(){this.setValue(""),this.callEvent("onDateClear",[])}}}]}},on:{onChange:function(e){e.start&&($$("startDate_hourly_load")&&$$("startDate_hourly_load").setValue(e.start),$$("startDate_compare_calls")&&$$("startDate_compare_calls").setValue(e.start),$$("date_ext_dash")&&$$("date_ext_dash").setValue({start:e.start,end:e.end}),$$("cdr_reports")&&$$("cdr_reports").getFilter("time")&&($$("cdr_reports").getFilter("time").config.value=e))}}},{id:"defaultsForReports",hidden:!0,rows:[{id:"queueReports",view:"richselect",labelPosition:"top",label:"Очередь",labelWidth:100,options:"/legacy/grouped_queues_name/short"},{id:"filterReports",view:"richselect",labelPosition:"top",label:"Тип звонков",labelWidth:100,options:[{id:1,value:"Входящие - все"},{id:2,value:"Входящие - обслуженные"},{id:3,value:"Входящие - необслуженные"},{id:4,value:"Исходящие"}]}]},{id:"defaultsForTraffic",hidden:!0,rows:[{id:"srcFilters",view:"text",type:"search",labelPosition:"top",labelWidth:100,label:"Источник"},{id:"dstFilters",view:"text",type:"search",labelPosition:"top",labelWidth:100,label:"Номер"},{id:"queueFilters",view:"richselect",type:"search",labelPosition:"top",labelWidth:100,label:"Очередь",options:"/queues/list/short?nameasvalue=1"},{id:"groupByUUID",view:"checkbox",type:"search",labelPosition:"left",labelWidth:235,label:"Группировка по уникальным ID"}]},{id:"defaultsForLostCalls",hidden:!0,rows:[{id:"queueReportsMultiSelect",view:"multiselect",labelPosition:"top",label:"Очередь",labelWidth:100,options:"/legacy/grouped_queues_name/short"}]},{view:"label",id:"line_label_first",template:'<hr style="background-color: transparent">',height:20}]},{id:"appFilterAdditionalBody",rows:[]},{rows:[{view:"label",id:"line_label_last",template:'<hr style="background-color: transparent">',height:20},{cols:[{view:"button",type:"icon",icon:"fa fa-trash",label:"Сбросить все",width:155,click:()=>{"function"==typeof this.reset&&(this.reset(),this.submit())}},{},{view:"button",type:"icon",icon:"fa fa-search",width:155,label:"Применить",click:()=>{this.submit()}}]}]}],inputConfig:{labelAlign:"left"},on:{onSubmit:function(){}}},{height:0}]}}],on:{onAfterCollapse:e=>{this.updateHeader(),this.result.length&&this.setHeader(this.result.join(","))},onAfterExpand:e=>{this.setHeader(this.defaultHeader)}}}}}},7795:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>c});var o=i(9587),s=i(7291),a=i(7155),l=i(4710),r=i(5315),n=i(5116),d=i(8257);class c extends o.JetView{config(){return{css:"top-menu",cols:[{view:"button",type:"icon",icon:"fa fa-bars",align:"left",css:"app_button menu-burger-button",click:function(){$$("sidebar").toggle(),$$("sidebar").getState().collapsed?$$("logobox").hide():$$("logobox").show()}},{type:"header",borderless:!0,height:56,width:152,id:"logobox",template:"<img src='./assets/imgs/logo.png' valign='middle' class='logo' style=\"margin-left: -18px;\"><font class='logo_text' style=\"vertical-align: middle; font-weight: bold;\" > PBX</font>"},{view:"template",id:"app:title",template:"#title#",css:"pbx-title",autowidth:!0},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",id:"phoneExcelButton",hidden:!1,click:function(){webix.toExcel($$("phone"),{filterHTML:!0,filename:"Телефоны"})}},{id:"operators_work_report_toolbar",hidden:!0,cols:[{id:"search_operators_work_report",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",click:function(){webix.guiutils.contact_operators_work_report_refresh()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("operators_work_report"),{filterHTML:!0,filename:"Operators"})}},{}]},a.default,l.default,groups_toolbar,r.default,n.default,d.default,{},{height:56,id:"person_template",css:"header_person",borderless:!0,width:200,template:function(e){var t="<div style='height:80%;width:80%;margin-top:0;float: right;' onclick='webix.$$(\"profilePopup\").show(this)'>";return t+="<img class='photo' src='./assets/imgs/photos/4.png' width='30' /><span class='name'>"+webix.auth.getFullname()+"</span>",t+="<span class='webix_icon wxi-angle-down'></span></div>"}}]}}init(){this.win2=this.ui(s.default)}}},261:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(9587);class s extends o.JetView{init(){}getRows(){let e=[];try{for(let t in webix.Manager.getComponents())webix.Manager.getComponents()[t].roleAllowed()&&webix.Manager.getComponents()[t].roleAllowed().length?webix.auth.isAllowedRoles(webix.Manager.getComponents()[t].roleAllowed())&&e.push(webix.Manager.getComponents()[t].getView()):e.push(webix.Manager.getComponents()[t].getView())}catch(e){console.log(e)}return e}config(){return{rows:this.getRows()}}}},1354:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>w});var o=i(9587),s=i(261),a=i(7713),l=i(7291),r=i(7155),n=i(4710),d=i(5315),c=i(5116),u=i(8257),h=i(2122);class w extends o.JetView{config(){return{id:"menuBar",rows:[{css:"top-menu",id:"top-menu",cols:[{view:"button",type:"icon",icon:"fa fa-bars",width:48,align:"left",css:"app_button menu-burger-button",click:function(){$$("sidebar").toggle(),$$("sidebar").getState().collapsed?$$("logobox").hide():$$("logobox").show()}},{type:"header",borderless:!0,height:56,width:152,id:"logobox",template:"<img src='./assets/imgs/logo.png' valign='middle' class='logo' style=\"margin-left: -17px;\">"},{view:"template",id:"app:title",template:"",css:"pbx-title",width:1},{height:56,id:"person_template",css:"header_person top-menu-right-item",view:"button",width:64,borderless:!0,tooltip:webix.auth.getFullname(),template:function(e){var t="<div onclick='webix.win2.showPopup()'>";return t+=webix.auth.getPhoto()?"<img class='photo' src='/photos/"+webix.auth.getPhoto()+"' width='30' />":"<img class='photo' src='./assets/imgs/photos/4.png' width='30' />",t+="</div>"}},{view:"icon",id:"chatBadge",icon:"fa fa-comment",badge:0,css:"header_person top-menu-right-item",click:()=>{(new h.ChatModal).show()}},r.default,n.default,d.default,c.default,u.default]},{cols:[{id:"menuCol",rows:[a.default]},{id:"filterCol",rows:[webix.AppFilter.getView()]},{id:"bodyCol",rows:[s.default]}]}]}}init(){webix.win2=this.ui(l.default),webix.uiForUseModals=this.ui}}},4551:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>L});var o=i(5021),s=i(1293),a=i(6068),l=i(7824),r=i(2101),n=i(3202),d=i(8830),c=i(8733),u=i(3283),h=i(6232),w=i(7933),p=i(8948),g=i(2482),b=i(8075),m=i(530),f=i(7798),$=i(1318),x=i(9409),_=i(4909),v=i(7719),y=i(5733),k=i(6846),C=i(8354),F=i(4320),I=i(8555),T=i(480),S=i(2172),A=i(4938),V=i(3016),B=i(9410),D=i(3454),P=i(393),R=i(5663),W=i(2223),j=i(6020),q=i(8495),M=i(1331),E=i(252),z=i(79);class L{constructor(e,t){this.components=[]}setComponent(e,t){this.components[e]=t}getComponents(){return this.components}getComponent(e){return this.components[e]}initViews(e){(new o.default).getView(),(new s.default).getView(),(new a.default).getView(),(new l.default).getView(),(new r.default).getView(),(new n.default).getView(),(new d.default).getView(),(new c.default).getView(),(new u.default).getView(),(new h.default).getView(),(new w.default).getView(),(new p.default).getView(),(new g.default).getView(),(new b.default).getView(),(new m.default).getView(),(new f.default).getView(),(new $.default).getView(),(new x.default).getView(),(new _.default).getView(),(new v.default).getView(),new C.default(e).getView(),(new y.default).getView(),(new k.default).getView(),new F.default(e).getView(),(new I.default).getView(),(new T.default).getView(),(new S.default).getView(),(new A.default).getView(),(new V.default).getView(),(new B.default).getView(),(new D.default).getView(),(new P.default).getView(),(new R.default).getView(),(new W.default).getView(),(new j.default).getView(),(new q.default).getView(),(new M.default).getView(),(new E.default).getView(),new z.default(e).getView()}}},2836:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var o=i(9587);class s extends o.JetView{config(){return{view:"popup",id:"langSelector",width:300,padding:0,css:"submenu_language",body:{type:"clean",borderless:!0,rows:[{view:"list",autoheight:!0,data:[{id:"en",value:"English"},{id:"ru",value:"Russian"}],type:{height:45,template:" <img class='flag' src='assets/imgs/photos/#id#.png' /><span class='text'>#value#</span>"},select:!0,on:{onSelectChange:()=>this.toggleLanguage()}}]},on:{onShow:function(){const e=this.$scope.app.getService("locale");this.queryView({view:"list"}).select(e.getLang())}}}}showWindow(){this.getRoot().show()}toggleLanguage(){const e=this.app.getService("locale"),t=this.getRoot().queryView({view:"list"}).getSelectedId();t!=e.getLang()&&(e.setLang(t),location.reload())}}const a=s},7291:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(9587);class s extends o.JetView{config(){return{view:"submenu",id:"profilePopup",css:"top-context-menu",width:150,padding:0,top:49,right:0,data:[{id:"settings",icon:"",value:"Настройки"},{id:"logout",icon:"sign-out",value:"Выйти"}],on:{onMenuItemClick:function(e){"logout"==e?webix.auth.logout():"settings"==e&&webix.auth.settings()}},type:{template:function(e){return e.type?"<div class='separator'></div>":"<span class='webix_icon alerts fa-"+e.icon+"'></span><span>"+e.value+"</span>"}}}}showPopup(){this.getRoot().show()}}},5006:(e,t,i)=>{"use strict";i.r(t),i.d(t,{BlacklistWindow:()=>s});var o=i(9587);class s extends o.JetView{static get userStates(){return[{id:"disconnect",value:"Сброс"},{id:"transfer",value:"Перевод"}]}config(){const e=this.getThis();return{view:"window",id:"add-win-blacklist",position:"center",maxWidth:700,css:"window-label-left",resize:!1,move:!0,modal:!0,borderless:!0,head:{height:450,minHeight:450,width:700,borderless:!0,rows:[{elementsConfig:{labelWidth:100},view:"form",id:"add-form-blacklist",scroll:!0,minHeight:450,height:390,borderless:!0,elements:[{cols:[{view:"tabview",borderless:!0,tabbar:{optionWidth:180},cells:[{id:"settings",header:"Данные номера",body:{padding:17,minHeight:450,width:700,rows:[{view:"text",name:"id",label:"id",value:0,hidden:!0},{view:"text",name:"phone",label:"Телефон",inputAlign:"left",labelWidth:150,required:!0,width:650,placeholder:"Введите телефон"},{view:"select",name:"action",id:"blacklist.action",label:"Действие",inputAlign:"left",labelWidth:150,required:!0,width:650,placeholder:"Выберите действие",options:s.userStates,on:{onChange:e=>{}}},{view:"text",name:"comment",label:"Описание",inputAlign:"left",labelWidth:150,width:650,placeholder:"Введите описание"},{view:"text",name:"message",id:"blacklist.message",label:"Сообщение",inputAlign:"left",labelWidth:150,width:650,placeholder:"Введите сообщение перед сбросом"},{view:"text",id:"blacklist.number",name:"number",label:"Номер",inputAlign:"left",labelWidth:150,width:650,placeholder:"Введите номер для перевода"}]}}],on:{onBeforeTabClick:function(e){}}},{rows:[{view:"icon",icon:"wxi-close",css:"window_close",click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("add-win-blacklist").close()}})}}]}]}],rules:{}},{padding:17,margin:10,cols:[{css:"custom_trash_button",view:"button",label:"Копировать",type:"icon",hidden:void 0===$$("blacklist").getSelectedItem()||$$("blacklist").getSelectedItem()&&!$$("blacklist").getSelectedItem().id,align:"center",width:150,icon:"fa fa-copy",click:function(){webix.$$("add-win-blacklist").close(),$$("blacklist").getSelectedItem().id=0,$$("blacklist").$scope.ui(s).showWindow()}},{css:"custom_trash_button",view:"button",label:"Удалить",type:"icon",hidden:void 0===$$("blacklist").getSelectedItem()||$$("blacklist").getSelectedItem()&&!$$("blacklist").getSelectedItem().id,align:"center",width:110,icon:"wxi-trash",click:function(){webix.confirm({text:"Удалить номер <br> Продолжить?",callback:function(e){if(e){let e=$$("add-form-blacklist"),t=e.getValues();e.disable(),e.showProgress(),webix.ajax().post("/blacklist/"+t.id+"/remove",t).then((function(e){(e=e.json()).result?(webix.guiutils.loadBlacklistTable(),webix.message({type:"success",text:e.message}),webix.$$("add-win-blacklist").close()):webix.message({type:"error",text:e.message})})).catch((function(e){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),console.error(e)})).finally((function(){e.enable(),e.hideProgress()}))}}})}},{},{css:"optional_btn",view:"button",label:"Отмена",align:"center",width:120,click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("add-win-blacklist").close()}})}},{view:"button",label:"Сохранить",type:"form",align:"center",width:120,click:function(){const e=$$("add-form-blacklist");if(e.validate()){e.disable(),e.showProgress();let t=e.getValues(),i=JSON.stringify({action:t.action,number:"transfer"==t.action?t.number.trim():"",message:t.message.trim()}),o={id:t.id,phone:t.phone,comment:t.comment,action:i};webix.ajax().post(0!=o.id?"/blacklist/"+o.id+"/update":"/blacklist/add",o).then((function(t){e.enable(),(t=t.json()).result?(webix.guiutils.loadBlacklistTable(),webix.message({type:"success",text:t.message}),webix.$$("add-win-blacklist").close()):webix.message({type:"error",text:t.message})})).catch((function(e){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),console.error(e)})).finally((function(){e.enable(),e.hideProgress()}))}else webix.message({type:"error",text:"Заполните обязательные поля"})}}]}]},body:{height:1},on:{onShow:function(){webix.extend($$("add-form-blacklist"),webix.ProgressBar);let t=$$("blacklist").getSelectedItem();t&&(e.setId(t.id),t.action=e.setEngAction(t.action),$$("add-form-blacklist").setValues(t),t.action=e.setRuAction(t.action))}}}}getThis(){return this}getId(){return this.clientId}setId(e){this.clientId=e}showWindow(){this.getRoot().show()}setRuAction(e){return"disconnect"==e?e="Сброс":"transfer"==e&&(e="Перевод"),e}setEngAction(e){return"Сброс"==e?e="disconnect":"Перевод"==e&&(e="transfer"),e}}},3566:(e,t,i)=>{"use strict";i.r(t),i.d(t,{GroupsWindow:()=>s});var o=i(4340);class s{constructor(){this.id="group-add-win",this.setView()}setView(e=null){webix.ui(this.getView(e))}getView(e=null){const t=this.getThis();return{view:"window",id:"group-add-win",position:"center",move:!0,modal:!0,resize:!0,height:400,width:700,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Группа",inputWidth:100,align:"left"},{view:"icon",icon:"wxi-close",click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&$$("group-add-win").close()}})}}]},body:{padding:17,rows:[{view:"form",id:"group-add-form",autoheight:!0,scroll:!0,elements:[{view:"text",name:"id",label:"id",value:0,hidden:!0},{view:"text",name:"name",label:"Название",inputAlign:"left",labelWidth:190,placeholder:"Введите название",required:!0},{view:"text",name:"description",label:"Описание",inputAlign:"left",labelWidth:190,placeholder:"Введите описание"},{cols:[{view:"multicombo",name:"list_users_ids",label:"Пользователи",inputAlign:"left",labelWidth:190,labelPosition:"left",options:"/groups/users/short",placeholder:"Выберите пользователей"}]},{view:"multicombo",name:"rules",label:"Права доступа",inputAlign:"left",labelWidth:190,options:{body:{template:"#name#"},url:"/rules/list"},placeholder:"Назначьте права"}],elementsConfig:{inputAlign:"left",labelPosition:"left"}},{margin:10,cols:[{css:"custom_trash_button",view:"button",label:"Копировать",type:"icon",hidden:void 0===$$("groups")||void 0===$$("groups").getSelectedItem()||$$("groups").getSelectedItem()&&!$$("groups").getSelectedItem().id,align:"center",width:150,icon:"fa fa-copy",click:function(){$$("group-add-win").close(),$$("groups").getSelectedItem().id=0,(new s).showWindow()}},{css:"custom_trash_button",view:"button",label:"Удалить",type:"icon",hidden:void 0===$$("groups")||void 0===$$("groups").getSelectedItem()||$$("groups").getSelectedItem()&&!$$("groups").getSelectedItem().id,align:"center",width:110,icon:"wxi-trash",click:function(){webix.confirm({text:"Удалить группу <br> Продолжить?",callback:function(e){e&&($$("group-add-win").close(),webix.guiutils.removeFromTable(parseInt($$("groups").getSelectedId()),"/groups/"+parseInt($$("groups").getSelectedId())+"/remove","groups","removeGroup"))}})}},{},{view:"button",label:"Настройки",align:"center",width:120,click:function(){e.ui(o.SettingsWindow).showWindow(t.getId(),"group")}},{view:"button",label:"Сохранить",type:"form",align:"center",width:120,click:function(){const e=$$("group-add-form");if(e.validate()){e.disable();const t=e.getValues();webix.ajax().post("/groups/"+t.id+"/save",t).then((function(t){e.enable(),(t=t.json()).result?(webix.message({type:"success",text:t.message}),e.enable(),webix.$$("group-add-win").close(),webix.guiutils.loadTable("groups","/groups/list")):(webix.message({type:"error",text:t&&t.message?t.message:t.text}),e.enable())})).catch((function(t){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),e.enable(),console.log(t)}))}else webix.message({type:"error",text:"Заполните обязательные поля"})}},{view:"button",label:"Отмена",align:"center",width:120,click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&$$("group-add-win").close()}})}}]}]},on:{onShow:function(){let e=$$("groups").getSelectedItem();e?(t.setId(e.id),$$("group-add-form").setValues(e)):($$("group-add-form").setValues({id:0}),t.setId(0))}}}}getThis(){return this}getId(){return this.groupId}setId(e){this.groupId=e}showWindow(e=null){if($$(this.id)&&!$$(this.id).isVisible()&&(this.setView(e),$$(this.id).show()),!$$(this.id))return this.setView(e),this.showWindow(e)}}},5944:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{getFormValues(){var e=$$("form-channels");return e.validate()?e.getValues():(webix.message({type:"error",text:"Заполните обязательные поля"}),!1)}getCode(e,t){if(!e)return!1;$$("channelName").disable(),$$("channelName").showProgress(),webix.ajax().get("/channels/code",{name:e}).then((function(e){e=e.json(),$$("channelName").hideProgress(),$$("channelName").enable(),e.result&&t&&t(e)}))}saveFormValues(e,t){parseInt(e.id)||(e.id=0),webix.ajax().post("/channels/"+e.id+"/save",e).then((function(e){$$("form-channels").enable(),(e=e.json()).result?(webix.message({type:"success",text:e.message}),$$("form-channels").enable(),t&&t()):(webix.message({type:"error",text:e.message}),$$("form-channels").enable())})).catch((function(e){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),$$("form-channels").enable(),console.log(e)}))}loadTable(e){webix.guiutils.loadTable("channels","/channels/list",e)}closeWindow(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("window-channels").close()}})}hide(){$$("window-channels").close()}getThis(){return this}show(e){var t=this.getThis(),i={view:"form",id:"form-channels",scroll:!0,autoheight:!0,elements:[{cols:[{view:"text",label:"id",name:"id",value:0,hidden:!0},{view:"text",label:"Название",name:"fullname",keyPressTimeout:500,required:!0},{view:"text",label:"Код",name:"name",id:"channelName",required:!0,on:{onFocus:function(){const e=$$("form-channels").getValues();e.name||t.getCode(e.fullname,(t=>{e.name=t.message,$$("form-channels").setValues(e)}))}}}]},{view:"text",label:"Номер телефона",name:"phone",marginX:0},{cols:[{view:"text",label:"Логин",name:"login"},{view:"text",label:"Пароль",name:"password",type:"password"}]},{view:"combo",label:"Провайдер",name:"provider",required:!0,options:"/config/sip"},{cols:[{view:"combo",label:"Правила обработки",name:"rules",required:!0,suggest:"/config/extensions",filter:function(e,t){return-1!==e.value.indexOf(t)}},{view:"combo",hidden:webix.channel_drivers.length<=1,label:"Канальный драйвер",name:"channel_driver",options:webix.channel_drivers}]},{cols:[{view:"text",label:"Адрес сервера",name:"host",required:!0},{view:"text",label:"Порт",name:"port",width:100,required:!0,pattern:{mask:"##########################",allow:/[0-9]/g},validate:function(e){return e.length}}]},{cols:[{},{view:"switch",labelRight:"Включено",labelWidth:120,labelPosition:"top",name:"active",id:"active",width:150,value:!0}]},{height:10}],elementsConfig:{inputAlign:"left",labelPosition:"top",margin:10}},s={id:"window-channels",view:"window",position:"center",move:!0,modal:!0,resize:!0,scroll:!0,height:530,width:600,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:(e.id?"Изменить ":"Добавить")+"  канал",align:"left"},{view:"icon",icon:"wxi-close",click:function(){t.closeWindow()}}]},body:{padding:17,rows:[i,{cols:[{css:"custom_trash_button",view:"button",label:"Копировать",type:"icon",align:"center",hidden:!e.id,width:150,icon:"fa fa-copy",click:function(){webix.$$("window-channels").close();let e="/channels/list?filter[id]="+$$("channels").getSelectedItem().id,t=null;webix.ajax(e).then((function(e){t=e.json().data[0]})).then((()=>{t?(t.id=0,(new o).show(t)):webix.message({type:"error",text:"Выберите канал для копирования"})}))}},{css:"custom_trash_button",view:"button",label:"Удалить",type:"icon",align:"center",hidden:!e.id,width:110,icon:"wxi-trash",click:function(){webix.confirm({text:"Удалить канал <br> Продолжить?",callback:function(e){e&&($$("channels").getSelectedId()?webix.guiutils.removeFromTable(parseInt($$("channels").getSelectedId()),"/channels/"+parseInt($$("channels").getSelectedId())+"/remove","channels","removeChannel"):webix.message({type:"error",text:"Выберите канал для удаления"}))}})}},{},{view:"button",type:"form",label:e.id?"Сохранить":"Добавить",click:()=>{const e=t.getFormValues();e&&t.saveFormValues(e,(()=>{t.hide(),t.loadTable()}))}},{view:"button",label:e.id?"Отменить":"Закрыть",click:()=>{t.closeWindow()}}]}]},on:{onShow:function(){webix.extend($$("channelName"),webix.ProgressBar)}}};webix.ui(s).show(),0===Object.keys(e).length&&(e.active=!0,e.port="5060"),$$("form-channels").setValues(e)}}},4471:(e,t,i)=>{"use strict";i.r(t),i.d(t,{PhonesWindow:()=>s});var o=i(8821);class s{constructor(){this.id="window-phone"}getFormValues(){var e=$$("form-phone");return e.validate()?e.getValues():(webix.message({type:"error",text:"Заполните обязательные поля"}),!1)}saveFormValues(e,t){parseInt(e.id)||(e.id=0),webix.ajax().post("/phones/"+e.id+"/save",e).then((function(e){$$("form-phone").enable(),(e=e.json()).result?(webix.message({type:"success",text:e.message}),$$("form-phone").enable(),t&&t()):(webix.message({type:"error",text:e.message}),$$("form-phone").enable())}))}loadTable(){webix.guiutils.loadTable("phones","/phones/list")}closeWindow(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("window-phone").close()}})}hide(){$$("window-phone").close()}getThis(){return this}show(e){var t=this.getThis(),i={view:"form",id:"form-phone",scroll:!0,autoheight:!0,elements:[{view:"text",label:"id",name:"id",value:0,hidden:!0},{cols:[{paddingX:17,view:"text",label:"Номер телефона",name:"phone",required:!0},{view:"text",label:"Внешний номер по умолчанию",name:"default_phone"}]},{view:"combo",label:"Модель",id:"phone_model",name:"model",options:"./assets/options/models.json"},{view:"text",label:"MAC-адрес",name:"mac"},{view:"text",label:"sipphone.server",name:"sipphone.server",hidden:!0},{cols:[{view:"combo",label:"Пользователь",name:"user_id",options:"/groups/users/short"},{view:"combo",hidden:webix.channel_drivers.length<=1,label:"Канальный драйвер",name:"channel_driver",options:webix.channel_drivers}]},{cols:[{view:"text",label:"Логин",name:"login",required:!0},{view:"text",label:"Пароль<span class='webix_icon fa fa-question'></span>",name:"password",type:"password",tooltip:"Пароль должен состоять из строчных и прописных латинских букв, цифр, спецсимволов. Не менее 12 символов",css:"webix_el_search",icon:"_showhide wxi-eye",required:!1,on:{onAfterRender(){webix.guiutils.hintCss(this)},onItemClick:function(e,t){webix.guiutils.togglePassword(t,this)}}}]},{cols:[{view:"combo",label:"Правила набора",name:"rules",suggest:"/config/extensions",filter:function(e,t){return-1!==e.value.indexOf(t)}},{view:"combo",label:"Группа",name:"group_id",options:{body:{url:"/phones/groups/list/short",template:"#name#"}}}]},{cols:[{view:"button",label:"Список адресов",name:"remote_config_phone_addresses",click:function(){(new o.RemoteConfigPhoneAddresses).show("phone",this.getValue(),(e=>{this.setValue(e)}))}},{view:"switch",labelRight:"Включено",labelWidth:120,labelPosition:"top",name:"active",id:"active",width:150,value:!0}]},{height:10}],elementsConfig:{inputAlign:"left",labelPosition:"top",margin:10},rules:{user_id:function(e){return"erpico"!=$$("phone_model").getValue()||e.length},password:function(e){return!!webix.guiutils.checkPassword(e)||(webix.message({type:"error",text:"Пароль слишком слабый"}),!1)}}},a={id:"window-phone",view:"window",position:"center",move:!0,modal:!0,resize:!0,scroll:!0,height:530,width:600,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:(e.id?"Изменить ":"Добавить")+"  телефон",align:"left"},{view:"icon",icon:"wxi-close",click:function(){t.closeWindow()}}]},body:{padding:17,rows:[i,{margin:10,cols:[{css:"custom_trash_button",view:"button",label:"Копировать",type:"icon",align:"center",hidden:!e.id,width:150,icon:"fa fa-copy",click:function(){webix.$$("window-phone").close();let e="/phones/list?filter[id]="+$$("phones").getSelectedItem().id,t=null;webix.ajax(e).then((function(e){t=e.json().data[0]})).then((()=>{t?(t.id=0,(new s).show(t)):webix.message({type:"error",text:"Выберите телефон для копирования"})}))}},{css:"custom_trash_button",view:"button",label:"Удалить",type:"icon",align:"center",hidden:!e.id,width:110,icon:"wxi-trash",click:function(){webix.confirm({text:"Удалить телефон <br> Продолжить?",callback:function(e){e&&($$("phones").getSelectedId()?webix.guiutils.removeFromTable(parseInt($$("phones").getSelectedId()),"/phones/"+parseInt($$("phones").getSelectedId())+"/remove","phones","removePhone"):webix.message({type:"error",text:"Выберите телефон для удаления"}))}})}},{},{view:"button",type:"form",label:e.id?"Сохранить":"Добавить",click:()=>{const e=t.getFormValues();e&&t.saveFormValues(e,(()=>{t.hide(),t.loadTable()}))}},{view:"button",label:e.id?"Отменить":"Закрыть",click:()=>{t.closeWindow()}}]}]}};webix.ui(a).show(),0===Object.keys(e).length&&(e.active=!0),e.password&&""!=e.password||(e.password=webix.guiutils.generatePassword(12)),$$("form-phone").setValues(e)}}},5226:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(4834);class s{constructor(){this.id="reports_info"}setView(){webix.ui(this.getView())}getView(){const e=this.getThis();return{view:"window",id:"reports_info",position:"center",move:!0,modal:!1,resize:!0,minHeight:1200,minWidth:1e3,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Звонки",inputWidth:100,align:"left"},{view:"icon",icon:"wxi-close",click:function(){$$("reports_info").close()}}]},body:{view:"form",id:"report_form",elements:[{rows:[{paddingX:17,cols:[{view:"text",name:"id",label:"ID",readonly:!0,hidden:!0},{view:"text",name:"time",label:"Дата/время",readonly:!0},{view:"text",name:"agentname",label:"Сотрудник",readonly:!0},{view:"text",name:"src",label:"От кого",readonly:!0},{view:"text",name:"queue",label:"Очередь",readonly:!0}]},{paddingX:17,cols:[{view:"text",name:"dst",label:"Кому",readonly:!0},{view:"text",name:"hold",label:"Ожидание",readonly:!0},{view:"text",name:"talk",label:"Разговор",readonly:!0},{view:"text",name:"reason",label:"Результат",readonly:!0}]},{paddingX:17,cols:[{view:"text",name:"userfield",label:"Входящий номер",readonly:!0},{view:"text",name:"channel",label:"Канал звонящего",readonly:!0},{view:"text",name:"dstchannel",label:"Канал ответившего",readonly:!0},{view:"text",name:"uniqid",label:"ID",readonly:!0}]}]},{id:"reports_tbl",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,footer:!0,height:300,tooltip:!0,columns:[{id:"status",header:"",width:30,template:function(e){return"ANSWERED"==e.reason||"COMPLETEAGENT"==e.reason||"COMPLETECALLER"==e.reason?"<span class='greencircle' style='margin-top: 12px'>&nbsp;</span>":"<span class='redcircle' style='margin-top: 12px'>&nbsp;</span>"},footer:{content:"summTotal",colspan:2}},{id:"time",header:["Дата/время"],width:250,format:webix.Date.dateToStr("%d.%m.%Y в %H:%i:%s")},{id:"id",header:["ID"],sort:"string",width:200,hidden:!0},{id:"agentname",header:["Сотрудник"],sort:"string",width:200,footer:{text:"Выберите звонок для прослушивания",colspan:3}},{id:"queue",header:["Очередь"],sort:"string",width:200},{id:"src",header:["От кого"],sort:"string",width:130},{id:"dst",header:["Кому"],sort:"string",width:130},{id:"hold",header:["Ожидание"],sort:"int",width:100,template:function(e){return webix.guiutils.formatTime(e.hold)}},{id:"talk",header:["Разговор"],width:80,sort:"int",template:function(e){return webix.guiutils.formatTime(e.talk)}},{id:"reason",header:["Результат"],width:190,template:function(e){var t='<span class = "state '+e.reason+'">';return t+=webix.guiutils.сallReasonToTxt(e.reason),t+="</span>"}},{id:"userfield",header:["Входящий номер"],sort:"string",widht:160},{id:"channel",header:["Канал звонящего"],sort:"string",width:160},{id:"dstchannel",header:["Канал ответившего"],sort:"string",width:200},{id:"uniqid",header:["ID"],sort:"string",width:160}]}],elementsConfig:{labelPosition:"top",margin:10}},on:{onShow:function(){let t=$$("reports_tbl"),i=$$("cdr_reports").getSelectedItem();e.setId(i.id),webix.ajax().get("/cdr/list/"+i.uid).then((function(e){$$("reports_tbl").parse(e),e.json().map((e=>{i.time==e.time&&(e.hold=webix.guiutils.formatTime(e.hold),e.talk=webix.guiutils.formatTime(e.talk),e.reason=webix.guiutils.сallReasonToTxt(e.reason),$$("report_form").setValues(e))}))})),webix.syncCallsWindow=new o.SyncCallsWindow,webix.ajax().get("/cdr/list/sync/"+i.uid).then((function(e){if(e.json().length>0){const i=`<button class='sync_btn' onclick='webix.syncCallsWindow.show(${e=JSON.stringify(e.json())})'>Синхронизация</button>>`;t.getColumnConfig("dst").footer[0].text=i,t.refreshColumns()}})),text="<audio style='height:32px;width:400px;' controls='true' src='/recording/"+i.uid+".mp3' type='audio/mpeg' preload='none'/>",t.getColumnConfig("agentname").footer[0].text=text,t.refreshColumns()}}}}getThis(){return this}getId(){return this.reportId}setId(e){this.reportId=e}showWindow(){if($$(this.id)&&!$$(this.id).isVisible()&&$$(this.id).show(),!$$(this.id))return this.setView(),this.showWindow()}}},4834:(e,t,i)=>{"use strict";i.r(t),i.d(t,{SyncCallsWindow:()=>o});class o{show(e){let t={view:"window",id:"bitrixCallSyncWnd",position:"center",width:1100,height:500,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Синхронизация звонка",align:"left"},{view:"icon",icon:"wxi-close",click:function(){webix.$$("bitrixCallSyncWnd").close()}}]},body:webix.copy(this.btr_window()),on:{onShow:function(){e.map((e=>{switch(e.status){case"1":e.status="Зарегистрирован";break;case"2":e.status="Завершен";break;case"3":e.status="Ошибка"}})),$$("bitrix-call-sync-table").parse(e)}}};webix.ui(t).show()}btr_window(){return{width:900,view:"form",id:"bitrix-call-sync-form",minHeight:400,elements:[{width:900,view:"datatable",margin:0,id:"bitrix-call-sync-table",tooltip:!0,columns:[{id:"call_id",header:[{text:"Битрикс 24 ID"}],width:75},{id:"call_time",header:[{text:"Время звонка"}],width:175},{id:"status",header:[{text:"Статус"}],width:150},{id:"sync_time",header:[{text:"Время синхронизации"}],width:175},{id:"u_id",header:[{text:"Идентификатор"}],width:175},{id:"result",header:[{text:"Результат"}],fillspace:1}]}]}}showWindow(){this.getRoot().show()}}},6411:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(9587);class s extends o.JetView{config(){return{type:"clean",rows:[{id:"analysis_outgoing_calls_layout_1",view:"scrollview",batch:1,scroll:"y",body:{height:1120,rows:[{cols:[grouped_reports,{view:"resizer"},grouped_reports7]},{view:"resizer"},{cols:[grouped_reports6,{view:"resizer"},grouped_reports2]},{view:"resizer"},{cols:[grouped_reports5,{view:"resizer"},grouped_reports3]},{view:"resizer"},{cols:[grouped_reports4]}]}}]}}urlChange(){}}},9958:(e,t,i)=>{"use strict";i.r(t),i.d(t,{Api_keys_wnd:()=>o});class o{show(){let e={view:"window",id:"apiKeysWnd",position:"center",modal:!0,width:700,height:200,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Создание ключа",align:"left"},{view:"icon",icon:"wxi-close",click:function(){webix.$$("apiKeysWnd").close()}}]},body:{view:"form",height:100,elements:[{name:"client_id",view:"combo",label:"Клиент",options:{body:{url:"/users/list?short=1",template:"#fullname#"}}},{view:"button",type:"icon",icon:"fa fa-file-alt",label:"Добавить ключ",click(){webix.form=this;const e=this.getParentView().getValues();e.client_id?webix.ajax().post("api_key/save",{data:e}).then((e=>{(e=e.json()).result?(webix.message({type:"success",text:"Ключ успешно добавлен."}),webix.$$("apiKeysWnd").close(),webix.guiutils.loadApiKeysTable()):webix.message({type:"error",text:e.message})})):webix.message({type:"info",text:"Клиент не выбран"})}}]}};webix.ui(e).show()}showWindow(){this.getRoot().show()}}},3609:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(9587);class s extends o.JetView{config(){return{id:"call_recording_layout",rows:[{rows:[{id:"call_recording",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,hover:"myhover",footer:!0,navigation:!0,tooltip:!0,multiselect:!0,css:"my_style",columns:[{id:"calldate",header:[{text:"Дата",height:25},{content:"serverDateRangeFilter"}],sort:"string",width:220,footer:{text:"Общее количество:",height:30}},{id:"call",header:[{text:"Звонки"},{content:"selectFilter"}],sort:"string",width:120},{id:"user",header:[{text:"Сотрудник"},{content:"serverFilter"}],sort:"string",width:230},{id:"src",header:[{text:"Источник"},{content:"serverFilter"}],sort:"string",width:155,footer:{text:"Общая продолжительность:",colspan:2,height:30}},{id:"dst",header:[{text:"Направление"},{content:"serverFilter"}],sort:"string",width:140},{id:"duration",header:[{text:"Длительность"},{content:"textFilter"}],sort:"string",width:130,footer:{content:"summTimeColumn"}},{id:"size",header:[{text:"Размер, кбайт"},{content:"textFilter"}],sort:"int",width:140,footer:{content:"avgColumn"}}],disabled:!1,url:"/legacy/call_recording",ready:function(){webix.extend(this,webix.ProgressBar)}},{view:"resizer"},{height:100,cols:[{id:"myplayer_call_recording",view:"datatable",scroll:!1,width:500,columns:[{id:"download",header:"",width:40,template:"<center><a target='_blank' href='#link'>#download#</center>",tooltip:"Скачать"},{id:"card",header:[{text:"Прослушать запись",height:30}],width:320}],data:[{download:"",name:"",card:""}]},{view:"checkbox",labelRight:"Автовоспроизведение",labelWidth:"auto",value:webix.storage.cookie.get("autoplay")?webix.storage.cookie.get("autoplay"):0,click:function(){var e=this.getValue();webix.storage.cookie.put("autoplay",e)}}]}]}]}}urlChange(){}}},979:(e,t,i)=>{"use strict";i.r(t),i.d(t,{ClientsWindow:()=>a});var o=i(9587),s=i(4340);class a extends o.JetView{constructor(e=null,t=null){super(e,t)}show(e,t=null){const i=this.getThis();var o={view:"window",id:"add-win",position:"center",maxWidth:900,css:"window-label-left",resize:!1,move:!0,modal:!0,borderless:!0,head:{height:530,minHeight:450,width:900,borderless:!0,rows:[{elementsConfig:{labelWidth:100,labelPosition:"left",margin:0},view:"form",id:"add-form",scroll:!0,minHeight:450,height:450,borderless:!0,elements:[{cols:[{view:"tabview",borderless:!0,tabbar:{optionWidth:180},cells:[{id:"settings",header:"Основные данные",body:{padding:17,minHeight:350,width:900,cols:[{rows:[{id:"photo",template:function(){let t="<div style='margin: -4px -9pt;'>";return e.photo&&0==e.photo.length||null==e.photo?t+="<img src='./assets/imgs/photos/4.png' width=200>":t+='<img src="/photos/'+e.photo+'" style="max-height:200px;max-width: 200px;"/>',t+="</div>",t},width:200,height:200},{view:"uploader",id:"photoUploader",name:"photo",value:"Загрузить фото",autosend:!0,autoheight:!1,height:40,width:200,upload:"/upload",on:{onAfterFileAdd:function(e){$$("photoUploader").config.upload+="?userId="+$$("id").getValue()},onUploadComplete:function(e){if($$("photoUploader").config.upload="/upload",!e.result){var t=$$("add-form").getValues();t.photo=e.hash,$$("add-form").setValues(t),$$("photo").setHTML('<img src="/photos/'+t.photo+'" style="max-height:200px;max-width: 200px;"/>'),$$("photo").refresh()}},onFileUploadError:(e,t)=>{webix.message("Ошибка при загрузке изображения. Убедитесь, что размер файла не превышает 5Мб.","error"),$$("photoUploader").config.upload="/upload"},onFileUpload:function(e,t){$$("photoUploader").config.upload="/upload"}}}]},{rows:[{view:"text",id:"id",name:"id",label:"id",value:0,hidden:!0},{view:"text",name:"fullname",label:"ФИО",inputAlign:"left",labelWidth:115,required:!0,width:650,placeholder:"Введите ФИО"},{cols:[{view:"text",name:"phone",label:"Номер",inputAlign:"left",labelWidth:115,width:325,placeholder:"Введите телефон"},{view:"text",name:"name",label:"Логин",inputAlign:"left",labelWidth:115,required:!0,width:325,placeholder:"Введите логин"}]},{cols:[{view:"select",name:"state",label:"Статус",inputAlign:"left",labelWidth:115,options:[{id:"1",value:"Активный"},{id:"2",value:"Заблокирован"},{id:"3",value:"Удален"},{id:"4",value:"Скрытый"}],width:325,placeholder:"Выберите статус"},{view:"text",name:"password",id:"user-password",label:"Пароль<span class='webix_icon fa fa-question'></span>",tooltip:"Пароль должен состоять из строчных и прописных букв, цифр, спецсимволов. Не менее 12 символов",type:"password",inputAlign:"left",labelWidth:115,width:325,placeholder:"Введите пароль",css:"webix_el_search",icon:"_showhide wxi-eye",required:!1,on:{onAfterRender(){webix.guiutils.hintCss(this)},onItemClick:function(e,t){webix.guiutils.togglePassword(t,this)}}}]},{view:"multicombo",name:"user_groups_ids",label:"Группы",inputAlign:"left",labelWidth:115,autoheight:!0,options:"/users/user_groups",width:650,placeholder:"Выберите группы"},{view:"multicombo",name:"rules",label:"Права доступа",inputAlign:"left",labelWidth:115,autoheight:!0,options:{body:{template:"#name#"},url:"/rules/list"},width:650,placeholder:"Назначьте права"},{view:"text",name:"description",label:"Описание",inputAlign:"left",labelWidth:115,width:650,placeholder:"Введите описание"},{height:10}]}]}},{header:"Переадресация",id:"forwarding",body:{width:900,minHeight:350,padding:17,rows:[{cols:[{view:"switch",labelRight:"Все звонки на номер",labelWidth:120,id:"cfwd.all.switch",labelPosition:"top",on:{onChange:e=>{webix.guiutils.updateControls()}}},{view:"text",id:"cfwd.all",name:"config.cfwd.all",label:"",placeholder:"Введите телефон"},{}]},{cols:[{view:"switch",labelRight:"После",labelWidth:120,id:"cfwd.noanswer.switch",labelPosition:"top",width:115,on:{onChange:e=>{webix.guiutils.updateControls()}}},{view:"text",id:"cfwd.noanswer.timeout",name:"config.cfwd.noanswer.timeout",placeholder:"000",labelWidth:120,suggest:[{id:5,value:"5"},{id:10,value:"10"},{id:20,value:"20"},{id:30,value:"30"}],width:75},{view:"text",id:"cfwd.noanswer",name:"config.cfwd.noanswer",label:"сек ожидания на номер",labelWidth:190,width:450,placeholder:"Введите телефон"},{}]},{view:"label",template:'<hr style="border: 0.5px solid #DDDDDD">',height:10},{cols:[{view:"switch",id:"cfwd.divert",name:"config.cfwd.divert",labelRight:"Переадресовывать",labelPosition:"top",on:{onChange:e=>{webix.guiutils.updateControls()}}},{css:"custom_margin_radio",view:"radio",id:"cfwd.duration.of.redirection",name:"config.cfwd.duration.of.redirection",options:[{id:"1",value:"весь день"},{id:"2",value:"c"}],width:190,on:{onChange:e=>{webix.guiutils.updateControls()}}},{id:"cfwd.limit.from",name:"config.cfwd.limit.from",view:"datepicker",type:"time",stringResult:!0,editable:!0,labelPosition:"left",format:"%H:%i",width:80},{css:"custom_padding_lbl",id:"cfwd.limit.to",name:"config.cfwd.limit.to",view:"datepicker",type:"time",stringResult:!0,editable:!0,label:"по",labelPosition:"left",format:"%H:%i",labelWidth:35,width:115}]},{cols:[{view:"multicombo",id:"cfwd.limit.days",name:"config.cfwd.limit.days",labelWidth:250,button:!0,options:[{id:"wd",value:"рабочие дни"},{id:"nwd",value:"выходные"},{id:"mo",value:"пн"},{id:"tu",value:"вт"},{id:"we",value:"ср"},{id:"th",value:"чт"},{id:"fr",value:"пт"},{id:"sa",value:"сб"},{id:"su",value:"вс"}]}]},{margin:10,cols:[{label:"Сообщение о переадресации",view:"select",id:"cfwd.notify",name:"config.cfwd.notify",labelPosition:"top",options:[{id:"0",value:"Отсутствует"},{id:"1",value:"Стандартное"},{id:"2",value:"Моя фраза"}],on:{onChange:e=>{webix.guiutils.updateControls()}}},{label:"Сообщение",view:"text",id:"cfwd.notify.message",name:"config.cfwd.notify.message",labelPosition:"top"}]}]}}],on:{onBeforeTabClick:function(e){console.log(13)}}},{rows:[{view:"icon",icon:"wxi-close",css:"window_close",click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("add-win").close()}})}}]}]}],rules:{password:function(e){return!(e.length&&!webix.guiutils.checkPassword(e))||(webix.message({type:"error",text:"Пароль слишком слабый"}),!1)}}},{padding:17,margin:10,cols:[{css:"custom_trash_button",view:"button",label:"Копировать",type:"icon",align:"center",hidden:!e.id,width:150,icon:"fa fa-copy",click:function(){webix.$$("add-win").close();let e=null,t="/users/list?filter[id]="+$$("users").getSelectedItem().id;webix.ajax(t).then((function(t){e=t.json().data[0]})).then((()=>{e?(e.id=0,(new a).show(e)):webix.message({type:"error",text:"Выберите пользователя для копирования"})}))}},{css:"custom_trash_button",view:"button",label:"Удалить",type:"icon",align:"center",hidden:!e.id,width:110,icon:"wxi-trash",click:function(){webix.confirm({text:"Удалить пользователя <br> Продолжить?",callback:function(e){if(e){const e=$$("add-form"),t=e.getValues();t.state=3,t.id&&t.state&&webix.ajax().post("/users/"+t.id+"/save",t).then((function(t){e.enable(),(t=t.json()).result?(webix.guiutils.loadUserTable(),webix.message({type:"success",text:t.message}),webix.$$("add-win").close()):webix.message({type:"error",text:t.message})})).catch((function(e){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),console.log(e)}))}}})}},{},{css:"optional_btn",view:"button",label:"Настройки",align:"center",width:120,hidden:!e||!e.id,click:function(){t.ui(s.SettingsWindow).showWindow(i.getId(),"user")}},{css:"optional_btn",view:"button",label:"Отмена",align:"center",width:120,click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("add-win").close()}})}},{view:"button",label:"Сохранить",type:"form",align:"center",width:120,click:function(){const e=$$("add-form");if(e.validate()){e.disable();const t=e.getValues();let i=Object.keys(t);t.config=[],i.forEach((e=>{-1!=e.toString().indexOf("config.")&&(0!=t["config.cfwd.notify.message"].length&&"config.cfwd.notify"==e?t.config.push({key:e.replace("config.",""),value:t["config.cfwd.notify.message"]}):"config.cfwd.notify.message"!=e&&t.config.push({key:e.replace("config.",""),value:t[e]}))})),t.id||(t.id=0),webix.ajax().post("/users/"+t.id+"/save",t).then((function(t){e.enable(),(t=t.json()).result?(webix.guiutils.loadUserTable(),webix.message({type:"success",text:t.message}),webix.$$("add-win").close()):webix.message({type:"error",text:t.message})})).catch((function(e){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),console.log(e)}))}else webix.message({type:"error",text:"Заполните обязательные поля"})}}]}]},body:{height:1},on:{onShow:function(){let t=e;if(t)if(t.id){if(i.setId(t.id),$$("add-form").setValues(t),t&&t.id&&t.hasOwnProperty("config")){t.config.forEach((e=>{"cfwd.duration.of.redirection"==e.key&&"2"==e.value&&$$("cfwd.divert").setValue(1),"cfwd.limit.days"==e.key&&e.value.length>0&&$$("cfwd.divert").setValue(1),"cfwd.all"==e.key&&e.value.length>0&&$$("cfwd.all.switch").setValue(1),"cfwd.noanswer"==e.key&&e.value.length>0&&$$("cfwd.noanswer.switch").setValue(1),$$(e.key)&&e.value&&$$(e.key).setValue(e.value),"cfwd.notify"==e.key&&e.value&&"0"!=e.value&&"1"!=e.value&&($$("cfwd.notify").setValue("2"),$$("cfwd.notify.message").setValue(e.value))}))}}else i.setId(0);else $$("add-form").setValues({id:0}),i.setId(0);webix.guiutils.updateControls()}}};webix.ui(o).show(),$$("add-form").setValues(e)}getThis(){return this}getId(){return this.clientId}setId(e){this.clientId=e}showWindow(){this.getRoot().show()}}},8336:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(9587);class s extends o.JetView{config(){return{type:"clean",rows:[{rows:[{id:"contact_cdr_report",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,footer:!0,navigation:!0,hover:"myhover",multiselect:!0,css:"my_style",tooltip:!0,columns:[{id:"calldate",header:[{text:"Дата",height:25},{content:"serverDateRangeFilter"}],sort:"string",width:220,footer:{text:"Всего:",height:30}},{id:"queue",header:[{text:"Очередь"},{content:"selectFilter"}],sort:"string",width:130,footer:{content:"avgColumn"}},{id:"agentname",header:[{text:"Агент"},{content:"selectFilter"}],sort:"string",width:160},{id:"agent",header:[{text:"Имя агента"},{content:"selectFilter"}],sort:"string",width:155},{id:"src",header:[{text:"Источник"},{content:"textFilter"}],sort:"string",width:155,footer:{text:"Среднее:"}},{id:"holdtime",header:[{text:"Время ожидания"},{content:"textFilter"}],sort:"string",width:155,footer:{content:"avaregeTimeColumn"}},{id:"talktime",header:[{text:"Время разговора"},{content:"textFilter"}],sort:"string",width:150,footer:{content:"avaregeTimeColumn"}},{id:"ringtime",header:[{text:"Время ответа"},{content:"textFilter"}],sort:"string",width:150,footer:{content:"avaregeTimeColumn"}},{id:"position",header:[{text:"Позиция"},{content:"textFilter"}],sort:"string",width:140},{id:"reason",header:[{text:"Причина завершения"},{content:"selectFilter"}],sort:"int",width:185},{id:"channel",header:[{text:"Канал"},{content:"textFilter"}],sort:"string",width:200},{id:"uid",header:[{text:"UID"},{content:"textFilter"}],sort:"string",width:200}],disabled:!1,url:"/legacy/contact_cdr_report",ready:function(){webix.extend(this,webix.ProgressBar)}}]}]}}urlChange(){}}},1465:(e,t,i)=>{"use strict";i.r(t),i.d(t,{ContactsGroupsWindow:()=>o});class o{constructor(){this.id="contact-groups-add-win",this.setView()}setView(){webix.ui(this.getView())}getView(){return{view:"window",id:this.id,position:"center",move:!0,modal:!0,resize:!0,height:350,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Контактная группа",inputWidth:450,align:"left"},{view:"icon",icon:"wxi-close",click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&$$("contact-groups-add-win").close()}})}}]},body:{padding:17,rows:[{view:"form",id:"group-add-form",width:600,autoheight:!0,scroll:!0,elements:[{view:"text",name:"id",label:"id",value:0,hidden:!0},{view:"text",name:"name",label:"Название",inputAlign:"left",labelWidth:200,required:!0},{margin:10,cols:[{view:"text",name:"queue",label:"Входящая очередь",inputAlign:"left",readonly:!0,placeholder:"Deprecated"},{view:"multicombo",name:"queues",label:"Входящие очереди",inputAlign:"left",options:{body:{template:"#fullname#"},url:"/queues/list/short"},tagMode:!1,tagTemplate:function(e){return e.length?"Очередей выбрано: "+e.length:""}}]},{margin:10,cols:[{view:"multicombo",name:"items_users",label:"Пользователи в группе",inputAlign:"left",labelWidth:200,options:{body:{template:"#value#"},url:"/groups/users/short"},tagMode:!1,tagTemplate:function(e){return e.length?"Пользователей выбрано: "+e.length:""}},{view:"multicombo",name:"items_queues",label:"Очереди в группе",inputAlign:"left",labelWidth:200,options:{body:{template:"#fullname#"},url:"/queues/list/short"},tagMode:!1,tagTemplate:function(e){return e.length?"Очередей выбрано: "+e.length:""}}]}],elementsConfig:{inputAlign:"left",labelPosition:"top",margin:10}},{margin:10,cols:[{css:"custom_trash_button",view:"button",label:"Копировать",type:"icon",hidden:void 0===$$("contact_groups")||void 0===$$("contact_groups").getSelectedItem()||$$("contact_groups").getSelectedItem()&&!$$("contact_groups").getSelectedItem().id,align:"center",width:150,icon:"fa fa-copy",click:function(){webix.$$("contact-groups-add-win").close(),$$("contact_groups").getSelectedItem().id=0,(new o).showWindow()}},{css:"custom_trash_button",view:"button",label:"Удалить",type:"icon",hidden:void 0===$$("contact_groups")||void 0===$$("contact_groups").getSelectedItem()||$$("contact_groups").getSelectedItem()&&!$$("contact_groups").getSelectedItem().id,align:"center",width:110,icon:"wxi-trash",click:function(){webix.confirm({text:"Удалить группу <br> Продолжить?",callback:function(e){if(e){webix.$$("contact-groups-add-win").close();let e="/contact_groups/"+parseInt($$("contact_groups").getSelectedId())+"/remove";webix.guiutils.removeFromTable(parseInt($$("contact_groups").getSelectedId()),e,"contact_groups","removeContactGroup")}}})}},{},{view:"button",label:"Сохранить",type:"form",align:"center",width:120,click:function(){const e=$$("group-add-form");if(e.validate()){e.disable();const t=e.getValues();webix.ajax().post("/contact_groups/"+t.id+"/save",t).then((function(t){e.enable(),(t=t.json()).result?(webix.message({type:"success",text:t.message}),e.enable(),webix.$$("contact-groups-add-win").close(),webix.guiutils.loadTable("contact_groups","/contact_groups/list")):(webix.message({type:"error",text:t&&t.message?t.message:text}),e.enable())})).catch((function(t){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),e.enable()}))}else webix.message({type:"error",text:"Заполните обязательные поля"})}},{view:"button",label:"Отмена",align:"center",width:120,click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&$$("contact-groups-add-win").close()}})}}]}]},on:{onShow:function(){let e=$$("contact_groups").getSelectedItem();e?(e.items_users=e.items.users,e.items_queues=e.items.queues,$$("group-add-form").setValues(e)):$$("group-add-form").setValues({id:0})}}}}showWindow(){if($$(this.id)&&!$$(this.id).isVisible()&&$$(this.id).show(),!$$(this.id))return this.setView(),this.showWindow()}}},7422:(e,t)=>{var i;void 0===(i=function(){return{show:(e,t)=>{let i="journal_wnd",o="journal_tbl";var s={view:"scrollview",scroll:"xy",borderless:!0,body:{id:"journal_frm",view:"form",borderless:!0,elements:[{id:o,name:"data",view:"datatable",css:"training_list_table",scrollAlignY:!0,scrollX:!0,tooltip:!0,columns:[{id:"key",header:"Название",fillspace:1,css:"rank"},{id:"before",header:"Было",fillspace:1},{id:"after",header:"Стало",fillspace:1}]},{cols:[{},{view:"button",type:"icon",icon:"fa fa-file-alt",label:"Закрыть",click:function(){$$(i).close()}},{}]}],elementsConfig:{labelPosition:"top",margin:10}}};webix.ui({view:"window",id:i,width:1e3,height:450,position:"center",modal:!0,move:!0,resize:!0,head:{view:"toolbar",margin:-4,cols:[{view:"label",label:"Основная информация"},{view:"icon",icon:"wxi-close",click:'$$("'+i+'").close();'}]},body:s,on:{onShow:function(){if(e.jdata){if(e.jdata.changes)return $$(o).parse(e.jdata.changes),void $$(o).hideOverlay();if(e.jdata.data)return $$(o).parse(webix.guiutils.consolidationJournalData(e.jdata.data)),void $$(o).hideOverlay()}$$(o).showOverlay("Изменения не зафиксированны")}}}).show()}}}.apply(t,[]))||(e.exports=i)},4389:(e,t,i)=>{"use strict";i.r(t),i.d(t,{OptionWindow:()=>o});class o{constructor(){this.id="option-add-win",this.setView()}setView(){webix.ui(this.getView())}getView(){this.getThis();return{view:"window",id:"option-add-win",position:"center",maxWidth:900,resize:!1,move:!0,modal:!0,borderless:!0,head:{height:530,width:900,borderless:!0,rows:[{elementsConfig:{labelWidth:100},view:"form",id:"option-form",scroll:!0,height:450,borderless:!0,elements:[{cols:[{view:"tabview",borderless:!0,tabbar:{optionWidth:180},cells:[{id:"settings",header:"Основные данные",body:{padding:17,minHeight:350,width:900,cols:[{rows:[{id:"photo",template:function(){let e="<div style='margin: -4px -9pt;'>";return webix.auth.photo&&0==webix.auth.photo.length||null==webix.auth.photo?e+="<img src='./assets/imgs/photos/4.png' width=200>":e+='<img src="/photos/'+webix.auth.photo+'" style="max-height:200px;max-width: 200px;"/>',e+="</div>",e},width:200,height:200},{view:"uploader",id:"photoUploader",name:"photo",value:"Загрузить фото",autosend:!0,autoheight:!1,height:40,width:200,upload:"/upload",on:{onAfterFileAdd:function(e){$$("photoUploader").config.upload+="?userId="+$$("id").getValue()},onUploadComplete:function(e){if($$("photoUploader").config.upload="/upload",!e.result){var t=$$("option-form").getValues();t.photo=e.hash,$$("option-form").setValues(t),$$("photo").setHTML('<img src="/photos/'+t.photo+'" style="max-height:200px;max-width: 200px;"/>'),$$("photo").refresh()}},onFileUploadError:(e,t)=>{webix.message("Ошибка при загрузке изображения. Убедитесь, что размер файла не превышает 5Мб.","error"),$$("photoUploader").config.upload="/upload"},onFileUpload:function(e,t){$$("photoUploader").config.upload="/upload"}}}]},{rows:[{view:"text",id:"id",name:"id",label:"id",value:0,hidden:!0},{view:"text",name:"fullname",label:"ФИО",inputAlign:"left",labelWidth:115,required:!0,width:650,placeholder:"Введите ФИО"},{cols:[{view:"text",name:"phone",label:"Номер",inputAlign:"left",labelWidth:115,width:325,placeholder:"Введите телефон"},{view:"text",name:"name",label:"Логин",inputAlign:"left",labelPosition:"left",labelWidth:115,required:!0,width:325,placeholder:"Введите логин"}]},{cols:[{view:"select",name:"state",label:"Статус",disable:!0,inputAlign:"left",labelWidth:115,options:[{id:"1",value:"Активный"},{id:"2",value:"Заблокирован"},{id:"3",value:"Удален"},{id:"4",value:"Скрытый"}],width:325,placeholder:"Выберите статус",disabled:!0},{view:"text",name:"password",id:"user-password",label:"Пароль",labelPosition:"left",type:"password",inputAlign:"left",labelWidth:115,width:325,placeholder:"Введите пароль"}]},{view:"multicombo",name:"user_groups_ids",label:"Группы",inputAlign:"left",labelWidth:115,autoheight:!0,options:"/users/user_groups",width:650,placeholder:"Выберите группы",disabled:!0},{view:"multicombo",name:"rules",label:"Права доступа",inputAlign:"left",labelWidth:115,autoheight:!0,disabled:!0,options:{body:{template:"#name#"},url:"/rules/list"},width:650,placeholder:"Назначьте права"},{view:"text",name:"description",label:"Описание",inputAlign:"left",labelWidth:115,width:650,placeholder:"Введите описание"},{height:10}]}]}},{header:"Переадресация",id:"forwarding",body:{width:900,minHeight:350,padding:17,rows:[{cols:[{view:"switch",labelRight:"Все звонки на номер",labelWidth:120,id:"cfwd.all.switch",labelPosition:"top",on:{onChange:e=>{webix.guiutils.updateControls()}}},{view:"text",id:"cfwd.all",name:"config.cfwd.all",label:"",placeholder:"Введите телефон"},{}]},{cols:[{view:"switch",labelRight:"После",labelWidth:120,id:"cfwd.noanswer.switch",labelPosition:"top",width:115,on:{onChange:e=>{webix.guiutils.updateControls()}}},{view:"text",id:"cfwd.noanswer.timeout",name:"config.cfwd.noanswer.timeout",labelWidth:120,placeholder:"000",suggest:[{id:5,value:"5"},{id:10,value:"10"},{id:20,value:"20"},{id:30,value:"30"}],width:75},{view:"text",id:"cfwd.noanswer",name:"config.cfwd.noanswer",label:"сек ожидания на номер",labelWidth:190,width:450,placeholder:"Введите телефон"},{}]},{view:"label",template:'<hr style="border: 0.5px solid #DDDDDD">',height:10},{cols:[{view:"switch",id:"cfwd.divert",labelRight:"Переадресовывать",labelPosition:"top",on:{onChange:e=>{webix.guiutils.updateControls()}}},{css:"custom_margin_radio",view:"radio",id:"cfwd.duration.of.redirection",value:1,options:[{id:"1",value:"весь день"},{id:"2",value:"c"}],width:190,on:{onChange:e=>{webix.guiutils.updateControls()}}},{id:"cfwd.limit.from",name:"config.cfwd.limit.from",view:"datepicker",type:"time",stringResult:!0,editable:!0,labelPosition:"left",format:"%H:%i",width:80},{css:"custom_padding_lbl",id:"cfwd.limit.to",name:"config.cfwd.limit.to",view:"datepicker",type:"time",stringResult:!0,editable:!0,label:"по",labelPosition:"left",format:"%H:%i",labelWidth:35,width:115}]},{cols:[{view:"multicombo",id:"cfwd.limit.days",name:"config.cfwd.limit.days",labelWidth:250,options:[{id:"wd",value:"рабочие дни"},{id:"nwd",value:"выходные"},{id:"mo",value:"пн"},{id:"tu",value:"вт"},{id:"we",value:"ср"},{id:"th",value:"чт"},{id:"fr",value:"пт"},{id:"sa",value:"сб"},{id:"su",value:"вс"}]}]},{cols:[{label:"Сообщение о переадресации",view:"select",id:"cfwd.notify",name:"config.cfwd.notify",labelPosition:"top",options:[{id:"0",value:"Отсутствует"},{id:"1",value:"Стандартное"},{id:"2",value:"Моя фраза"}],on:{onChange:e=>{webix.guiutils.updateControls()}}},{label:"Сообщение",view:"text",id:"cfwd.notify.message",name:"config.cfwd.notify.message",labelPosition:"top"}]}]}}],on:{onBeforeTabClick:function(e){}}},{rows:[{view:"icon",icon:"wxi-close",css:"window_close",click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("option-add-win").close()}})}}]}]}],elementsConfig:{inputAlign:"left",labelPosition:"left"}},{padding:17,cols:[{},{css:"optional_btn",view:"button",label:"Отмена",align:"center",width:120,click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("option-add-win").close()}})}},{view:"button",label:"Сохранить",type:"form",align:"center",width:120,click:function(){const e=$$("option-form");if(e.validate()){e.disable();const t=e.getValues();t.config=[],Object.keys(t).forEach((e=>{-1!=e.toString().indexOf("config.")&&t.config.push({key:e.replace("config.",""),value:t[e]})})),webix.ajax().post("/users/"+t.id+"/save",t).then((function(t){e.enable(),(t=t.json()).result?(webix.guiutils.loadUserTable(),webix.message({type:"success",text:t.message}),e.enable(),webix.$$("option-add-win").close()):(webix.message({type:"error",text:t.message}),e.enable())})).catch((function(t){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),e.enable(),console.log(t)}))}else webix.message({type:"error",text:"Заполните обязательные поля"})}}]}]},body:{height:1},on:{onShow:function(){webix.ajax().get("/auth/settings",{error:function(e,t,i){webix.message({type:"error",text:e})},success:function(e,t,i){if(t){var o=t.json();if($$("option-form").setValues(o.data),o.data.hasOwnProperty("config")){o.data.config.forEach((e=>{"cfwd.duration.of.redirection"==e.key&&"2"==e.value&&$$("cfwd.divert").setValue(1),"cfwd.limit.days"==e.key&&e.value.length>0&&$$("cfwd.divert").setValue(1),"cfwd.all"==e.key&&e.value.length>0&&$$("cfwd.all.switch").setValue(1),"cfwd.noanswer"==e.key&&e.value.length>0&&$$("cfwd.noanswer.switch").setValue(1),$$(e.key)&&e.value&&$$(e.key).setValue(e.value),"cfwd.notify"==e.key&&e.value&&"0"!=e.value&&"1"!=e.value&&($$("cfwd.notify").setValue("2"),$$("cfwd.notify.message").setValue(e.value))}))}}}}),webix.guiutils.updateControls()}}}}getThis(){return this}getId(){return this.groupId}setId(e){this.groupId=e}showWindow(){if($$(this.id)&&!$$(this.id).isVisible()&&$$(this.id).show(),!$$(this.id))return this.setView(),this.showWindow()}}},2235:(e,t,i)=>{"use strict";i.r(t),i.d(t,{PBXPhonesWindow:()=>s});var o=i(9587);class s extends o.JetView{getFormValues(){var e=$$("form-phone");return e.validate()?e.getValues():(webix.message({type:"error",text:"Заполните обязательные поля"}),!1)}saveFormValues(e,t){parseInt(e.id)||(e.id=0),webix.ajax().post("/phones/"+e.id+"/save",e).then((function(e){$$("form-phone").enable(),(e=e.json()).result?(webix.message({type:"success",text:e.message}),$$("form-phone").enable(),t&&t()):(webix.message({type:"error",text:e.message}),$$("form-phone").enable())}))}loadTable(){webix.guiutils.loadTable("phones","/phones/list")}closeWindow(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("window-phone").close()}})}hide(){$$("window-phone").close()}getThis(){return this}show(e){var t=this.getThis(),i={view:"form",id:"form-phone",padding:17,scroll:!0,elements:[{view:"text",label:"id",name:"id",value:0,hidden:!0},{view:"text",label:"Номер телефона",name:"phone",required:!0},{view:"combo",label:"Модель",id:"phone_model",name:"model",options:"./assets/options/models.json"},{view:"text",label:"MAC-адрес",name:"mac"},{view:"combo",label:"Пользователь",name:"user_id",options:"/groups/users/short"},{view:"text",label:"Логин",name:"login",required:!0},{view:"text",label:"Пароль",name:"password",type:"password"},{view:"combo",label:"Правила набора",name:"rules",suggest:"./assets/options/rules.json",filter:function(e,t){return-1!==e.value.indexOf(t)}},{view:"text",label:"Внешний номер по умолчанию",name:"default_phone"},{view:"combo",label:"Группа",name:"group_id",options:{body:{url:"/phones/groups/list/short",template:"#name#"}}},{cols:[{},{view:"button",label:e.id?"Сохранить":"Добавить",click:()=>{const e=t.getFormValues();e&&t.saveFormValues(e,(()=>{t.hide(),t.loadTable()}))}},{view:"button",label:e.id?"Отменить":"Закрыть",click:()=>{t.closeWindow()}},{}]},{height:10}],elementsConfig:{inputAlign:"left",labelPosition:"top",margin:10},rules:{password:function(t){return!!e.id||t.length>0},user_id:function(e){return"erpico"!=$$("phone_model").getValue()||e.length}}},o={id:"window-phone",view:"window",position:"center",move:!0,modal:!0,resize:!1,scroll:!0,height:700,width:600,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:(e.id?"Изменить ":"Добавить")+"  телефон",align:"left"},{view:"icon",icon:"wxi-close",click:function(){t.closeWindow()}}]},body:i};webix.ui(o).show(),$$("form-phone").setValues(e)}}},2298:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(9587);class s extends o.JetView{config(){return{type:"clean",rows:[{id:"record_contact_center_layout",rows:[{rows:[{id:"record_contact_center",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,hover:"myhover",footer:!0,navigation:!0,tooltip:!0,multiselect:!0,css:"my_style",columns:[{id:"calldate",header:[{text:"Дата",height:25},{content:"serverDateRangeFilter"}],sort:"string",width:220,footer:{text:"Общее количество:",height:30}},{id:"queue",header:[{text:"Очередь"},{content:"selectFilter"}],sort:"string",width:140,footer:{content:"avgColumn"}},{id:"src",header:[{text:"Источник"},{content:"serverFilter"}],sort:"string",width:155,footer:{text:"Общая продолжительность:",colspan:2,height:30}},{id:"dst",header:[{text:"Агент"},{content:"serverFilter"}],sort:"string",width:140},{id:"duration",header:[{text:"Длительность"},{content:"textFilter"}],sort:"string",width:130,footer:{content:"summTimeColumn"}}],disabled:!1,url:"legacy/record_contact_center",ready:function(){webix.extend(this,webix.ProgressBar)}},{view:"resizer"},{height:100,cols:[{id:"myplayer_record_contact_center",view:"datatable",scroll:!1,width:500,columns:[{id:"download",header:"",width:40,template:"<center><a target='_blank' href='#link'>#download#</center>",tooltip:"Скачать"},{id:"card",header:[{text:"Прослушать запись",height:30}],width:320}],data:[{download:"",name:"",card:""}]},{view:"checkbox",labelRight:"Автовоспроизведение",labelWidth:"auto",value:webix.storage.cookie.get("autoplay2")?webix.storage.cookie.get("autoplay2"):0,click:function(){var e=this.getValue();webix.storage.cookie.put("autoplay2",e)}}]}]}]}]}}urlChange(){}}},4340:(e,t,i)=>{"use strict";i.r(t),i.d(t,{SettingsWindow:()=>s});var o=i(9587);class s extends o.JetView{config(){const e=this.getThis();return{view:"window",id:"settings-win",position:"center",move:!0,resize:!0,modal:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Настройки",align:"left"},{view:"icon",icon:"wxi-close",click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("settings-win").close()}})}}]},body:{width:800,view:"form",id:"settings-form",minHeight:500,scroll:!0,elements:[{view:"datatable",id:"settings-table",select:!0,tooltip:!0,resizeColumn:!0,scroll:!0,editable:!0,columns:[{id:"handle",header:"название столбца",fillspace:2,minWidth:50},{id:"val",header:"столбец",fillspace:2,minWidth:150,editor:"text"},{id:"changed",hidden:!0}],ready:function(){this.getChangedSettings=function(){const e=this.serialize();let t=[];return e.forEach((e=>{parseInt(e.changed)&&t.push(e)})),t},this.save=function(){const t=$$("settings-table");t.disable();const i=t.getChangedSettings();if(!i.length)return webix.message({type:"error",text:"Изменений не зафиксированно"}),void t.enable();i.forEach((e=>{"cti.ext"==e.handle&&webix.$$("add-form").elements.phone.setValue(e.val)})),webix.ajax().post("/settings/"+e.getType()+"/"+e.getTypeId()+"/save",{settings:i}).then((function(e){t.enable(),(e=e.json()).result?(webix.message({type:"success",text:"Сохранение пришло успешно"}),t.enable(),webix.$$("settings-win").close()):(webix.message({type:"error",text:"Произошла ошибка сохранения"}),t.enable())})).catch((function(e){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),t.enable(),console.log(e)}))}},on:{onBeforeLoad:function(){this.clearAll()},onBeforeContextMenu:function(e){if(!this.getItem(e).main)return!1;this.select(e)},onEditorChange:function(e,t){this.getItem(e.row).changed=1,this.refresh(e.row)}},scheme:{$init:function(e){e.main||(e.$css="good-row")}}},{margin:10,cols:[{},{view:"button",label:"Сохранить",type:"form",align:"center",width:120,click:function(){webix.confirm({text:"Все измененные данные будут сохранены. <br> Продолжить?",callback:function(e){e&&$$("settings-table").save()}})}},{view:"button",label:"Закрыть",align:"center",width:120,click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("settings-win").close()}})}}]}]},on:{onShow:function(){if(!parseInt(e.typeId))return webix.message({type:"error",text:"Произошла ошибка получения настроек"}),webix.$$("settings-win").close(),!1;$$("settings-table").load("/settings/"+e.getType()+"/"+e.getTypeId())}}}}getThis(){return this}setType(e){this.type=e}setTypeId(e){this.typeId=e}getType(){return this.type}getTypeId(){return this.typeId}showWindow(e,t){this.setType(t),this.setTypeId(e),this.getRoot().show()}init(){this.getThis();$$("settingsContext")||this.ui({view:"contextmenu",id:"settingsContext",width:450,data:[{id:"restore",value:"Восстановить значение по умолчанию"}],on:{onMenuItemClick:function(e){let t=this.getMenuItem(e),i=$$("settings-table").getSelectedItem();const o=$$("users").isVisible()?"user":"group",s=$$(`${o}s`).getSelectedId().id;"restore"==t.id&&webix.confirm({text:"Внимание! Значение будет восстановлено по умолчанию. <br> Продолжить?",callback:function(e){e&&webix.ajax().get(`/settings/${o}/${s}/default/${i.handle}`,(function(e){let t=JSON.parse(e);t.result?$$("settings-table").load(`/settings/${o}/${s}`):webix.message({type:"error",text:t.message?t.message:"Произошла ошибка"})}))}})},onBeforeShow:function(){if(!$$("settings-table").getSelectedItem().main)return!1}}}),$$("settingsContext").attachTo($$("settings-table"))}destroy(){console.log("d"),$$("settingsContext").destructor()}}},2869:()=>{webix.Date.add(new Date,-7,"day"),webix.Date.add(new Date,1,"day"),npsTooltip,npsTooltip,npsTooltip,npsTooltip,npsTooltip,npsTooltip,npsTooltip,npsTooltip},5631:()=>{},8257:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>l});var o=i(9587),s=i(8821);class a{constructor(){this.formName="form-phonesGroups",this.tableName="phones_groups",this.windowName="window-phone"}getCode(e,t){if(!e)return!1;$$("phoneGroupCode").disable(),$$("phoneGroupCode").showProgress(),webix.ajax().get("/phones/groups/code",{name:e}).then((function(e){$$("phoneGroupCode").enable(),$$("phoneGroupCode").hideProgress(),(e=e.json()).result&&t&&t(e)}))}getFormValues(){var e=$$(this.formName);return e.validate()?e.getValues():(webix.message({type:"error",text:"Заполните обязательные поля"}),!1)}saveFormValues(e,t){const i=this.getThis();parseInt(e.id)||(e.id=0),webix.ajax().post("/phones/groups/"+e.id+"/save",e).then((function(e){return $$(i.formName).enable(),(e=e.json()).result?(webix.message({type:"success",text:e.message}),$$(i.formName).enable(),t&&t()):(webix.message({type:"error",text:e.message}),$$(i.formName).enable()),!0}),(function(e){webix.message({type:"error",text:"Произошла ошибка обращения к серверу. Скорее всего, один из телефонов уже принадлежит другой группе"}),$$(i.formName).enable(),console.log(e)}))}loadTable(){webix.guiutils.loadTable(this.tableName,"/phones/groups/list")}closeWindow(){var e=this.getThis();webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(t){t&&webix.$$(e.windowName).close()}})}hide(){$$(this.windowName).close()}getThis(){return this}show(e){var t=this.getThis();const i="phones_groups";var o={view:"form",id:t.formName,scroll:!0,autoheight:!0,elements:[{cols:[{view:"text",label:"id",name:"id",value:0,hidden:!0},{view:"text",label:"Название",name:"name",keyPressTimeout:500,required:!0},{view:"text",label:"Код",name:"code",id:"phoneGroupCode",required:!0,on:{onFocus:function(){const e=$$(t.formName).getValues();e.code||t.getCode(e.name,(i=>{e.code=i.message,$$(t.formName).setValues(e)}))}}}]},{view:"text",label:"Исходящий номер",name:"outgoing_phone"},{cols:[{view:"combo",name:"pattern",label:"Шаблон",required:!0,filter:function(e,t){return-1!==t.indexOf(t)},options:{body:{url:"/config/sip",template:"#value#"}}},{view:"combo",label:"Правила набора",name:"rules",suggest:"/config/extensions",filter:function(e,t){return-1!==e.value.indexOf(t)}}]},{view:"multicombo",name:"phones",label:"Телефоны в группе",inputAlign:"left",labelWidth:200,options:{body:{template:"#phone#"},url:"/phones/list/short"},tagMode:!1,tagTemplate:function(e){return e.length?"Телефонов выбрано: "+e.length:""}},{view:"button",label:"Список адресов",name:"remote_config_phone_addresses",click:function(){(new s.RemoteConfigPhoneAddresses).show("group",this.getValue(),(e=>{this.setValue(e)}))}},{height:10}],elementsConfig:{inputAlign:"left",labelPosition:"top",margin:10}},a={id:this.windowName,view:"window",position:"center",move:!0,modal:!0,resize:!0,scroll:!0,height:440,width:600,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:(e.id?"Изменить ":"Добавить")+"  телефон",align:"left"},{view:"icon",icon:"wxi-close",click:function(){t.closeWindow()}}]},body:{padding:17,rows:[o,{cols:[{css:"custom_trash_button",view:"button",label:"Копировать",type:"icon",align:"center",hidden:!e.id,width:150,icon:"fa fa-copy",click:function(){webix.$$(t.windowName).close();let e="/phones/groups/list?filter[id]="+$$(i).getSelectedItem().id,o=null;webix.ajax(e).then((function(e){o=e.json().data[0]})).then((()=>{o?(o.id=0,phonesGroupsWindow.show(o)):webix.message({type:"error",text:"Выберите группу телефонов для копирования"})}))}},{css:"custom_trash_button",view:"button",label:"Удалить",type:"icon",align:"center",hidden:!e.id,width:110,icon:"wxi-trash",click:function(){webix.confirm({text:"Удалить группу <br> Продолжить?",callback:function(e){e&&($$(i).getSelectedId()?webix.guiutils.removeFromTable(parseInt($$(i).getSelectedId()),"/phones/groups/"+parseInt($$(i).getSelectedId())+"/remove",i,"removePhoneGroup"):webix.message({type:"error",text:"Выберите группу для удаления"}))}})}},{},{view:"button",type:"form",label:e.id?"Сохранить":"Добавить",click:()=>{const e=t.getFormValues();e&&t.saveFormValues(e,(()=>{t.hide(),t.loadTable()}))}},{view:"button",label:e.id?"Отменить":"Закрыть",click:()=>{t.closeWindow()}}]}]},on:{onShow:function(){webix.extend($$("phoneGroupCode"),webix.ProgressBar)}}};webix.ui(a).show(),$$(this.formName).setValues(e)}}class l extends o.JetView{config(){window.phonesGroupsWindow=new a;return{id:"phones_groups_toolbar",css:"top-menu-right-item",hidden:!0,cols:[{view:"button",type:"icon",icon:"wxi-plus",width:150,css:"last-button-on-left-position",label:"Добавить",click:function(){phonesGroupsWindow.show({})}},{},{css:"disable_margin_btn_tbar",view:"button",type:"icon",icon:"fa fa-sync",width:56,click:function(){phonesGroupsWindow.loadTable()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("phones_groups"),{filterHTML:!0,filename:"Группы телефонов"})}}]}}urlChange(){}}},5315:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var o=i(9587);class s{getFormValues(){var e=$$("form-queues");return e.validate()?e.getValues():(webix.message({type:"error",text:"Заполните обязательные поля"}),!1)}getQueueCode(e,t){if(!e)return!1;$$("queueName").disable(),$$("queueName").showProgress(),webix.ajax().get("/queues/code",{name:e}).then((function(e){$$("queueName").enable(),$$("queueName").hideProgress(),(e=e.json()).result&&t&&t(e)}))}saveFormValues(e,t){parseInt(e.id)||(e.id=0),webix.ajax().post("/queues/"+e.id+"/save",e).then((function(e){$$("form-queues").enable(),(e=e.json()).result?(webix.message({type:"success",text:e.message}),$$("form-queues").enable(),t&&t()):(webix.message({type:"error",text:e.message}),$$("form-queues").enable())})).catch((function(e){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),$$("form-queues").enable(),console.log(e)}))}loadTable(){webix.guiutils.loadTable("queues","/queues/list")}closeWindow(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$("window-queues").close()}})}hide(){$$("window-queues").close()}getThis(){return this}show(e){var t=this.getThis(),i="";const o="cmenutable";var s={view:"form",id:"form-queues",minHeight:500,minWidth:700,elements:[{cols:[{rows:[{cols:[{view:"text",label:"id",name:"id",value:0,hidden:!0},{view:"text",label:"Название",name:"fullname",required:!0},{padding:0,view:"text",id:"queueName",label:"Код",name:"name",required:!0,on:{onFocus:function(){const e=$$("form-queues").getValues();e.name||t.getQueueCode(e.fullname,(t=>{e.name=t.message,$$("form-queues").setValues(e)}))}}}]},{view:"combo",name:"pattern",label:"Шаблон",filter:function(e,t){return-1!==t.indexOf(t)},options:{body:{url:"/config/queues",template:"#value#"}}},{view:"textarea",name:"description",label:"Описание",labelWidth:120,height:100},{view:"text",label:"Адрес скрипта обработки",name:"url"},{cols:[{view:"counter",label:"Автопауза",name:"autopause",width:120},{view:"combo",label:"Автозакрытие",name:"close_on_hangup",width:120,options:[{id:1,value:"Да"},{id:2,value:"Нет"},{id:3,value:"10 сек"},{id:4,value:"60 сек"},{id:5,value:"5 мин"},{id:6,value:"10 мин"}]},{view:"text",label:"ID сервиса",name:"service_id",width:120}]},{cols:[{view:"counter",label:"Операторов < ",name:"alarms.operators",width:120},{view:"counter",label:"Звонков >",name:"alarms.calls",width:120},{view:"counter",label:"Ожидание >",name:"alarms.maxwait",width:120},{}]},{cols:[{view:"switch",label:"Скрыть",name:"hidden",labelPosition:"top",width:120},{view:"switch",label:"VIQ",name:"viq",width:120},{view:"switch",label:"Включено",labelPosition:"top",name:"active",id:"active",width:120,value:!0}]}]},{id:"operators_tbl",view:"datatable",resizeColumn:!0,resizeRow:!1,select:!0,editable:!0,multiselect:!0,tooltip:!0,minWidth:400,onContext:{webix_view:function(e,t){this.locate(e.target||e.srcElement)||($$(o).setContext({obj:webix.$$(e)}),$$(o).show(e),webix.html.preventEvent(e),$$(o).clearAll(),$$(o).parse([{id:"new",value:"Добавить"}]),$$("operators_tbl").unselectAll())}},data:[],columns:[{editor:"combo",header:"Сотрудник",id:"acl_user_id",width:120,suggest:{url:"/groups/users/short",body:{template:function(e){return e.fullname+" ("+e.value+")"}},filter:function(e,t){return t=t.toLowerCase(),-1!==e.value.toLowerCase().indexOf(t)||-1!==e.fullname.toLowerCase().indexOf(t)},width:430,fitMaster:!1,yCount:8,template:function(e){return"string"==typeof e.value&&"0"!=e.value||(e.value=""),i=e,e.value}},template:function(e){return e.acl_user_id?i&&e.acl_user_id==i.id?(e.name=i.value,e.name):e.name:""},options:"/groups/users/short"},{header:"Телефон",width:100,id:"phone",editor:"text",suggest:{url:"/groups/users/short",body:{template:function(e){return e.phone+(e.fullname?" ("+e.fullname+")":"")}},filter:function(e,t){return t=t.toLowerCase(),null!=e.phone&&""!=e.phone&&(-1!==e.phone.toLowerCase().indexOf(t)||-1!==e.fullname.toLowerCase().indexOf(t))},width:310,fitMaster:!1,yCount:8,template:function(e){return e.phone}},template:function(e){return"string"==typeof e.phone&&"0"!=e.phone||(e.phone=""),e.phone}},{header:"Приоритет",id:"penalty",editor:"combo",sort:"string",width:110,options:[{id:1,value:"1"},{id:2,value:"2"},{id:3,value:"3"},{id:4,value:"4"},{id:5,value:"5"},{id:6,value:"6"},{id:7,value:"7"},{id:8,value:"8"},{id:9,value:"9"},{id:10,value:"10"}]},{header:"Статика",id:"static",name:"static",width:110,fillspace:1,template:"{common.checkbox()}"}],on:{onBeforeContextMenu:function(e){this.getItem(e)?(this.select(e),$$(o).clearAll(),$$(o).parse([{id:"new",value:"Добавить"},{id:"delete",value:"Удалить"}])):($$(o).clearAll(),$$(o).parse([{id:"new",value:"Добавить"}]))},onBeforeEditStop:function(e,t){"acl_user_id"===t.column&&(void 0!==t.getPopup().getList().getItem(e.value)?($$("operators_tbl").updateItem(t.row,{static:0}),$$("operators_tbl").getItem(t.row).static&&this.callEvent("onCheck",[t.row,"static",1])):($$("operators_tbl").updateItem(t.row,{static:1}),$$("operators_tbl").getItem(t.row).static||this.callEvent("onCheck",[t.row,"static",0])))},onItemClick:function(e){var t=$$("operators_tbl").getItem(e),i=$$("operators_tbl").getItem(e).static;(""==t.acl_user_id&&0==i||null!==t.acl_user_id&&""!=t.acl_user_id.trim()&&1==i)&&$$("operators_tbl").updateItem(e,{static:!i})},onCheck:function(e,t,i){$$("operators_tbl").unselectAll(),$$("operators_tbl").select(e,!0);var o=$$("operators_tbl").getSelectedId(),s=$$("operators_tbl").getItem(e);s.acl_user_id||0!=i?s.acl_user_id&&1==i&&(webix.message("Статичными агентами сотрудники быть не могут","error"),o.column="static",s[o.column]=0,o.row&&$$("operators_tbl").updateItem(o.row,s)):(webix.message("Динамичными агентами могут быть только сотрудники","error"),o.column="static",s[o.column]=1,o.row&&$$("operators_tbl").updateItem(o.row,s))}},ready:function(){$$(o)||webix.ui({view:"contextmenu",width:180,id:o,data:[{id:"new",value:"Добавить"}],on:{onMenuItemClick:function(e){switch(e){case"new":$$("operators_tbl").add({acl_user_id:"",phone:"",penalty:"1",static:1});break;case"delete":(e=$$("operators_tbl").getSelectedId())&&$$("operators_tbl").remove(e)}}}}),$$(o).attachTo(this)}}]},{height:10}],elementsConfig:{inputAlign:"left",labelPosition:"top",margin:10}},a={id:"window-queues",view:"window",position:"center",move:!0,modal:!0,resize:!0,scroll:!0,height:700,maxHeight:1500,width:900,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:(e.id?"Изменить ":"Добавить")+"  очередь",align:"left"},{view:"icon",icon:"wxi-close",click:function(){t.closeWindow()}}]},body:{padding:17,rows:[s,{margin:10,cols:[{css:"custom_trash_button",view:"button",label:"Копировать",type:"icon",align:"center",hidden:!e.id,width:150,icon:"fa fa-copy",click:function(){webix.$$("window-queues").close();let e="/queues/list?filter[id]="+$$("queues").getSelectedItem().id,t=null;webix.ajax(e).then((function(e){t=e.json().data[0]})).then((()=>{t?(t.id=0,queuesWindow.show(t)):webix.message({type:"error",text:"Выберите очередь для копирования"})}))}},{css:"custom_trash_button",view:"button",label:"Удалить",type:"icon",align:"center",hidden:!e.id,width:110,icon:"wxi-trash",click:function(){webix.confirm({text:"Удалить очередь <br> Продолжить?",callback:function(e){e&&($$("queues").getSelectedId()?webix.guiutils.removeFromTable(parseInt($$("queues").getSelectedId()),"/queues/"+parseInt($$("queues").getSelectedId())+"/remove","queues","removeQueue"):webix.message({type:"error",text:"Выберите очередь для удаления"}))}})}},{},{view:"button",type:"form",label:e.id?"Сохранить":"Добавить",click:()=>{const e=t.getFormValues();$$("operators_tbl").editStop();var i=[];$$("operators_tbl").serialize().forEach((function(e){i.push({acl_user_id:e.acl_user_id,name:e.name,phone:e.phone,static:e.static,penalty:e.penalty,phone_id:e.phone_id})})),e.agents=i,e.alarms={"alarms.operators":e["alarms.operators"],"alarms.calls":e["alarms.calls"],"alarms.maxwait":e["alarms.maxwait"]},e&&t.saveFormValues(e,(()=>{t.hide(),t.loadTable()}))}},{view:"button",label:e.id?"Отменить":"Закрыть",click:()=>{t.closeWindow()}}]}]},on:{onShow:()=>{webix.extend($$("queueName"),webix.ProgressBar);let t=JSON.parse(e.alarms);t&&(e["alarms.operators"]=t["alarms.operators"]?t["alarms.operators"]:0,e["alarms.calls"]=t["alarms.calls"]?t["alarms.calls"]:0,e["alarms.maxwait"]=t["alarms.maxwait"]?t["alarms.maxwait"]:0),$$("form-queues").setValues(e),Array.isArray(e.agents)&&e.agents.forEach((function(e){$$("operators_tbl").add(e)}))}}};webix.ui(a).show()}}class a extends o.JetView{config(){return window.queuesWindow=new s,{id:"queues_toolbar",css:"top-menu-right-item",hidden:!0,cols:[{view:"button",type:"icon",icon:"wxi-plus",css:"last-button-on-left-position",width:150,label:"Добавить",click:function(){queuesWindow.show({})}},{},{css:"disable_margin_btn_tbar",view:"button",type:"icon",icon:"fa fa-sync",width:56,click:function(){queuesWindow.loadTable()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("queues"),{filterHTML:!0,filename:"Очереди"})}}]}}urlChange(){}}},5116:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(9587);class s extends o.JetView{config(){function e(e){var t=$$("scripts_lst").getValue();if(t){var i=e.parent_id?e.parent_id:$$("script_stages").getSelectedId(!1),o=e.id?e.id:0;webix.ui({id:"add_script_stage_win",view:"window",head:{view:"toolbar",margin:-4,cols:[{view:"label",label:o?"Редактирование этапа скрипта":"Добавление этапа скрипта"},{view:"icon",icon:"wxi-close",click:"$$('add_script_stage_win').close();"}]},resize:!0,width:700,height:500,center:!0,position:"center",modal:!0,move:!0,body:{view:"form",id:"script_stage_form",elements:[{view:"text",label:"Название",name:"name"},{view:"checkbox",labelRight:"Отображать название как заголовок",name:"show_name"},{view:"checkbox",labelRight:"Автоматическая генерация кнопок для перехода на подэтапы",name:"autobuttons"},{view:"checkbox",labelRight:'Отображать кнопки "Назад"/"Вперед"',name:"show_back_next"},{cols:[{view:"button",label:"Сохранить",click:function(){var e=$$("script_stage_form");if(e.validate()){e.disable();var s=e.getValues();s.script_id=t,s.parent_id=i,o&&(s.id=o),webix.ajax().post("/legacy/ext/scripts/save/stage",s,(function(i,o,s){e.enable(),1==(o=o.json()).result?($$("add_script_stage_win").close(),$$("script_stages").clearAll(),$$("script_stages").load("/legacy/ext/scripts/liststages/"+t),$$("script_stages").select(o.id)):webix.message({type:"error",text:o.message})}))}else webix.message({type:"error",text:"Заполните обязательные поля"})}},{view:"button",label:"Удалить",hidden:!o,click:function(){webix.confirm({title:"Подтверждение удаления",ok:"Удалить",cancel:"Отмена",text:'Вы действительно хотите удалить этап "'+e.name+'"?',type:"confirm-error",callback:function(e){if(e){var i={id:o,delete:1};webix.ajax().post("/legacy/ext/scripts/save/stage",i,(function(e,i,o){1==(i=i.json()).result?($$("add_script_stage_win").close(),$$("script_stages").clearAll(),$$("script_stages").load("/legacy/ext/scripts/liststages/"+t)):webix.message({type:"error",text:i.message})}))}}})}}]}],rules:{name:webix.rules.isNotEmpty}},on:{onShow:function(){$$("script_stage_form").setValues(e)}}}).show()}else webix.message({type:"error",text:"Выберите\\добавьте скрипт перед добавление этапа"})}function t(e){var t=e.id?e.id:0;webix.ui({id:"add_script_win",view:"window",title:"",head:{view:"button",label:"Закрыть",width:70,click:"$$('add_script_win').close();"},head:{view:"toolbar",margin:-4,cols:[{view:"label",label:t?e.copy?"Копирование скрипта":"Редактирование скрипта":"Добавление скрипта"},{view:"icon",icon:"wxi-close",click:"$$('add_script_win').close();"}]},resize:!0,width:700,height:300,center:!0,position:"center",modal:!0,move:!0,body:{view:"form",id:"script_form",elements:[{view:"text",label:"Название",name:"name"},{cols:[{view:"button",label:t&&e.copy?"Копировать":"Сохранить",click:function(){var i=$$("script_form");if(i.validate()){i.disable();var o=i.getValues();t&&(o.id=t),e.copy&&(o.copy=e.copy),webix.ajax().post("/legacy/ext/scripts/save",o,(function(e,t,o){i.enable(),1==(t=t.json()).result?($$("add_script_win").close(),$$("scripts_lst").getList().clearAll(),$$("scripts_lst").getList().load("/legacy/ext/scripts/list"),$$("scripts_lst").setValue(t.id)):webix.message({type:"error",text:t.message})}))}else webix.message({type:"error",text:"Заполните обязательные поля"})}},{view:"button",label:"Удалить",hidden:!(t&&!e.copy),click:function(){webix.confirm({title:"Подтверждение удаления",ok:"Удалить",cancel:"Отмена",text:'Вы действительно хотите удалить скрипт "'+e.name+'"?',type:"confirm-error",callback:function(e){if(e){var i={id:t,delete:1};webix.ajax().post("/legacy/ext/scripts/save",i,(function(e,t,i){1==(t=t.json()).result?($$("add_script_win").close(),$$("scripts_lst").getList().clearAll(),$$("scripts_lst").getList().load("/legacy/ext/scripts/list")):webix.message({type:"error",text:t.message})}))}}})}}]}],rules:{name:webix.rules.isNotEmpty}},on:{onShow:function(){$$("script_form").setValues(e)}}}).show()}return{id:"scripts_toolbar",css:"top-menu-right-item",hidden:!0,cols:[{view:"button",label:"Добавить этап",width:130,click:function(){e([])}},{css:"last-button-on-left-position",view:"button",label:"Изменить этап",width:130,click:function(){var t=$$("script_stages").getSelectedId(!1);t?e($$("script_stages").getItem(t)):webix.message({type:"error",text:"Выберите этап"})}},{view:"combo",label:"Скрипт",width:400,css:"margin-left-30 font_family_top_menu",options:"/legacy/ext/scripts/list",id:"scripts_lst",on:{onChange:function(e){$$("script_stages").clearAll(),$$("script_stages").load("/legacy/ext/scripts/liststages/"+e),$$("script_elements").clearAll()}}},{view:"button",label:"Добавить",width:130,click:function(){t([])}},{view:"button",label:"Изменить",width:130,click:function(){var e=$$("scripts_lst").getValue();if(e){var i=$$("scripts_lst").getList().getItem(e);i&&t(i)}else webix.message({type:"error",text:"Выберите скрипт для редактирования"})}},{view:"button",label:"Копировать",width:130,click:function(){var e=$$("scripts_lst").getValue();if(e){var i=$$("scripts_lst").getList().getItem(e);i&&(i.copy=1,t(i))}else webix.message({type:"error",text:"Выберите скрипт для копирования"})}},{css:"last-button-on-left-position",view:"button",label:"Тест",width:130,click:function(){$$("scripts_lst").getValue()||webix.message({type:"error",text:"Выберите скрипт для тестирования"})}},{}]}}urlChange(){}}},4710:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var o=i(9587),s=i(979);class a extends o.JetView{config(){return{id:"users_toolbar",css:"top-menu-right-item",hidden:!0,cols:[{view:"button",type:"icon",icon:"wxi-plus",css:"last-button-on-left-position",width:150,label:"Добавить",click(){(new s.ClientsWindow).show({state:1})}},{},{view:"button",type:"icon",icon:"fa fa-sync",width:56,css:"disable_margin_btn_tbar",click:function(){webix.guiutils.loadUserTable()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:206,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("users"),{filterHTML:!0,filename:"Пользователи"})}}]}}urlChange(){}}},3998:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>d});var o=i(9587),s=i(8800),a=i(421),l=i(1478),r=i(6957);class n extends o.JetView{config(){let e=[{id:1,value:"В очереди"},{id:2,value:"Вызов"},{id:3,value:"Занят"},{id:4,value:"Ошибка"},{id:5,value:"Разговор"},{id:6,value:"Завершен"},{id:7,value:"Остановлен"},{id:8,value:"Запланирован"}];return{id:"co-calls-window",view:"window",position:"center",move:!0,modal:!0,resize:!1,scroll:!0,height:500,width:900,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Звонки контакту",align:"left"},{view:"icon",icon:"wxi-close",click:function(){$$("co-calls-window").hide()}}]},body:{view:"datatable",id:"co-calls-table",scroll:!0,tooltip:!0,resizeColumn:!0,columns:[{id:"time",header:"Дата и время",fillspace:2,format:webix.Date.dateToStr("%d.%m.%y в %H:%i"),minWidth:100},{id:"rbt_duration",header:"Вызов(сек)",fillspace:2,minWidth:100,template:e=>webix.guiutils.formatTime(e.duration)},{id:"duration",header:"Разговор(сек)",fillspace:2,minWidth:100,template:e=>webix.guiutils.formatTime(e.duration)},{id:"hangup_code",header:"Код завершения",fillspace:4,minWidth:100,template:function(e){return e?e.status_text?e.status_text:e.hangup_code?e.hangup_code:"":""}},{id:"state",header:"Результат",width:100,template:function(t){if(6==t.state||3==t.state)var i=e[t.state].value+"(a)";else i=e[t.state].value;return i}},{id:"ivr",header:"IVR",width:100}]}}}showWindow(e){e&&e.id&&this.$$("co-calls-table").load("/outgoingcampaign/result/"+e.id+"/calls"),this.getRoot().show()}}class d extends o.JetView{getView(){let e=[],t=[{id:1,value:"В очереди"},{id:2,value:"Вызывается"},{id:3,value:"Занят"},{id:4,value:"Ошибка"},{id:5,value:"Разговор"},{id:6,value:"Завершен"},{id:7,value:"Остановлен"},{id:8,value:"Запланирован"}],i=["OCA_MANAGER","OCS_PHONE","OCS_PLAYFILE","OCS_QUEUE"],o=()=>{$$("oc-queues").clearAll(),$$("oc-results").clearAll(),$$("co-form").setValues({}),$$("outgoingcampaign-toolbar").show(),$$("outgoingcampaigns").show(),$$("outgoingcampaign-form").hide(),$$("outgoingcampaigns").clearAll(),$$("outgoingcampaigns").load("outgoingArchive->/outgoingcampaign/list")},d=0,c=(e=$$("oc-queues").serialize())=>{let t=$$("oc-results").serialize().length,i=0,o=0,s=0;for(let a in e){let l=e[a];switch(parseInt(l.state)){case 1:++s;break;case 6:++t;break;case 3:++i;break;case 4:++o}}$$("phones-total-info").setValue("Контактов в списке: "+e.length+" Завершено: "+t+", Занят/не отвечает: "+i+", Ошибка дозвона: "+o+", В очереди: "+s)};for(;d<=23;)d<=9&&(d="0"+d.toString()),e.push(d.toString()),d++;return{hidden:!0,id:"outgoingcampaign-form",rows:[{template:"Редактирование кампании",type:"header"},{view:"form",id:"co-form",padding:24,scroll:!0,rows:[{rows:[{margin:10,cols:[{view:"fieldset",label:"Название",body:{view:"text",name:"name",required:!0,tooltip:"Название кампании: #value#"}},{view:"fieldset",label:"Период проведения",body:{cols:[{required:!0,view:"datepicker",name:"date_start",label:"Начало",labelPosition:"left",placeholder:"Click to select",labelWidth:90},{required:!0,view:"datepicker",name:"date_finish",label:"Конец",labelPosition:"left",placeholder:"Click to select"}]}},{view:"fieldset",label:"Время звонка",body:{cols:[{view:"label",label:"С:",width:40,align:"center"},{view:"datepicker",name:"time_start",required:!0,type:"time"},{view:"label",label:"По:",width:50,align:"center"},{view:"datepicker",name:"time_finish",required:!0,type:"time"}]}}]},{margin:10,cols:[{view:"fieldset",label:"Описание кампании",body:{view:"textarea",name:"description",tooltip:"Описание кампании: #value#",required:!0}},{rows:[{view:"fieldset",label:"Дни недели",body:{view:"multiselect",id:"weekDays-form",name:"weekDays",options:[{id:2,value:"Пн"},{id:3,value:"Вт"},{id:4,value:"Ср"},{id:5,value:"Чт"},{id:6,value:"Пт"},{id:7,value:"Сб"},{id:1,value:"Вс"}]}},{view:"combo",label:"Правила набора",name:"dial_context",suggest:"/config/extensions",filter:function(e,t){return-1!==e.value.indexOf(t)},labelWidth:150}]},{rows:[{view:"fieldset",label:"Настройка",body:{cols:[{view:"richselect",label:"Попыток",options:["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"],name:"call_tries",tooltip:"Попыток: #value#",required:!0,labelWidth:90,width:160},{width:10},{view:"button",label:"Расширенные",click(){this.$scope.ui(s.OCRulesWnd).showWindow(this.$scope.$view)}}]}},{},{cols:[{view:"button",label:"Обновить статусы",click(){var e=$$("co-form").getValues();parseInt(e.id)||(e.id=0),$$("oc-queues").clearAll(),$$("oc-results").clearAll();const t=$$("oc-queues").load("outgoingcampaign/"+e.id+"/queues","json",(()=>{c()})),i=$$("oc-results").load("outgoingcampaign/"+e.id+"/results","json",(()=>{c()}));webix.promise.all([t,i]).then((()=>{setTimeout((()=>{webix.guiutils.showDuplicates()}),200)}))}}]}]}]},{margin:10,cols:[{view:"tabview",id:"co-tabview",css:"white_back",cells:[{header:"Очередь",width:150,body:{id:"oc-queues-tab",rows:[{view:"datatable",id:"oc-queues",select:!0,tooltip:!0,resizeColumn:!0,scroll:!0,minHeight:200,editable:!0,columns:[{id:"phone",header:["Номер телефона",{content:"textFilter"}],width:150,minWidth:50,editor:"text"},{id:"name",header:["Имя контакта",{content:"textFilter"}],fillspace:2,minWidth:90,editor:"text"},{id:"description",header:["Примечание",{content:"textFilter"}],fillspace:2,minWidth:90,editor:"text"},{id:"state",header:"Состояние",fillspace:2,minWidth:90,options:t,editor:"select"},{id:"fromBitrix",editor:"text",hidden:!0}],on:{"data->onParse":function(e,t){c(t)}},scheme:{$init:function(e){parseInt(6==e.state||4==e.state)?e.$css="bad-row":e.$css="good-row"}}},{cols:[{view:"button",type:"icon",icon:"wxi-plus",label:"Добавить строку",width:175,click:()=>{let e=$$("oc-queues").add({});$$("oc-queues").select(e),$$("oc-queues").showCell(),$$("oc-queues").editCell(e,"phone",!0,!0),c()}},{view:"button",type:"icon",icon:"wxi-file",width:175,label:"Импорт...",click(){$$("oc-queues-tab").$scope.ui(r.ImportFileWnd).showWindow()}},{view:"button",type:"icon",icon:"wxi-sync",width:175,label:"Битрикс 24...",click(){let e=this.$scope.ui(a.OCLeadsWnd);const t={};["lead_filters","lead_status_enabled","lead_status","lead_status_user","lead_status_tries_end","e164","duplicates","duplicates_all"].forEach((e=>t[e]=$$(e).getValue())),e.showWindow(t)}},{view:"button",type:"icon",icon:"wxi-trash",width:175,label:"Очистить очередь",click(){$$("oc-queues").clearAll()}},{view:"button",type:"icon",icon:"wxi-trash",width:175,label:"Удалить дубли",click(){webix.guiutils.clearDuplicate("oc-queues"),webix.message({type:"info",text:"Сохраните изменения для удаления дублей!"})}},{view:"button",type:"icon",icon:"wxi-trash",width:175,label:"Журнал",click(){const e=$$("co-form").getValues().id;this.$scope.ui(l.OCJournalWnd).showWindow(e)}},{id:"lead_filters",name:"lead_filters",view:"text",hidden:!0},{id:"lead_status_enabled",name:"lead_status_enabled",view:"checkbox",hidden:!0},{id:"lead_status",name:"lead_status",view:"text",hidden:!0},{id:"lead_status_user",name:"lead_status_user",view:"text",hidden:!0},{id:"lead_status_tries_end",name:"lead_status_tries_end",view:"text",hidden:!0},{id:"e164",name:"e164",view:"text",hidden:!0},{id:"duplicates",name:"duplicates",view:"text",hidden:!0},{id:"duplicates_all",name:"duplicates_all",view:"text",hidden:!0},{},{view:"button",type:"icon",icon:"wxi-file",label:"Экспорт списка",width:200,click(){switch($$("co-tabview").getValue()){case"oc-journal-tab":var e="oc-journal";break;case"oc-queues-tab":e="oc-queues";break;case"oc-results-tab":e="oc-results"}webix.csv.delimiter.cols=";",webix.toCSV($$(e),{filename:e})}}]}]}},{header:"Результаты",width:170,body:{id:"oc-results-tab",rows:[{view:"datatable",id:"oc-results",select:!0,tooltip:!0,resizeColumn:!0,scroll:!0,minHeight:200,columns:[{id:"phone",header:["Номер телефона",{content:"textFilter"}],width:150,minWidth:50},{id:"name",header:["Имя контакта",{content:"textFilter"}],fillspace:2,minWidth:90},{id:"description",header:["Примечание",{content:"textFilter"}],fillspace:1,minWidth:90},{id:"state",header:"Состояние",fillspace:2,minWidth:90,template:function(e){var i="",o=parseInt(e.state)-1;return 6==e.state||3==e.state?i+=t[o].value+"(a)":i+=t[o].value,3!=e.state&&4!=e.state||(i+=" "+e.dial_result),i+=", звонков: "+e.tries+", последний: "+webix.Date.dateToStr("%d.%m в %H:%i")(e.last_call)}}],on:{onItemDblClick:function(){this.$scope.ui(n).showWindow(this.getSelectedItem())}},scheme:{$init:function(e){parseInt(6==e.state||4==e.state)?e.$css="bad-row":e.$css="good-row"}}},{cols:[{view:"button",label:"Экспорт списка",width:150,click(){switch($$("co-tabview").getValue()){case"oc-journal-tab":var e="oc-journal";break;case"oc-queues-tab":e="oc-queues";break;case"oc-results-tab":e="oc-results"}webix.csv.delimiter.cols=";",webix.toCSV($$(e),{filename:e})}},{},{view:"button",label:"Звонки контакту",width:150,click(){if($$("oc-results").getSelectedItem()){this.$scope.ui(n).showWindow($$("oc-results").getSelectedItem())}else webix.alert({type:"error",text:"Выберите контакт для просмотра звонков"})}}]}]}}]}]},{margin:10,cols:[{},{view:"label",id:"phones-total-info",align:"right",label:"Контактов в списке: 0, Завершено: 0, Занят/не отвечает: 0, Ошибка дозвона: 0, В очереди: 1"}]},{margin:10,cols:[{view:"fieldset",label:"Действие при дозвоне",body:{rows:[{cols:[{view:"combo",value:0,name:"action",id:"action",options:[{id:"0",value:"Соединение с менеджером"},{id:"1",value:"Вызов номера или группы"},{id:"2",value:"Проигрывание файла"},{id:"3",value:"Вызов очереди"}]},{view:"text",name:"action_value",id:"action_value",disabled:!1}]}]}},{width:300,cols:[{view:"button",label:"Сохранить",width:200,click(){if(!$$("co-form").validate())return webix.message({type:"error",text:"Заполните обязательные параметры"}),!1;$$("oc-queues").editStop(),webix.guiutils.clearEmptyRowsAtTheAndOfTable("oc-queues"),webix.guiutils.cleanTableToUtf8("oc-queues");const e=(()=>{let e=$$("co-form").getValues(),t={};return t.id=parseInt(e.id)?e.id:0,0==t.id&&(t.state=1),t.name=e.name,t.description=e.description,t.date_finish=webix.Date.dateToStr("%Y-%m-%d")(e.date_finish),t.date_start=webix.Date.dateToStr("%Y-%m-%d")(e.date_start),t.time_start=webix.Date.dateToStr("%H:%i")(e.time_start),t.time_finish=webix.Date.dateToStr("%H:%i")(e.time_finish),t.lead_filters=$$("lead_filters").getValue(),t.lead_status_enabled=$$("lead_status_enabled").getValue(),t.lead_status=$$("lead_status").getValue(),t.lead_status_user=$$("lead_status_user").getValue(),t.lead_status_tries_end=$$("lead_status_tries_end").getValue(),t.e164=$$("e164").getValue(),t.duplicates=$$("duplicates").getValue(),t.duplicates_all=$$("duplicates_all").getValue(),t.days=$$("weekDays-form").getValue(),t.call_tries=e.call_tries,t.action=$$("action").getValue(),t.action_value=$$("action_value").getValue(),t.phones=$$("oc-queues").serialize(),t.dial_context=e.dial_context,t})();$$("co-form").disable(),webix.extend($$("outgoingcampaign-form"),webix.ProgressBar),$$("outgoingcampaign-form").showProgress(),webix.ajax().post("outgoingcampaign/"+e.id+"/save",e).then((function(e){const t=e.json();t.result&&!t.errors.length?t.message?(webix.message({type:"success",text:t.message}),$$("co-form").enable(),$$("outgoingcampaign-form").hideProgress(),o()):(webix.message({type:"success",text:"Операция прошла успешно"}),$$("co-form").enable(),$$("outgoingcampaign-form").hideProgress(),o()):t.errors.length?(webix.message({type:"error",text:"При сохранении номеров произошла ошибка"}),t.errors.forEach((e=>{let t="";t=e.errorInfo[2]?e.errorInfo[2]:e.errorInfo?e.errorInfo.toString():e.toString(),webix.message({type:"error",text:t})}))):webix.message({type:"error",text:"Произошла ошибка выполнения операции"})})).fail((function(e){webix.message({type:"error",text:"Произошла ошибка выполнения операции"})}))}},{},{view:"button",label:"Отмена",width:100,click(){webix.confirm({text:"Не сохраненные изменения будут утеряны. Продолжить?",callback:function(e){e&&o()}})}}]}]}]}],rules:{name:webix.rules.isNotEmpty},on:{onValues:function(e){var t=$$("co-form").getValues();if(t[i[t.action]]==t.action)return!1;t[i[t.action]]=t.action,t[i[t.action]+"value"]=t.action_value,$$("co-form").setValues(t),$$("min_call_time")&&!$$("min_call_time").getValue()&&($$("min_call_time").setValue(t.min_call_time),$$("concurrent_calls_limit").setValue(t.concurrent_calls_limit))}}}]}}setFormValues(e={}){this.$$("co-form").setValues(e)}init(){this.callsWindow=this.ui(n)}}},6957:(e,t,i)=>{"use strict";i.r(t),i.d(t,{ImportFileWnd:()=>s});var o=i(9587);class s extends o.JetView{constructor(e){super(e),this.id=0,this.me=this}config(){return{view:"window",id:"importPhoneWindow",position:"center",move:!0,resizw:!0,modal:!0,width:700,height:500,scroll:!0,head:{view:"toolbar",margin:-4,cols:[{view:"label",label:"Импорт телефонов"},{view:"icon",icon:"wxi-close",click:()=>{webix.confirm({text:"Внесенные изменения не будут сохранены. <br/> Продолжить?",ok:"Ок",cancel:"Отмена",callback:function(e){e&&$$("importPhoneWindow").close()}})}}]},body:{id:"importForm",view:"form",elements:[{view:"uploader",value:translate("Выберите CSV файл"),on:{onBeforeFileAdd:e=>{let t=[{id:"phone",value:translate("Номер телефона")},{id:"name",value:translate("Имя контакта")},{id:"description",value:translate("Примечание")},{id:"state",value:translate("Состояние")}];if("csv"==e.type){let i=new FileReader;return i.onload=e=>{let i=e.target.result.split("\n");for(let e=0;e<i.length;e++){let t={};i[e]=i[e].split("\t");for(let o=0;o<i[e].length;o++)t["field"+(o+1)]=i[e][o];i[e]=t}let o=[];for(let e=0;e<i.length;e++)o.push(i[e].field1.split(";",-1));let s=$$("importData").config.columns;for(let e=0;e<o[0].length;e++)s.push({id:"field"+e,header:[{content:"selectFilter",options:t}],fillspace:1});$$("importData").refreshColumns(s),$$("importData").clearAll();let a=void 0!==o[0]&&this.me.setImportColumnIfPosible(o[0],t);for(let e=0;e<o.length;e++){if(a&&0==e)continue;let t={};for(let i=0;i<o[e].length;i++)t["field"+i]=o[e][i];o[e]=t,$$("importData").parse(o[e])}},i.readAsText(e.file),!1}webix.message({type:"error",text:"Неизвестный тип файла!"})}}},{view:"datatable",id:"importData",select:!0,resize:!0,resizeColumn:!0,columns:[],ready:function(){this.filterByAll=function(){}}},{view:"checkbox",id:"e164_file",labelRight:"Форматировать номера в стандрат E.164",labelWidth:0,value:0},{view:"checkbox",id:"duplicates_file",labelRight:"Разрешить импортировать дублирующие номера",labelWidth:0,value:0,css:"lead_wnd"},{margin:20,cols:[{view:"button",id:"importButton",type:"form",value:"Импортировать",align:"right",click(){let e=(()=>{let e=$$("importData").serialize(),t=[];if(e&&e.length)for(let i in e[0])"id"!=i&&t.push($$("importData").getFilter(i).value);let i=!1;for(let e in t){if("phone"==t[e]){i=!0;break}i=!1}let o=[];if(i){for(let e in t)-1!=t[e].indexOf("phone")&&(o.phone=e),-1!=t[e].indexOf("name")&&(o.name=e),-1!=t[e].indexOf("description")&&(o.description=e),-1!=t[e].indexOf("state")&&(o.state=e);return o}})(),t=[],i=$$("importData").serialize();if(!e||!e.phone)return webix.message({type:"error",text:"Выберите телефон"}),!1;$$("duplicates_file").getValue()||(i=webix.guiutils.removeDuplicatesPhones(i,e));const o=$$("oc-queues").serialize(),s=$$("oc-results").serialize();let a=o.concat(s);a=a.filter((e=>e.phone));for(let o in i)if(i[o]){let s=String(i[o]["field"+e.phone]);if($$("e164_file").getValue()&&(s=s.replace(/[^+0-9]/g,"")),$$("e164_file").getValue()&&!["7","8"].includes(s[0])&&!["+7"].includes(s.slice(0,2)))continue;const l={phone:s,name:"undefined"!=String(i[o]["field"+e.name])?String(i[o]["field"+e.name]):null,description:"undefined"!=String(i[o]["field"+e.description])?String(i[o]["field"+e.description]):null,state:"undefined"!=String(i[o]["field"+e.state])?String(i[o]["field"+e.state]):null,id:webix.uid()};if(l.phone.length){let e=0;$$("duplicates_file").getValue()||(e=a.find((e=>l.phone.replace(/[^+0-9]/g)===e.phone.replace(/[^+0-9]/g,"")))),e||t.push(l)}}t?(webix.guiutils.clearEmptyRowsAtTheAndOfTable("oc-queues"),$$("oc-queues").parse(t),webix.guiutils.showDuplicates(),((e=$$("oc-queues").serialize())=>{let t=$$("oc-results").serialize().length,i=0,o=0,s=0;for(let a in e){let l=e[a];switch(parseInt(l.state)){case 1:++s;break;case 6:++t;break;case 3:++i;break;case 4:++o}}$$("phones-total-info").setValue("Контактов в списке: "+e.length+" Завершено: "+t+", Занят/не отвечает: "+i+", Ошибка дозвона: "+o+", В очереди: "+s)})(),webix.message({type:"success",text:"Телефоны импортированы в таблицу!"}),$$("importPhoneWindow").close()):webix.message({type:"error",text:"Нет данных!"})}}]}]},ready:function(){webix.extend($$("importPhoneWindow"),webix.ProgressBar)}}}setImportColumnIfPosible(e,t){let i=!1,o=0;for(let s of t){for(let t of e)if(s.value.toLowerCase()==t.toLowerCase()){let e=$$("importData").getFilter("field"+o);e&&(e.value=s.id,i=!0)}o++}return i}showWindow(e){this.getRoot().show(),this.id=e}}},986:(e,t,i)=>{"use strict";i.r(t),i.d(t,{OCJournalLeadsWnd:()=>s});var o=i(9587);class s extends o.JetView{config(){return{id:"co-journal-leads-window",view:"window",position:"center",move:!0,modal:!0,resize:!0,scroll:!0,minHeight:400,minWidth:400,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Загруженные лиды",align:"left"},{view:"icon",icon:"wxi-close",click:function(){$$("co-journal-leads-window").close()}}]},body:{minWidth:400,view:"datatable",id:"journal_leads_table",select:!0,tooltip:!0,resizeColumn:!0,scroll:!0,columns:[{id:"ID",name:"ID",header:["ID лида",{content:"textFilter"}],fillspace:1},{id:"PHONE",header:["Номер телефона",{content:"textFilter"}],fillspace:1.5}]}}}showWindow(e,t){this.getRoot().show(),webix.extend($$("journal_leads_table"),webix.ProgressBar),$$("journal_leads_table").showProgress(),$$("journal_leads_table").disable(),webix.ajax().get(`outgoingcampaign/${e}/journal/${t}`).then((e=>{e=e.json(),$$("journal_leads_table").parse(e),$$("journal_leads_table").hideProgress(),$$("journal_leads_table").enable()}))}}},1478:(e,t,i)=>{"use strict";i.r(t),i.d(t,{OCJournalWnd:()=>a});var o=i(9587),s=i(986);class a extends o.JetView{constructor(e){super(e),this.id=0}config(){return{id:"co-journal-window",view:"window",position:"center",move:!0,modal:!0,resize:!0,scroll:!0,minHeight:600,minWidth:600,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Журнал кампании",align:"left"},{view:"icon",icon:"wxi-close",click:function(){$$("co-journal-window").close()}}]},body:{minWidth:1e3,view:"datatable",id:"journal_table",select:!0,tooltip:!0,resizeColumn:!0,scroll:!0,columns:[{id:"datetime",header:["Дата/время",{content:"dateRangeFilter",inputConfig:{format:webix.i18n.fullDateFormatStr},suggest:{view:"daterangesuggest",body:{timepicker:!0,calendarCount:2},on:{onHide:()=>{const e=$$("journal_table").getFilter("datetime").getValue(),t={};if(null!==e.start&&null!==e.end){let i=e.start.toLocaleString();i=i.replaceAll(".","-");let o=i.split(", ")[0].split("-");o=`${o[2]}-${o[1]}-${o[0]}}`,t.start=`${o} ${i.split(", ")[1]}`;let s=e.end.toLocaleString();s=s.replaceAll(".","-");let a=s.split(", ")[0].split("-");a=`${a[2]}-${a[1]}-${a[0]}}`,t.end=`${a} ${s.split(", ")[1]}`}webix.ajax().get(`outgoingcampaign/${this.id}/journal`,t,(e=>{$$("journal_table").clearAll(),$$("journal_table").parse(e)}))}}}}],width:250,format:webix.i18n.fullDateFormatStr},{id:"query",name:"query",header:"Фильтр",fillspace:2,minWidth:150,editor:"text"},{id:"response",name:"response",header:"Количество подгруженных лидов",fillspace:2,minWidth:150,editor:"text"}],on:{onItemDblClick:()=>{const e=$$("journal_table").getSelectedId().id;$$("journal_table").$scope.ui(s.OCJournalLeadsWnd).showWindow(this.id,e)}}}}}showWindow(e){this.getRoot().show(),this.id=e,webix.extend($$("journal_table"),webix.ProgressBar),$$("journal_table").showProgress(),$$("journal_table").disable(),webix.ajax().get(`outgoingcampaign/${this.id}/journal`,{},(e=>{$$("journal_table").parse(e),$$("journal_table").hideProgress(),$$("journal_table").enable()}))}}},421:(e,t,i)=>{"use strict";i.r(t),i.d(t,{OCLeadsWnd:()=>a});var o=i(9587);const s=(e,t)=>{webix.ajax().get("bitrix24/lead/import",{filters:`{${e}}`,next:t}).then((t=>{if(1==(t=t.json()).res&&t.data.result.length>0){$$("leads_result").hideProgress(),t.data.result.map((e=>{$$("leads_result").add({phone:e.PHONE,name:e.FIO,id:e.ID})}));let i=t.data.next,o=t.data.total;i||(i=o),$$("leads_result").getFooterNode("phone").innerHTML=`${i}/${o}(${(i/o*100).toFixed(2)}%)`,t.data.next?($$("leads_result").showProgress({position:t.data.next/t.data.total,type:"top"}),s(e,t.data.next)):($$("leads_result").hideProgress(),$$("importLeadsBtn").enable())}else $$("leads_result").hideProgress(),$$("importLeadsBtn").enable(),webix.message({type:"warning",text:t.message});$$("saveLeadsBtn").enable()}))};class a extends o.JetView{config(){return{id:"co-leads-window",view:"window",position:"center",move:!0,modal:!0,resize:!0,scroll:!0,height:600,width:600,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Импорт лидов из Битрикс24",align:"left"},{view:"icon",icon:"fa fa-question",click:()=>{webix.message({type:"info",text:'Для сохранения Настроек импорта лидов нажмите кнопку "Сохранить в кампанию"\nА затем сохраните кампанию',expire:5e3})}},{view:"icon",icon:"wxi-close",click:function(){$$("co-leads-window").close()}}]},body:{view:"form",id:"co-setup-form",elements:[{view:"tabview",id:"lead_tabs",cells:[{header:"Фильтры",body:{rows:[{view:"textarea",id:"lead_filters_modals",name:"lead_filters_modals",placeholder:'">DATE_CREATE":"2022-01-31T00:00:00","PHONE":"89212"',css:"lead_wnd"},{view:"checkbox",id:"lead_status_enabled_modals",name:"lead_status_enabled_modals",labelRight:"Устанавливать статус лида после события",labelWidth:0,css:"lead_wnd"},{view:"checkbox",id:"e164_modals",labelRight:"Форматировать номера в стандрат E.164",labelWidth:0,value:0,css:"lead_wnd"},{view:"checkbox",id:"duplicates_modals",labelRight:"Разрешить загружать дублирующие номера в очередь для обзвона",labelWidth:0,value:0,css:"lead_wnd",on:{onChange:()=>{$$("duplicates_modals").getValue()&&$$("duplicates_all_modals").setValue("0")}}},{view:"checkbox",id:"duplicates_all_modals",labelRight:"Запретить загрузку дублирующих номеров во всей кампании (включая совершенные)",labelWidth:0,value:0,css:"lead_wnd",on:{onChange:()=>{$$("duplicates_all_modals").getValue()&&$$("duplicates_modals").setValue("0")}}},{view:"combo",name:"lead_status_modals",id:"lead_status_modals",css:"lead_wnd",label:"Набор номера",labelWidth:200,suggest:{width:430,fitMaster:!1,yCount:5}},{view:"combo",name:"lead_status_user_modals",id:"lead_status_user_modals",css:"lead_wnd",label:"Пользователь",labelWidth:200,suggest:{url:"bitrix24/users",body:{template:function(e){return`${e.name} ${e.last_name}`+(e.phone?`(${e.phone})`:"")}},width:430,fitMaster:!1,yCount:5,template:function(e){return`${e.name} ${e.last_name}`+(e.phone?`(${e.phone})`:"")}}},{view:"combo",name:"lead_status_tries_end_modals",id:"lead_status_tries_end_modals",css:"lead_wnd",label:"Кончились попытки",labelWidth:200,suggest:{width:430,fitMaster:!1,yCount:5}}]}},{header:"Результаты",body:{elementsConfig:{labelWidth:100},width:600,view:"datatable",id:"leads_result",select:!0,tooltip:!0,resizeColumn:!0,scroll:!0,editable:!0,footer:!0,columns:[{id:"id",header:"ID лида",fillspace:1.5,minWidth:50,editor:"text"},{id:"name",header:"Имя клиента",fillspace:2,minWidth:150,editor:"text"},{id:"phone",header:"Номер телефона",fillspace:2,minWidth:150,editor:"text",footer:{text:" ",height:20}}]}}]},{cols:[{id:"importLeadsBtn",view:"button",label:"Загрузить из Битрикс24",click(){webix.extend($$("leads_result"),webix.ProgressBar),$$("leads_result").showProgress(),$$("lead_tabs").setValue("leads_result");let e=$$("lead_filters_modals").getValue();$$("saveLeadsBtn").disable(),$$("importLeadsBtn").disable(),s(e,0)}},{id:"saveLeadsBtn",view:"button",label:"Сохранить в кампанию",click(){let e=$$("lead_filters_modals").getValue();$$("lead_filters").setValue(e);let t=$$("lead_status_enabled_modals").getValue();$$("lead_status_enabled").setValue(t);let i=$$("lead_status_modals").getValue();$$("lead_status").setValue(i);let o=$$("lead_status_user_modals").getValue();$$("lead_status_user").setValue(o);let s=$$("lead_status_tries_end_modals").getValue();$$("lead_status_tries_end").setValue(s);let a=$$("e164_modals").getValue();$$("e164").setValue(a);let l=$$("duplicates_modals").getValue();$$("duplicates").setValue(l);let r=$$("duplicates_all_modals").getValue();$$("duplicates_all").setValue(r),webix.guiutils.clearEmptyRowsAtTheAndOfTable("oc-queues");let n=$$("leads_result").serialize(),d=$$("oc-queues").serialize();r&&(d=[...d,...$$("oc-results").serialize()]),l&&!r||(n=webix.guiutils.removeDuplicatesPhones(n)),n.map((e=>{let t=0;a&&(e.phone=e.phone.replace(/[^+0-9]/g,"")),l&&!r||d.map((i=>{e.phone.replace(/[^+0-9]/g,"")===i.phone.replace(/[^+0-9]/g,"")&&(t=1)})),t||(!a||["7","8"].includes(e.phone[0])||["+7"].includes(e.phone.slice(0,2)))&&$$("oc-queues").add({phone:e.phone,name:e.name,description:e.id,fromBitrix:1})})),webix.guiutils.showDuplicates(),$$("co-leads-window").close()}}]}]}}}showWindow(e){this.getRoot().show(),["lead_filters","lead_status_enabled","lead_status","e164","duplicates","duplicates_all"].forEach((t=>$$(`${t}_modals`).setValue(e[t]))),webix.ajax().get("bitrix24/status",(t=>{t=JSON.parse(t),$$("lead_status_modals")&&t&&$$("lead_status_modals").suggest_setter(t),$$("lead_status_tries_end_modals")&&t&&$$("lead_status_tries_end_modals").suggest_setter(t),$$("lead_status_modals")&&e.lead_status&&$$("lead_status_modals").setValue(e.lead_status),$$("lead_status_tries_end_modals")&&e.lead_status_tries_end&&$$("lead_status_tries_end_modals").setValue(e.lead_status_tries_end)}))}}},1537:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(9307);class s{getView(e=0){function t(e=""){if($$("outgoingcampaign-toolbar").hide(),$$("outgoingcampaigns").hide(),$$("outgoingcampaign-form").show(),e){if($$("co-form").setValues(e),!e.id)return;const t=webix.ajax().get("outgoingcampaign/"+e.id+"/queues").then((function(e){const t=e.json();t.length&&$$("oc-queues").parse(t);for(let e=0;e<20;++e)$$("oc-queues").add({})})),i=webix.ajax().get("outgoingcampaign/"+e.id+"/results").then((function(e){const t=e.json();t.length&&$$("oc-results").parse(t)}));webix.promise.all([t,i]).then((()=>{setTimeout((()=>{webix.guiutils.showDuplicates()}),200)}))}}var i="outgoingcampaigns";return{view:"datatable",id:i,select:!0,tooltip:!0,resizeColumn:!0,scroll:!0,columns:[{id:"tm_created",header:"Создан(а)",width:150,minWidth:50,template:function(e){var t="";switch(e.state){case"1":t+="<img src='./assets/imgs/oc-states/2.png'>";break;case"2":t+="<img src='./assets/imgs/oc-states/3.png'>";break;case"3":t+="<img src='./assets/imgs/oc-states/4.png'>";break;case"4":t+="<img src='./assets/imgs/oc-states/5.png'>";break;case"5":t+="<img src='./assets/imgs/oc-states/6.png'>";break;default:t+="<img src='./assets/imgs/oc-states/1.png'>"}return t+=webix.Date.dateToStr("%d.%m.%y в %H:%i")(e.tm_created)}},{id:"name",header:"Название",fillspace:2,minWidth:90},{id:"method",header:"Расписание",fillspace:2,minWidth:90,template:function(e){var t=webix.Date.dateToStr("%d.%m")(e.date_start);return t+="-"+webix.Date.dateToStr("%d.%m")(e.date_finish),t+=" "+Object.values(e.days).join(","),t+=" c "+e.time_start,t+=" до "+e.time_finish}},{id:"state",header:"Статус",width:200,minWidth:90,sort:"text",template:function(e){if(!e)return"1";if(!e.state)return"2";switch(e.state){case"1":return"Создан(а)";case"2":return"Выполняется";case"3":return"Приостановлен(а)";case"4":return"Остановлен(а)";case"5":return"Завершен(а)";default:return""}}}],ready:function(){let e="cmenuoutgoingcampaigns";webix.ui({view:"contextmenu",width:210,id:e,data:[{id:"edit",value:"Изменить",icon:"wxi-pencil"},{id:"delete",value:"Удалить",icon:"wxi-trash"},{id:"copy",value:"Копировать",icon:"fa fa-copy"},{id:"statistics",value:"Статистика",icon:"fa fa-chart-line"},{id:"archive",value:"Добавить в архив",icon:"fa fa-archive"}],on:{onMenuItemClick:function(e){const s=$$(i).getSelectedId();if(s){const r=s.id;switch(e){case"edit":let e=$$(i).getSelectedItem();if(e.time_start){var a=e.time_start.split(":",2);2==a.length&&(e.minutes_start=a[1],e.hours_start=a[0]);var l=e.time_finish.split(":",2);2==l.length&&(e.minutes_finish=l[1],e.hours_finish=l[0])}let s=Object.keys(e.days).map((e=>Number(e)+1)).join(",");e.settings.length?e.result=e.settings[0].result:e.result=0,t(e),$$("weekDays-form").setValue(s);break;case"delete":webix.guiutils.removeFromTable(parseInt(r),"/outgoingcampaign/"+parseInt(r)+"/remove",i,null,(()=>{$$(i).clearAll(),$$(i).load("outgoingArchive->/outgoingcampaign/list")}));break;case"copy":webix.modalbox({title:"Копировать",buttons:["Без очередей","С очередями"],width:500,text:"Копировать вместе с очередями?"}).then((function(e){webix.ajax(`outgoingcampaign/${r}/copy`,{queues:e},(e=>{1===(e=JSON.parse(e)).result?webix.message({type:"success",text:e.message}):webix.message({type:"error",text:"Копирование проищошло с ошибками"}),$$(i).clearAll(),$$(i).load("outgoingArchive->/outgoingcampaign/list")}))}));break;case"statistics":$$("outgoingcampaigns").$scope.ui(o.StatisticsWnd).showWindow(r);break;case"archive":webix.ajax().post(`outgoingcampaign/${r}/archive`).then((e=>{(e=e.json()).res?webix.message({type:"success",text:"Кампания успешно "+("archived"===e.action?"добавлена в архив":"удалена из архива")}):webix.message({type:"error",text:"Произошла ошибка"}),$$(i).load("outgoingArchive->/outgoingcampaign/list")}))}}else webix.message({type:"error"})}}}),webix.outgoingcampaignArchive?$$("cmenuoutgoingcampaigns").getItem("archive").value="Удалить из архива":$$("cmenuoutgoingcampaigns").getItem("archive").value="Добавить в архив",$$("cmenuoutgoingcampaigns").refresh(),$$(e).attachTo(this)},on:{onBeforeContextMenu:function(e){this.select(e)},onItemDblClick:function(e,i,o){var s=this.getSelectedItem();if(s.time_start){var a=s.time_start.split(":",2);2==a.length&&(s.minutes_start=a[1],s.hours_start=a[0]);var l=s.time_finish.split(":",2);2==l.length&&(s.minutes_finish=l[1],s.hours_finish=l[0])}let r=Object.keys(s.days);s.settings.length?s.result=s.settings[0].result:s.result=0,t(s),$$("weekDays-form").setValue(r)}}}}}},8800:(e,t,i)=>{"use strict";i.r(t),i.d(t,{OCRulesWnd:()=>l});var o=i(9587);let s=()=>{let e=[];return $$("co-settings-result").serialize().forEach((t=>{var i={};parseInt(t.pause)&&(i.pause=1,i.pause_time=t.pause_time),parseInt(t.stop)?i.stop=1:parseInt(t.postpone_for_radio)?i.postpone_for=t.postpone_for:parseInt(t.postpone_to)&&(i.postpone_to=t.postpone_to_date),i.result=t.id,i.webhook=null==t.webhook||""==t.webhook?null:t.webhook,i.lead_status_result=null==t.lead_status_result||""==t.lead_status_result?null:t.lead_status_result,i.lead_status_user_rules=null==t.lead_status_user_rules||""==t.lead_status_user_rules?null:t.lead_status_user_rules,e.push(i)})),e},a=(e,t=0)=>{let i=$$("co-form").getValues().id;i=null==i?1:i,$$("settings-form").save();let o={actions_after_call:s()};t||(o.other=$$("other-settings-form").getValues(),o.stop_company=$$("company-stop-form").getValues()),webix.ajax().post("outgoingcampaign/"+i+"/settings/save",o).then((()=>{e&&$$("co-setup-window").close()}))};class l extends o.JetView{config(){return{id:"co-setup-window",view:"window",position:"center",move:!0,modal:!0,resize:!0,scroll:!0,minHeight:500,width:1e3,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Расширенные настройки",align:"left"},{view:"icon",icon:"wxi-close",click:function(){$$("co-setup-window").close()}}]},body:{width:1e3,rows:[{view:"tabview",id:"co-setup-form",cells:[{header:"Действия после звонка",body:{minWidth:1e3,rows:[{view:"form",id:"settings-form",elements:[{cols:[{view:"fieldset",label:"Результат",body:{view:"list",width:250,height:250,select:"row",id:"co-settings-result",data:[{id:"0",value:"По умолчанию"},{id:"1",value:"Успех"},{id:"2",value:"Занят"},{id:"3",value:"Не отвечает"},{id:"4",value:"Неверный номер"},{id:"5",value:"Недоступен"}],on:{onBeforeSelect:function(){a(!1,1)},onBeforeAdd:function(e,t,i){if(e.toString().length>8)return!1}},ready:function(){let e=$$("co-form").getValues().id;e=null==e?1:e,webix.ajax().get("/outgoingcampaign/"+e+"/settings").then((e=>{e=e.json(),$$("co-settings-result").parse(e.dial_result),$$("co-settings-result").unselectAll(),$$("co-settings-result").select("0"),$$("other-settings-form").setValues(e.extended),$$("company-stop-form").setValues(e.stop_company)}))}}},{view:"fieldset",label:"Пауза",width:250,body:{height:250,rows:[{view:"checkbox",name:"pause",labelRight:"Пауза обработки после звонка",labelWidth:0,css:{"margin-top":"0"}},{view:"counter",name:"pause_time",value:0,label:"секунд"},{view:"text",name:"result",label:"result",hidden:!0}]}},{view:"fieldset",label:"Контакт",body:{height:250,rows:[{view:"radio",name:"stop",id:"stop",value:0,options:[{id:1,value:"Прекратить"}],on:{onChange:function(e,t){parseInt(e)>0&&($$("postpone_to_date").disable(),$$("postpone_for").disable(),$$("postpone_to").setValue(0),$$("postpone_for_radio").setValue(0))}}},{cols:[{view:"radio",value:0,id:"postpone_for_radio",name:"postpone_for_radio",options:[{id:1,value:"Отложить на"}],on:{onChange:function(e,t){parseInt(e)>0&&($$("postpone_for").enable(),$$("postpone_to_date").disable(),$$("postpone_to").setValue(0),$$("stop").setValue(0))}}},{view:"counter",value:0,name:"postpone_for",id:"postpone_for",labelRight:"секунд",disabled:!0,on:{onChange:function(e,t){e?($$("postpone_for_radio").setValue(1),this.enable(),$$("stop").setValue(0),$$("postpone_to").setValue(0),$$("postpone_to_date").disable()):($$("postpone_for_radio").setValue(0),this.disable())}}}]},{cols:[{view:"radio",value:0,name:"postpone_to",id:"postpone_to",options:[{id:1,value:"Отложить до"}],on:{onChange:function(e,t){parseInt(e)>0&&($$("postpone_for").disable(),$$("postpone_to_date").enable(),$$("postpone_for_radio").setValue(0),$$("stop").setValue(0))}}},{view:"datepicker",name:"postpone_to_date",id:"postpone_to_date",timepicker:!0,disabled:!0,placeholder:"Click to select"}]},{view:"combo",name:"lead_status_result",id:"lead_status_result",label:"Смена статуса",labelWidth:150,css:"lead_wnd",suggest:{url:"bitrix24/status",width:430,fitMaster:!1,yCount:5}},{name:"webhook",label:"Вызов вебхука",labelWidth:150,view:"text"}]}}]}]}]}},{header:"Остановка кампании",body:{id:"company-stop-form",view:"form",padding:10,rows:[{cols:[{view:"checkbox",id:"choice_of_numbers_enabled",name:"choice_of_numbers_enabled",labelRight:"Выбор одной или нескольких цифр",labelWidth:0,css:{"margin-top":"0"},width:375},{view:"text",name:"choice_of_numbers",id:"choice_of_numbers",width:125},{width:100}]},{cols:[{view:"checkbox",id:"transfer_to_operator_enabled",name:"transfer_to_operator_enabled",labelRight:"Перевод на оператора",labelWidth:0,css:{"margin-top":"0"},width:375},{view:"counter",name:"transfer_to_operator",id:"transfer_to_operator",width:125},{width:100}]},{cols:[{view:"checkbox",id:"voice_message_enabled",name:"voice_message_enabled",labelRight:"Прослушивание голосового сообщения более",labelWidth:0,css:{"margin-top":"0"},width:375},{view:"counter",name:"voice_message",id:"voice_message",width:125},{view:"label",label:"секунд",css:{"font-weight":"400 !important"},width:100}]},{cols:[{view:"checkbox",id:"stop_after_enabled",name:"stop_after_enabled",labelWidth:0,css:{"margin-top":"0"},labelRight:"Остановить кампанию через",width:375},{view:"counter",name:"stop_after",id:"stop_after",width:125},{view:"label",label:"секунд",css:{"font-weight":"400 !important"},width:100}]},{cols:[{view:"checkbox",id:"actions_count_enabled",name:"actions_count_enabled",labelRight:"Количество фиксируемых действий",labelWidth:0,css:{"margin-top":"0"},width:375},{view:"counter",name:"actions_count",id:"actions_count",width:125},{width:100}]}]}},{header:"Остальное",body:{id:"other-settings-form",view:"form",padding:10,rows:[{cols:[{view:"label",label:"Минимальное время соединения для фиксации успеха (секунды)",width:475,css:{"margin-right":"10px"}},{view:"counter",id:"min_call_time",name:"min_call_time",labelRight:"секунд"}]},{cols:[{view:"label",label:"Количество одновременных звонков",width:475,css:{"margin-right":"10px"}},{view:"counter",id:"concurrent_calls_limit",name:"concurrent_calls_limit"}]},{cols:[{view:"label",label:"Максимальное число звонков в день",width:475,css:{"margin-right":"10px"}},{view:"counter",id:"max_day_calls_limit",name:"max_day_calls_limit"}]},{cols:[{view:"label",label:"Множитель звонков (от 1 до 3)",width:475,css:{"margin-right":"10px"}},{view:"slider",id:"calls_multiplier",name:"calls_multiplier",min:1,step:.01,max:3,width:300,title:function(e){return e.value.toFixed(2)}}]},{cols:[{view:"label",label:"Время ожидания соединения (секунды)",width:475,css:{"margin-right":"10px"}},{view:"counter",id:"waiting_connection_time",name:"waiting_connection_time"}]},{cols:[{view:"label",label:"Отбивка автооответчика",width:475,css:{"margin-right":"10px"}},{view:"checkbox",id:"answering_machine_beat",name:"answering_machine_beat"}]},{cols:[{view:"label",width:475,css:{"margin-right":"10px"},label:"Удаление/блокировка контактов в ИК<span class='webix_icon fa fa-question'></span>",tooltip:"1. Если контакта нет в выборке из Битрикс и звонок в очереди (нет звонков) - контакт удаляется<br/>2. Если контакта нет в выборке из Битрикс и звонок в результатах (есть звонки) - статус контакта меняется на “Завершен."},{id:"outgoing_filtering",name:"outgoing_filtering",view:"checkbox"}]}]}}]},{cols:[{},{view:"button",label:"Ок",click(){a(1)}},{view:"button",label:"Отмена",click(){$$("co-setup-window").close()}},{}]}]}}}showWindow(){this.getRoot().show(),$$("settings-form").bind($$("co-settings-result"))}}},9307:(e,t,i)=>{"use strict";i.r(t),i.d(t,{StatisticsWnd:()=>s});var o=i(9587);class s extends o.JetView{constructor(e){super(e),this.id=0,this.me=this}config(){return{view:"window",id:"statisticsWindow",position:"center",move:!0,resizw:!0,modal:!0,width:1100,height:500,scroll:!0,head:{view:"toolbar",margin:-4,cols:[{view:"label",label:"Статистика кампании"},{view:"icon",icon:"wxi-close",click:()=>{webix.confirm({text:"Вы уверены что хотите закрыть окно со статистикой?",ok:"Ок",cancel:"Отмена",callback:function(e){e&&$$("statisticsWindow").close()}})}}]},body:{rows:[{id:"statisticsTable",tooltip:!0,resizeColumn:!0,scroll:!0,view:"datatable",width:1100,height:400,columns:[{id:"name",fillspace:1,header:"Название",minWidth:225},{id:"complete",fillspace:1,header:"Завершен",minWidth:100},{id:"busy",fillspace:1,header:"Занят"},{id:"stopped",fillspace:1,header:"Остановлен"},{id:"failed",fillspace:1,header:"Ошибка"},{id:"first_call",fillspace:2,header:{text:"Первый<span class='webix_icon fa fa-question'></span>",tooltip:"Дата/время первого звонка в ИК после её создания"}},{id:"last_call",fillspace:2,header:{text:"Последний<span class='webix_icon fa fa-question'></span>",tooltip:"Дата/время послежнего звонка в ИК после её создания"}},{id:"general_duration",fillspace:3,header:{text:"Продолжительность<span class='webix_icon fa fa-question'></span>",tooltip:"Общая продолжительность вызовов в ИК"},width:200,template:e=>webix.guiutils.formatTime(e.general_duration)}]},{cols:[{},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:()=>{webix.toExcel($$("statisticsTable"),{filterHTML:!0,filename:"statisticsOutgoing"})}},{width:200,view:"button",label:"Отмена",click(){$$("statisticsWindow").close()}},{}]}]}}}showWindow(e){this.getRoot().show(),this.id=e,webix.extend($$("statisticsTable"),webix.ProgressBar),$$("statisticsTable").showProgress(),$$("statisticsTable").disable(),$$("statisticsTable").load("outgoingArchive->/outgoingcampaign/statistics"+(void 0!==this.id?`/${this.id}`:"")).then((()=>{$$("statisticsTable").hideProgress(),$$("statisticsTable").enable()}))}}},7155:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>l});var o=i(9587),s=i(8800),a=i(9307);class l extends o.JetView{config(){function e(e,t){webix.ajax().get("outgoingcampaign/"+t+"/state/"+e).then((function(e){const t=e.json();t.result?(t.message?webix.message({type:"success",text:t.message}):webix.message({type:"success",text:"Операция прошла успешно"}),$$("outgoingcampaigns").load("outgoingArchive->outgoingcampaign/list")):webix.message({type:"error",text:"Произошла ошибка выполнения операции"})}))}function t(e){$$("outgoingcampaigns").serialize().forEach((t=>{e.includes(t.id);const i=$$("outgoingcampaigns").getItem(t.id);e.includes(t.id)?i.$css="good-row":i.$css="",$$("outgoingcampaigns").refresh()}))}function i(e){e?webix.ajax().get("/outgoings/phone",{phone:e}).then((e=>{e=e.json(),t(e=Object.values(e))})):t([])}return{id:"outgoingcampaign-toolbar",hidden:!0,css:"top-menu-right-item",cols:[{view:"text",width:200,id:"phoneSearch",label:"Поиск<span style='font-size: 10px;position: absolute;top: 15px;left: 40px;' class='webix_icon fa fa-question'></span>",tooltip:"Поиск покажет кампании в которых есть введенный номер телефона",labelAlign:"left",height:40,on:{onViewShow:function(){this.getNode().children[0].children[0].style.position="relative",this.getNode().children[0].style.display="flex",this.getNode().children[0].style.alignItems="center",this.getInputNode().style.height="30px"},onTimedKeyPress:function(){i(this.getValue())}}},{view:"label",label:""},{view:"button",width:130,label:"Обновить",click(){$$("outgoingcampaigns").load("outgoingArchive->outgoingcampaign/list"),i($$("phoneSearch").getValue())}},{view:"button",width:130,label:"Статистика",click(){this.$scope.ui(a.StatisticsWnd).showWindow()}},{view:"button",width:130,label:"Новая кампания",click(){!function(e=""){$$("outgoingcampaign-toolbar").hide(),$$("outgoingcampaigns").hide(),$$("outgoingcampaign-form").show(),e&&$$("co-form").setValues(e);for(let e=0;e<20;++e)$$("oc-queues").add({})}()}},{view:"button",width:130,label:"Правила по умолчанию",click(){this.$scope.ui(s.OCRulesWnd).showWindow(this.$scope.$view)}},{view:"button",width:"80",label:"СТАРТ",click(){const t=$$("outgoingcampaigns").getSelectedItem();t&&t.id?e(2,t.id):webix.message({type:"error",text:"Выберите кампанию для запуска"})}},{view:"button",width:"80",label:"ПАУЗА",click(){const t=$$("outgoingcampaigns").getSelectedItem();t&&t.id?e(3,t.id):webix.message({type:"error",text:"Выберите кампанию для приостановки"})}},{view:"button",width:"80",label:"СТОП",click(){const t=$$("outgoingcampaigns").getSelectedItem();t&&t.id?e(4,t.id):webix.message({type:"error",text:"Выберите кампанию для остановки"})}}]}}init(){}}},8897:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(9587);class s extends o.JetView{config(){return{rows:[{view:"form",id:"qwer",elements:[]}]}}}function a(e){var t=[],i=0;return e.forEach((function(o){i++,"object"!=typeof o&&(o={type:"template",css:"green-block",template:o,height:50}),t.push({epbx_line:1,hidden:1!=i,cols:[o,{view:"button",value:"Назад",hidden:1==i,click:function(){!function(e){for(e||(e=this);e&&(!e.config.epbx_line||1!=e.config.epbx_line);)e=e.getParentView();var t=e.getParentView().getChildViews();e.hide();var i=e.getParentView().index(e)-1;0!=i&&t[i].getChildViews()[t[i].getChildViews().length-2].show(!0,!0),t[i].getChildViews()[t[i].getChildViews().length-1].show(!0,!0)}(this)},width:100},{view:"button",value:"Дальше",hidden:i==e.length,click:function(){!function(e){for(e||(e=this),e.hide();e&&(!e.config.epbx_line||1!=e.config.epbx_line);)e=e.getParentView();var t=e.getParentView().getChildViews(),i=e.getParentView().index(e),o=e.getParentView().index(e)+1,s=t[i].getChildViews()[0],a=s.config;if(e.getChildViews()[1].hide(),"form"==a.type&&a.epbx_action&&"sendEmail"==a.epbx_action){if(!s.validate())return webix.message({type:"error",text:"Заполните обязательные поля."}),void e.getChildViews()[2].show();var l=s.getValues();l.epbx_rcpt=a.epbx_rcpt,l.epbx_subject=a.epbx_subject;var r=JSON.stringify(l);webix.message({type:"debug",text:"Отправляем письмо... Ожидайте."}),webix.ajax().post("/queues/send_mail.php",r,{error:function(t,i,o){e.getChildViews()[2].show()},success:function(i,s,a){0==s.json().result?t[o].show(!0,!0):(e.getChildViews()[2].show(),webix.message({type:"error",text:"Произошла ошибка при отправке письма."}))}})}else t[o].show(!0,!0)}(this)},width:100}]})})),t}function l(e,t){this&&this.data&&this.data.id&&0==e&&(e=this.data.id);var i=$$("mainView"),o="script_"+e;if($$(o))return $$(o).show({type:"flip",subtype:"horizontal"}),void i.showView(o);var s=$$("mainBody");s.disable(),webix.ajax().get("/legacy/scripts",{id:d,sid:e,nps_id:parseInt(n("nps"))||0},(function(t,n,d){var c,u=n.json(),h=u.elements;if(window.actionsInfo=h,window.actionsId=e,1==parseInt(u.autobuttons)){for(var w=[],p=0;p<u.substages.length;p++){var g={view:"button",label:u.substages[p].name,epbx_action:"next",epbx_action_block:u.substages[p].id,click:r,level:s.getChildViews().length,script_id:e};u.substages[p].used&&(c=g,l(g.epbx_action_block,g)),w.push(g)}h.push({cols:w})}else for(let e in h)h[e].used&&(c=h[e],l(h[e].epbx_action_block,h[e]));var b={animate:{type:"flip",subtype:"horizontal"},hidden:!0,rows:1==parseInt(u.show_prevnext)?a(h):h};b.id=o,s.addView(b,s.getChildViews().length-1),$$(o).show({type:"flip",subtype:"horizontal"}),i.showView(o),o,s.enable(),$$("$multiselect1")&&$$("$multiselect1").attachEvent("onChange",(function(e,t){var i=$$("$multiselect1").getValue();-1!=i.indexOf(",Затрудняюсь ответить")&&(i=i.replace(",Затрудняюсь ответить",""),$$("$multiselect1").setValue(i)),-1!=i.indexOf("Затрудняюсь ответить,")&&(i=i.replace("Затрудняюсь ответить,",""),$$("$multiselect1").setValue(i))})),c&&c.id&&$$(c.id)&&webix.html.addCss($$(c.id).getNode().childNodes[0].childNodes[0],"toggleOn")}))}function r(){for(var e=$$(this).config,t=$$(this).getParentView().getChildViews(),i=0;i<t.length;i++){var o=t[i].config.id;"button"==$$(o).config.view&&webix.html.removeCss($$(o).getNode().childNodes[0].childNodes[0],"toggleOn")}webix.html.addCss($$(e.id).getNode().childNodes[0].childNodes[0],"toggleOn");var s=$$(this).getParentView(),a=s.getParentView(),r=$$("mainBody"),d=0;for(i=0;i<r.getChildViews().length;i++)d&&$$(r.getChildViews()[i].config.id).hide({type:"flip",subtype:"horizontal"}),r.getChildViews()[i].config.id!=a.config.id&&r.getChildViews()[i].config.id!=s.config.id||(d=i);e.epbx_action_script;switch(e.epbx_action){case"next":if(94==e.epbx_action_block)window.close();else if(93==e.epbx_action_block)var c={nps_id:parseInt(n("nps")),answer:$$("$textarea1").getValue(),question_id:parseInt(e.script_id)||window.actionsId,answer_type:1};var u={nps_id:parseInt(n("nps")),answer:parseInt(e.epbx_action_block),question_id:parseInt(e.script_id)||window.actionsId,answer_type:2};if(window.actionsInfo&&!c)for(let e in window.actionsInfo)if(window.actionsInfo[e]&&("radio"==window.actionsInfo[e].view||"multiselect"==window.actionsInfo[e].view||"textarea"==window.actionsInfo[e].view)&&$$(window.actionsInfo[e].id)&&""!=$$(window.actionsInfo[e].id).getValue())c={nps_id:parseInt(n("nps")),answer:$$(window.actionsInfo[e].id).getValue(),question_id:parseInt(window.actionsId),answer_type:1};c&&console.log("secondData",c),console.log("data",u),u?webix.ajax().post("/legacy/scripts/set_answer",{data:u},(function(t){(t=JSON.parse(t)).result?(window.actionsInfo=[],c?webix.ajax().post("/legacy/scripts/set_answer",{data:c},(function(t){(t=JSON.parse(t)).result?(91==c.question_id&&window.close(),l(e.epbx_action_block)):(webix.message({type:"error",text:t.msg}),console.log("err",t.data))})):l(e.epbx_action_block)):(webix.message({type:"error",text:t.msg}),console.log("err",t.data))})):l(e.epbx_action_block);break;case"jump":document.location.href="/#!/main/script?id="+e.epbx_action_script;break;default:alert("Unknow action: "+e.epbx_action)}}window.epbxAction=r;var n=function(e){var t,i,o=decodeURIComponent(window.location.hash.substring(15)).split("&");for(i=0;i<o.length;i++)if((t=o[i].split("="))[0]===e)return void 0===t[1]||t[1]};var d=parseInt(n("id"));console.log(parseInt(n("id"))),$$("menuBar").hide(),webix.ajax().get("/legacy/scripts/getstageid",{id:d},(function(e,t){t=t.json(),webix.ready((function(){var e,i,o;!function(e=0){10!=parseInt(n("id"))?webix.ui({view:"scrollview",scroll:"y",id:"mainView",body:{id:"mainBody",rows:[{cols:[{rows:[{type:"header",template:"Сценарий разговора"},{rows:a(["«Должность» «Имя оператора» <strong>Здравствуйте! Чем могу помочь?</strong>","<strong>Скажите пожалуйста, как я могу к Вам обращаться?</strong>","«Имя клиента»<strong>, очень приятно!  Из какого города Вы звоните?</strong>"])}]},{rows:[{type:"header",template:"Информация о клиенте"},{view:"form",id:"info_form",elements:[{cols:[{view:"text",label:"Телефон:",name:"phone",id:"phone",labelWidth:110,readonly:!0,labelAlign:"right"},{view:"text",label:"Организация",name:"org",id:"org",labelWidth:110,labelAlign:"right"}]},{view:"text",label:"ФИО клиента",name:"fio",id:"fio",labelWidth:110,labelAlign:"right"},{view:"text",label:"Город",name:"city",labelWidth:110,labelAlign:"right"}]}]}]},{}]},ready:function(){}}).show():webix.ui({view:"scrollview",scroll:"y",id:"mainView",body:{id:"mainBody",rows:[{}]},ready:function(){}}).show(),l(e)}(parseInt(parseInt(t.result))),$$("phone")&&($$("phone").setValue(e),$$("fio").setValue(i),$$("org").setValue(o),webix.ajax().get("bigam_getinfo.php",{cid:e},(function(e,t){t=t.json(),$$("fio").setValue(t.fio),$$("org").setValue(t.org)})))}))}))},8555:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,webix.Manager.setComponent("aliases",this),this.dst_change="",this.src_change="",this.optionsWindowId="aliases_wnd",this.toolBarId="aliases_toolbar"}roleAllowed(){return["erpico.admin"]}getThis(){return this}getId(){return this.aliasesId}setId(e){this.aliasesId=e}getView(){let e=this.getThis(),t=0;return{id:"aliases",view:"datatable",hidden:!0,resizeColumn:!0,resizeRow:!0,scrollY:!0,scrollX:!0,navigation:!0,select:!0,tooltip:!0,fixedRowHeight:!1,css:"my_style",columns:[{id:"id",header:[{text:"№"},{content:"serverFilter"}],width:50,template:function(e){return e.id}},{id:"number",header:[{text:"Номер телефона"},{content:"serverFilter"}],fillspace:1},{id:"type",header:[{text:"Назначение"},{content:"serverSelectFilter"}],options:"/aliases/type/short",fillspace:1}],yCount:0,autoConfig:!0,on:{onItemDblClick:function(){e.setEditWindow()},onAfterLoad:function(){t&&this.getItem(t)&&this.select(t)},onAfterSelect:function(){t=this.getSelectedId()},onDataRequest:function(e,t){},onAfterContextMenu:function(e){e.row&&$$("aliases").select(e.row)}},ready:function(){let t="cmenualiases";webix.ui({view:"contextmenu",width:180,id:t,data:[{id:"edit",value:"Изменить",icon:"wxi-pencil"},{id:"copy",value:"Копировать",icon:"fa fa-copy"},{id:"delete",value:"Удалить",icon:"wxi-trash"}],on:{onMenuItemClick:function(t){switch(t){case"edit":e.setEditWindow();break;case"copy":e.setEditWindow(!0);break;case"delete":$$("aliases").getSelectedId()?webix.guiutils.removeFromTable(parseInt($$("aliases").getSelectedId()),"/aliases/"+parseInt($$("aliases").getSelectedId())+"/remove","aliases","removeAlias"):webix.message({type:"error",text:"Выберите алиас для удаления"})}}}}),$$(t).attachTo(this)}}}getEditWindow(e){let t=this.getThis(),i={padding:17,rows:[{elementsConfig:{labelWidth:100,margin:10,inputAlign:"left",labelPosition:"top"},width:600,view:"form",id:"aliases-add-form",autoheight:!0,scroll:!0,elements:[{view:"text",name:"id",label:"ID",hidden:!0},{view:"text",name:"number",label:"Номер телефона",inputAlign:"left",labelWidth:120,required:!0},{view:"combo",name:"type",label:"Назначение",inputAlign:"left",labelWidth:120,required:!0,options:"/aliases/type/short",on:{onChange:function(){var e=$$(this).getValue();e=e.split(","),$$("users_id").hide(),$$("phone").hide(),$$("queues_id").hide(),e.forEach((e=>{"user"==e?$$("users_id").show():"queue"==e?$$("queues_id").show():"phone"==e&&$$("phone").show()}))}}},{view:"text",name:"phone",id:"phone",label:"Номер",inputAlign:"left",labelWidth:120,hidden:!0},{view:"combo",name:"queues_id",id:"queues_id",label:"Очередь",inputAlign:"left",labelWidth:200,hidden:!0,options:{body:{template:"#fullname#"},url:"/queues/list/short"}},{view:"combo",name:"users_id",id:"users_id",label:"Пользователи",inputAlign:"left",labelWidth:120,options:"/groups/users/short",hidden:!0},{height:10}]},{margin:10,cols:[{css:"custom_trash_button",view:"button",label:"Копировать",type:"icon",align:"center",hidden:!e,width:150,icon:"fa fa-copy",click:function(){webix.$$(t.optionsWindowId).close(),t.setEditWindow(!0)}},{css:"custom_trash_button",view:"button",label:"Удалить",type:"icon",align:"center",hidden:!e,width:110,icon:"wxi-trash",click:function(){}},{},{view:"button",label:"Сохранить",type:"form",align:"center",width:120,click:function(){const e=$$("aliases-add-form");if(e.validate()){e.disable();const i=e.getValues();webix.ajax().post("/aliases/"+i.id+"/save",i).then((function(i){e.enable(),(i=i.json()).result?(webix.guiutils.loadAliasesTable(),webix.message({type:"success",text:i.message}),e.enable(),webix.$$(t.optionsWindowId).close()):(webix.message({type:"error",text:i.message}),e.enable())})).catch((function(t){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),e.enable(),console.log(t)}))}else webix.message({type:"error",text:"Заполните обязательные поля"})}},{view:"button",label:"Отмена",align:"center",width:120,click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$(t.optionsWindowId).close()}})}}]}]},o={view:"window",id:t.optionsWindowId,position:"center",modal:!0,width:600,minHeight:450,resize:!0,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:(e?"Изменить ":"Добавить")+"  алиас",align:"left"},{view:"icon",icon:"wxi-close",click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(e){e&&webix.$$(t.optionsWindowId).close()}})}}]},body:webix.copy(i),on:{onShow:function(){let i=e;i?i.id?(t.setId(i.id),$$("aliases-add-form").setValues(i)):t.setId(0):($$("aliases-add-form").setValues({id:0}),t.setId(0))}}};webix.ui(o).show(),$$("aliases-add-form").setValues(e)}getToolBar(){let e=this.getThis();return{css:"top-menu-right-item",id:e.toolBarId,hidden:!0,cols:[{view:"button",type:"icon",icon:"wxi-plus",width:150,label:"Добавить",css:"last-button-on-left-position",click:function(){$$("aliases").unselectAll(),$$(e.optionsWindowId)||e.getEditWindow(),e.showEditWindow()}},{},{css:"disable_margin_btn_tbar",view:"button",type:"icon",icon:"fa fa-sync",width:56,click:function(){webix.guiutils.loadAliasesTable()}}]}}showEditWindow(){$$(this.optionsWindowId).show()}showToolBar(){$$(this.toolBarId).show()}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").hide(),this.showToolBar()}loadData(){$$("aliases")&&(this.setToolBar(),this.loaded||(webix.extend($$("aliases"),webix.ProgressBar),$$("aliases").load("/aliases/list","json",(()=>{$$("aliases").filterByAll(),this.loaded=1}))))}setEditWindow(e=null){let t="/aliases/list?filter[id]="+$$("aliases").getSelectedItem().id,i=null;webix.ajax(t).then((function(e){i=e.json().data[0]})).then((()=>{i?(e&&(i.id=0),$$(this.optionsWindowId)||this.getEditWindow(i),this.showEditWindow()):webix.message({type:"error",text:"Выберите пользователя для редактирования"})}))}}},3283:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.id="analysis_outgoing_calls",this.toolBarId="analysis_outgoing_calls_toolbar",this.filterId="analysis_outgoing_calls_filter",webix.Manager.setComponent("analysis_outgoing_calls",this)}roleAllowed(){return["phc.reports","erpico.admin"]}getThis(){return this}getTrafficForPeriod(){return[{view:"toolbar",height:30,elements:[{view:"label",label:"<center>Трафик за период</center>"}]},{id:"traffic_for_period",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,hover:"myhover",navigation:!0,tooltip:!0,multiselect:!0,css:"my_style",columns:[{id:"name",header:[{text:"Направление",height:30}],fillspace:2},{id:"count",header:[{text:"Звонки"}],fillspace:2},{id:"duration",header:[{text:"Длительность"}],fillspace:2}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}getPopularCityForPeriod(){return[{view:"toolbar",height:30,elements:[{view:"label",label:"<center>Популярные городские звонки за период</center>"}]},{id:"popular_city_for_period",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,hover:"myhover",navigation:!0,tooltip:!0,multiselect:!0,css:"my_style",columns:[{id:"dst",header:[{text:"Номер телефона",height:30}],fillspace:2},{id:"count_dst",header:[{text:"Звонки"}],fillspace:2},{id:"floor",header:[{text:"Длительность"}],fillspace:2},{id:"group_src",header:[{text:"Сотрудники"}],fillspace:2}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}getPopularLongDistanceOverPeriod(){return[{view:"toolbar",height:30,elements:[{view:"label",label:"<center>Популярные междугородние звонки за период</center>"}]},{id:"popular_longdistance_over_period",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,hover:"myhover",navigation:!0,tooltip:!0,multiselect:!0,css:"my_style",columns:[{id:"dst",header:[{text:"Номер телефона",height:30}],fillspace:2},{id:"count_dst",header:[{text:"Звонки"}],fillspace:2},{id:"floor",header:[{text:"Длительность"}],fillspace:2},{id:"group_src",header:[{text:"Сотрудники"}],fillspace:2}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}getPopularCellForPeriod(){return[{view:"toolbar",height:30,elements:[{view:"label",label:"<center>Популярные сотовые звонки за период</center>"}]},{id:"popular_cell_for_period",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,hover:"myhover",navigation:!0,tooltip:!0,multiselect:!0,css:"my_style",columns:[{id:"dst",header:[{text:"Номер телефона",height:30}],fillspace:2},{id:"count_dst",header:[{text:"Звонки"}],fillspace:2},{id:"floor",header:[{text:"Длительность"}],fillspace:2},{id:"group_src",header:[{text:"Сотрудники"}],fillspace:2}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}getMostCallingEmployersForPeriod(){return[{view:"toolbar",height:30,elements:[{view:"label",label:"<center>Самые звонящие сотрудники за период</center>"}]},{id:"most_calling_employees_for_period",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,hover:"myhover",navigation:!0,tooltip:!0,multiselect:!0,css:"my_style",columns:[{id:"src",header:[{text:"Сотрудник",height:30}],fillspace:2},{id:"count_src",header:[{text:"Звонки"}],fillspace:2},{id:"floor",header:[{text:"Длительность"}],fillspace:2},{id:"group_dst",header:[{text:"Номера"}],fillspace:4,tooltip:"<div style:'color:#000000;'>#group_dst#</div>"}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}getGreed(){const e=this.getThis();return{id:"analysis_outgoing_calls_layout",view:"scrollview",scroll:"y",body:{rows:[{height:250,rows:e.getTrafficForPeriod()},{view:"resizer"},{height:280,rows:e.getPopularCityForPeriod()},{view:"resizer"},{height:280,rows:e.getPopularLongDistanceOverPeriod()},{view:"resizer"},{height:280,rows:e.getPopularCellForPeriod()},{view:"resizer"},{height:280,rows:e.getMostCallingEmployersForPeriod()}]}}}getView(){const e=this.getThis();return{id:e.id,hidden:!0,type:"clean",rows:[{rows:[e.getGreed()]}]}}getToolBar(){return{css:"top-menu-right-item",id:this.toolBarId,hidden:!0,cols:[{id:"search_analysis_outgoing_calls",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",click:function(){webix.guiutils.billing_analysis_outgoing_calls_refresh()}}]}}showToolBar(){$$(this.toolBarId).show()}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}loadData(){this.setToolBar(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),webix.AppFilter.setSubmit((()=>{webix.guiutils.billing_analysis_outgoing_calls_refresh()})),webix.AppFilter.setReset((()=>{})),this.loaded||(webix.AppFilter.submit(),this.loaded=1)}}},1331:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(9958);class s{constructor(){this.loaded=0,this.id="api_keys",this.table="api_keys_table",this.toolBarId="api_keys_toolbar",webix.Manager.setComponent(this.id,this)}roleAllowed(){return["phc.reports","erpico.admin"]}getGrid(){return{id:this.table,view:"datatable",select:!0,columns:[{id:"id",hidden:!0},{id:"fullname",header:"Пользователь",fillspace:1},{id:"value",header:"Ключ",fillspace:2,tooltip:"Вы можете скопировать выделенный в таблице ключ"},{id:"last_request",header:"Последнее использование",fillspace:1,format:webix.Date.dateToStr("%d.%m.%Y в %H:%i")}],clipboard:"selection",scrollAlignY:!0,scrollX:!0,tooltip:!0,export:!0}}getView(){return{id:this.id,hidden:!0,type:"clean",rows:[this.getGrid()]}}getToolBar(){return{id:this.toolBarId,css:"top-menu-right-item",hidden:!0,cols:[{view:"button",type:"icon",icon:"fa fa-plus",width:200,label:"Добавить ключ",click:function(){(new o.Api_keys_wnd).show()}},{view:"button",type:"icon",icon:"fa fa-trash-alt",width:200,label:"Удалить ключ",click:()=>{const e=$$(this.table).getSelectedId();e?webix.ajax().del(`api_key/${e}/delete`).then((()=>{webix.message({type:"success",text:"Удаление произошло успешно"})})):webix.message({type:"error",text:"Выберите ключ в списке"})}},{view:"button",type:"icon",icon:"fa fa-save",width:200,label:"Скопировать ключ",click:()=>{const e=$$(this.table).getSelectedItem();e?navigator.clipboard.writeText(e.value):webix.message({type:"error",text:"Выберите ключ в списке"})}},{id:"search_outgoing_report",view:"button",type:"icon",icon:"fa fa-sync",width:56,click:function(){webix.guiutils.loadApiKeysTable()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:()=>{webix.toExcel($$(this.table),{filterHTML:!0,filename:"OutgoingCampaign"})}}]}}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").show()}loadData(){webix.guiutils.loadApiKeysTable(),this.setToolBar(),webix.AppFilter.hide(),this.loaded||(webix.AppFilter.submit(),this.loaded=1)}}},8495:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(5006);class s{constructor(){this.loaded=0,this.toolBarId="blacklist_toolbar",webix.Manager.setComponent("blacklist",this)}roleAllowed(){return["erpico.admin"]}loadData(){webix.AppFilter.hide(),this.setToolBar(),$$("blacklist")&&!this.loaded&&$$("blacklist").load("/blacklist","json",(()=>{this.loaded=1}))}getToolBar(){return{id:this.toolBarId,css:"top-menu-right-item",hidden:!0,cols:[{css:"last-button-on-left-position",view:"button",type:"icon",icon:"wxi-plus",width:150,label:"Добавить",click(){$$("blacklist").unselectAll(),this.$scope.ui(o.BlacklistWindow).showWindow(this.$scope.$view)}},{},{view:"button",type:"icon",icon:"fa fa-sync",width:56,css:"disable_margin_btn_tbar",click:function(){webix.guiutils.loadBlacklistTable()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:206,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("blacklist"),{filterHTML:!0,filename:"Blacklist"})}}]}}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").hide()}init(){this.win2=this.ui(WindowsView)}getView(){let e=0,t=0;return{id:"blacklist",view:"datatable",hidden:!0,resizeColumn:!0,resizeRow:!0,scrollY:!0,scrollX:!0,navigation:!0,select:!0,tooltip:!0,fixedRowHeight:!1,css:"my_style",yCount:0,autoConfig:!0,columns:[{id:"id",header:[{text:"ID"},{content:"serverFilter"}],width:50},{id:"phone",header:[{text:"Номер телефона"},{content:"serverFilter"}],fillspace:1},{id:"comment",header:[{text:"Описание"},{content:"serverFilter"}],fillspace:1},{id:"action",header:[{text:"Действие"},{content:"serverSelectFilter",options:o.BlacklistWindow.userStates}],width:200},{id:"message",header:[{text:"Сообщение перед сбросом"},{content:"serverFilter"}],fillspace:1},{id:"number",header:[{text:"Номер для перевода"},{content:"serverFilter"}],fillspace:1}],ready:function(){webix.extend(this,webix.ProgressBar);let e="cmenublacklist";webix.ui({view:"contextmenu",width:180,id:e,data:[{id:"edit",value:"Изменить",icon:"wxi-pencil"},{id:"copy",value:"Копировать",icon:"fa fa-copy"},{id:"delete",value:"Удалить",icon:"wxi-trash"}],on:{onMenuItemClick:function(e){switch(e){case"edit":$$("blacklist").getSelectedItem().id?t=$$("blacklist").getSelectedItem().id:$$("blacklist").getSelectedItem().id=t,$$("blacklist").$scope.ui(o.BlacklistWindow).showWindow();break;case"copy":t=$$("blacklist").getSelectedItem().id,$$("blacklist").getSelectedItem().id=0,$$("blacklist").$scope.ui(o.BlacklistWindow).showWindow();break;case"delete":let e=$$("blacklist").getSelectedId();e?webix.guiutils.removeFromTable(parseInt(e),"/blacklist/"+parseInt(e)+"/remove","blacklist",(()=>{webix.guiutils.loadBlacklistTable()})):webix.message({type:"error"})}}}}),$$(e).attachTo(this)},on:{onItemDblClick:function(){$$("blacklist").getSelectedItem().id?t=$$("blacklist").getSelectedItem().id:$$("blacklist").getSelectedItem().id=t,$$("blacklist").$scope.ui(o.BlacklistWindow).showWindow()},onAfterLoad:function(){e&&this.getItem(e)&&this.select(e)},onAfterSelect:function(){e=this.getSelectedId()},onAfterContextMenu:function(e){e.row&&$$("blacklist").select(e.row)}}}}}},6068:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(5226);class s{constructor(){this.loaded=0,this.id="cdr_reports",this.toolBarId="cdr_toolbar",this.isRenderOnce=0,this.ReportsWindow=new o.default,this.load=1,webix.Manager.setComponent("cdr_reports",this)}roleAllowed(){return[]}getThis(){return this}getGreed(){const e=this.getThis();return{id:e.id,view:"datatable",resizeColumn:!0,resizeRow:!1,select:!0,footer:!0,disabled:!1,multiselect:!1,hidden:!0,tooltip:!0,columns:[{id:"status",header:"",width:30,template:function(e){return e.answered?"<span class='greencircle'></span>":"<span class='redcircle'></span>"},footer:{content:"summTotal",colspan:2}},{id:"time",header:["Дата/время",{content:"serverDateRangeFilter",inputConfig:{timepicker:!0,start:webix.startDayDateTime,finish:webix.endDayDateTime,suggest:{view:"daterangesuggest",body:{timepicker:!0,calendar:{weekNumber:!0,on:{onAfterZoom(e){-1===e&&(this.$timeSelectionActive=!0)},onBeforeDateSelect(e){if(this.$timeSelectionActive)this.$timeSelectionActive=!1;else{let t=$$("cdr_reports").getFilter("time").data.value;t.start&&t.end?e.setHours(0,0,0):e.setHours(23,59,59)}}}},icons:[{template:function(){return"<span role='button' tabindex='0' class='webix_cal_icon_today webix_cal_icon'>"+webix.i18n.calendar.today+"</span>"},on_click:{webix_cal_icon_today:function(){let e=new Date,t=new Date;e.setHours(23,59,59),t.setHours(0,0,0),this.addToRange(t),this.addToRange(e),this.callEvent("onTodaySet",[this.getValue()])}}},{template:function(){return"<span role='button' tabindex='0' class='webix_cal_icon_clear webix_cal_icon'>"+webix.i18n.calendar.clear+"</span>"},on_click:{webix_cal_icon_clear:function(){this.setValue(""),this.callEvent("onDateClear",[])}}}]}}}}],width:250,format:webix.Date.dateToStr("%d.%m.%Y в %H:%i:%s")},{id:"id",header:["ID",{content:"textFilter"}],width:200,hidden:!0},{id:"agent",header:["Сотрудник",{inputConfig:{disabled:!1},content:"customFilterSelect",options:"/groups/users/short?nameasvalue=1",suggest:{body:{template:"#value#"},filter:function(e,t){return-1!==e.value.toString().toLowerCase().indexOf(t.toLowerCase())}}}],width:200,footer:{text:"Выберите звонок для прослушивания",colspan:3}},{id:"queue",header:["Очередь",{content:"customFilterSelect",options:"/queues/list/short?nameasvalue=1",suggest:{body:{template:"#value#"},filter:function(e,t){return-1!==e.value.toString().toLowerCase().indexOf(t.toLowerCase())}}}],width:200},{id:"src",header:["От кого",{content:"textFilter",placeholder:"Введите номер для поиска...",colspan:2}],width:130,template:function(e){return e.src&&e.src.length>4?e.src+" <span class='webix_icon fa fa-phone' style='cursor: pointer'></span>":e.src}},{id:"dst",header:["Кому"],width:130,template:function(e){return e.dst&&e.dst.length>4?e.dst+" <span class='webix_icon fa fa-phone' style='cursor: pointer'></span>":e.dst},footer:{content:"pdd",colspan:2}},{id:"hold",header:["Ожидание",{content:"multiSelectFilter",options:[],suggest:{view:"my_suggest1",fitMaster:!1,width:200}}],width:100,template:function(e){return webix.guiutils.formatTime(e.hold)}},{id:"talk",header:["Разговор",{content:"multiSelectFilter",options:[],suggest:{view:"my_suggest1",fitMaster:!1,width:200}}],width:80,template:function(e){return webix.guiutils.formatTime(e.talk)},footer:{content:"sum_billsec",colspan:2}},{id:"reason",header:["Результат",{content:"richSelectFilter",suggest:{fitMaster:!1,width:220},options:[{id:"EXITWITHTIMEOUT",value:"Не дождался ответа"},{id:"RINGNOANSWER",value:"Оператор не ответил"},{id:"NO ANSWER",value:"Нет ответа"},{id:"ABANDON",value:"Брошенный"},{id:"FAILED",value:"Ошибка набора"},{id:"BUSY",value:"Занято"},{id:"ANSWERED",value:"Разговор состоялся"},{id:"COMPLETEAGENT",value:"Завершен оператором"},{id:"COMPLETECALLER",value:"Завершен клиентом"},{id:"TRANSFER",value:"Переведен"}]}],width:190,template:function(e){var t='<span class = "state '+e.reason+'">';return t+=webix.guiutils.сallReasonToTxt(e.reason),t+="</span>"}},{id:"userfield",header:["Входящий номер",{content:"textFilter"}],fillspace:1,template:function(e){return e.userfield},footer:{content:"count_answered"}}],on:{onBeforeFilter:()=>{if(!webix.Manager.getComponent("cdr_reports").load)return webix.message("Нажмите кнопку 'Обновить' для загрузки данных.","refresh",2e3,"show_refresh_button"),document.getElementsByClassName("webix_refresh")[0].parentElement.style.top="55px",!1},onBeforeLoad:function(){webix.extend(this,webix.ProgressBar)},"data->onParse":function(e,t){if(webix.Manager.getComponent("cdr_reports").load=0,0===t.data.length){var i=0;$$("cdr_reports").data.each((function(e){e&&e.time&&i++})),t.total_count=i}t.data&&(this.config.calls=t.data),t.server_footer&&(this.config.$serverFooter=t.server_footer,this.config.serverFooter=t.server_footer)},onItemDblClick:function(){e.ReportsWindow.showWindow()},onAfterSelect:function(){var e=$$("cdr_reports"),t=e.getSelectedItem(),i="Выберите звонок для прослушивания";t&&(i='<a href="/recording/'+t.uid+'.mp3" title="Скачать запись разговора"><i class="fas fa-download" style="font-size: 26px;"></i></a><audio style=\'height:20px;width:400px;\' controls=\'true\' src=\'/recording/'+t.uid+".mp3' type='audio/mpeg' preload='none'/>"),e.getColumnConfig("agent").footer[0].text=i,e.refreshColumns()},onAfterRender:function(){if($$("reportDateRange")&&$$("cdr_reports").getFilter("time")){let t=$$("reportDateRange").getValue();t&&(e.isRenderOnce||(e.isRenderOnce=1,$$("cdr_reports").getFilter("time").config.value=t))}}},ready:()=>{webix.extend(this,webix.ProgressBar)}}}getView(){return{rows:[this.getGreed()]}}getToolBar(){return{css:"top-menu-right-item",id:this.toolBarId,hidden:!0,cols:[{css:"disable_margin_btn_tbar",id:"cdr_refresh_button",view:"button",type:"icon",icon:"wxi-sync",width:56,click:function(){webix.Manager.getComponent("cdr_reports").load?webix.message("Дождитесь окончания предыдущей загрузки.","error"):(webix.Manager.getComponent("cdr_reports").load=1,$$("cdr_reports").filterByAll())}},{id:"cdr_excel_button",view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",hidden:!1,click:function(){$$("cdr_reports").loadNext(1e6,0,(function(){webix.toExcel($$("cdr_reports"),{filterHTML:!0,filename:"Звонки",footer:!1}).fail((e=>console.error(e)))}))}}]}}showToolBar(){$$(this.toolBarId).show()}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").hide(),this.showToolBar()}loadData(){webix.AppFilter.hide(),$$("cdr_reports")&&(this.setToolBar(),webix.extend($$("cdr_reports"),webix.ProgressBar),this.loaded||$$("cdr_reports").load("calldatePartialLoad->/cdr/list","json",(()=>{this.loaded=1})))}}},3454:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(5944);class s{constructor(){this.loaded=0,this.PBXChannelsWindow=new o.default,this.toolBarId="channels_toolbar",webix.Manager.setComponent("channels",this)}roleAllowed(){return["phc.admin","erpico.admin"]}getThis(){return this}getGreed(){let e=0;return{hidden:!0,id:"channels",view:"datatable",resizeColumn:!0,resizeRow:!0,scroll:!0,navigation:!0,select:!0,css:"my_style",columns:[{id:"active",header:"",width:30,template:function(e){return 1==e.active?"<span class='greencircle'></span>":"<span class='graycircle'></span>"},footer:{content:"summTotal",colspan:2}},{id:"id",header:[{text:"№"},{content:"serverFilter"}],width:50},{id:"name",header:[{text:"Код"},{content:"serverFilter"}],fillspace:1},{id:"fullname",header:[{text:"Название"},{content:"serverFilter"}],fillspace:1},{id:"provider",header:[{text:"Провайдер"},{content:"serverFilter"}],fillspace:1,options:"/config/sip"},{id:"login",header:[{text:"Логин"},{content:"serverFilter"}],fillspace:1},{id:"phone",header:[{text:"Номер телефона"},{content:"serverFilter"}],fillspace:1},{id:"host",header:[{text:"Адрес сервера"},{content:"serverFilter"}],fillspace:1},{id:"port",header:[{text:"Порт"},{content:"serverFilter"}],fillspace:1},{id:"rules",header:[{text:"Правила обработки"},{content:"serverFilter"}],fillspace:1,options:"/config/extensions"}],on:{onItemDblClick:function(){let e=this.getSelectedItem();this.PBXChannelsWindow||(this.PBXChannelsWindow=new o.default),this.PBXChannelsWindow.show(e)},onAfterLoad:function(){e&&this.getItem(e)&&this.select(e)},onAfterSelect:function(){e=this.getSelectedId()},onAfterContextMenu:function(e){e.row&&this.select(e.row)}},ready:function(){let e="cmenuchannels";webix.ui({view:"contextmenu",width:180,id:e,data:[{id:"edit",value:"Изменить",icon:"wxi-pencil"},{id:"copy",value:"Копировать",icon:"fa fa-copy"},{id:"delete",value:"Удалить",icon:"wxi-trash"}],on:{onMenuItemClick:function(e){let t="/channels/list?filter[id]="+$$("channels").getSelectedItem().id,i=null;switch(e){case"edit":$$("channels").getSelectedId()?(new o.default).show($$("channels").getSelectedItem()):webix.message({type:"error",text:"Выберите телефон для редактирования"});break;case"copy":webix.ajax(t).then((function(e){i=e.json().data[0]})).then((()=>{i?(i.id=0,(new o.default).show(i)):webix.message({type:"error",text:"Выберите канал для копирования"})}));break;case"delete":$$("channels").getSelectedId()?webix.guiutils.removeFromTable(parseInt($$("channels").getSelectedId()),"/channels/"+parseInt($$("channels").getSelectedId())+"/remove","channels","removeChannel"):webix.message({type:"error",text:"Выберите канал для удаления"})}}}}),$$(e).attachTo(this),webix.extend(this,webix.ProgressBar)}}}getView(){return this.getGreed()}getToolBar(){const e=this.getThis();return{id:"channels_toolbar",css:"top-menu-right-item",hidden:!0,cols:[{view:"button",type:"icon",icon:"wxi-plus",width:150,label:"Добавить",css:"last-button-on-left-position",click:function(){e.PBXChannelsWindow.show({})}},{},{css:"disable_margin_btn_tbar",view:"button",type:"icon",icon:"fa fa-sync",width:56,click:function(){e.PBXChannelsWindow.loadTable()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("channels"),{filterHTML:!0,filename:"Каналы"})}}]}}showToolBar(){$$(this.toolBarId).show()}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}loadData(){webix.AppFilter.hide(),this.setToolBar(),$$("channels")&&(webix.extend($$("channels"),webix.ProgressBar),this.loaded||this.PBXChannelsWindow.loadTable((()=>{this.loaded=1})))}}},9542:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>l});var o=i(2968),s=i(9380),a=i(2557);class l{constructor(){webix.Manager.setComponent("chat",this)}getView(){return{view:"chat",id:"chat",autoheight:!0,scroll:!0,calls:!1,files:!1,compact:!1,url:"/chat",override:new Map([[chat.services.Backend,o.Z],[chat.views.sidebar,s.Z],[chat.views["messages/toolbar"],a.Z]])}}loadData(){console.log(2),webix.AppFilter.hide(),console.log(1)}roleAllowed(){return null}}},2122:(e,t,i)=>{"use strict";i.r(t),i.d(t,{ChatModal:()=>n});var o=i(2968),s=i(9380),a=i(2557);class l extends chat.views.chats{init(e){super.init(e)}config(){const e=super.config();return e.rows.pop(),e}}class r extends chat.views.messages{init(e){super.init(e);let t=e.getChildViews()[1].getChildViews()[1];t.getChildViews()[0],t.getChildViews()[1].getChildViews()[1];t.refresh()}config(){return super.config()}}class n{show(){let e={view:"window",position:"center",id:"chatWindow",move:!0,resize:!0,hidden:!0,height:600,width:900,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Чат",align:"left"},{view:"icon",icon:"wxi-close",click:()=>{$$("chatWindow").hide()}}]},body:{padding:0,rows:[{view:"chat",id:"chatWindowForm",autoheight:!0,scroll:!0,calls:!1,files:!1,compact:!0,url:"/chat",locale:{lang:"ru",webix:{ru:"ru-RU"}},override:new Map([[chat.services.Backend,o.Z],[chat.views.sidebar,s.Z],[chat.views["messages/toolbar"],a.Z],[chat.views.chats,l],[chat.views.messages,r]])}]}};webix.ui(e).show()}showWindow(e=void 0,t=void 0){this.deviceId=e,this.callback=t,this.getRoot().show()}closeWindow(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:e=>{e&&this.getRoot().hide()}})}closeWindowWithoutAsk(){this.getRoot().hide()}loadData(){}}},4909:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.toolBarId="checklist_toolbar",this.filterId="checklist_filter",this.id="checklist",this.greeId="ext_checklist_table",webix.Manager.setComponent("checklist",this)}roleAllowed(){return["phc.reports","erpico.admin"]}getThis(){return this}folderStyling(e){if(e.block){if(1==e.$level)return"<span class='webix_icon fa-angle-double-right'></span>";if(2==e.$level)return"<span class='webix_icon fa-question'></span>"}else{if(1==e.$level)return"<span class='webix_icon fa fa-calendar'></span>";if(2==e.$level)return"<span class='webix_icon fa fa-star'></span>";if(3==e.$level)return"<span class='webix_icon fa fa-adjust'></span>";if(4==e.$level)return"<span class='webix_icon fa fa-stopwatch'></span>";if(5==e.$level)return""}}getGreed(){return{id:"ext_checklist_table",view:"treetable",resizeColumn:!0,resizeRow:!0,select:!0,type:{folder:this.folderStyling},columns:[{id:"value",header:[{text:""}],template:"{common.treetable()} #value#",width:300},{id:"total",header:[{text:"Итоговый балл"}],width:200},{id:"percent",header:[{text:"Процент"}],width:300}],on:{onItemDblClick:function(e,t,i){var o=$$("ext_checklist_table").getItem(e);4==o.$level&&webix.guiutils.checklistFillWindow(o.user_id,o.date,o.checklist_id)},onAfterLoad:function(e){}}}}getView(){return{id:"checklist",hidden:!0,type:"clean",rows:[{rows:[this.getGreed()]}]}}addGroup(e){webix.ui({view:"window",height:200,width:300,modal:!0,position:"center",head:e?"Добавление блока":"Добавление группы",body:{view:"form",elements:[{view:"text",name:"name",label:"Название",value:""},{cols:[{view:"button",label:"Добавить",click:function(){var t={addgroup:this.getFormView().elements.name.getValue(),parent_id:e};this.getFormView().getParentView().close(),webix.ajax().post("/legacy/ext/checklist/addgroup",t,{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка при добавлении."})},success:function(t,i,o){var s;(webix.message({type:"success",text:"Операция добавления успешно завершена."}),e)?($$("questions_list").clearAll(),(s=$$("questions_checklist_block")).getList().clearAll(),s.getList().load("/legacy/ext/checklists/groups/"+e),s.setValue(i.json().id)):($$("questions_list").clearAll(),(s=$$("questions_checklist_block")).getList().clearAll(),s.setValue(0),(s=$$("questions_checklist")).getList().clearAll(),s.getList().load("/legacy/ext/checklists/groups/"),s.setValue(i.json().id))}})}},{view:"button",label:"Отмена",click:function(){this.getFormView().getParentView().close()}}]}]}}).show()}removeGroup(e){webix.ui({view:"window",height:200,width:300,modal:!0,position:"center",head:"Удалить выбранную группу вопросов?",body:{view:"form",elements:[{cols:[{view:"button",label:"Удалить",click:function(){var t={deletegroup:e};this.getFormView().getParentView().close(),webix.ajax().post("/legacy/ext/checklist/deletegroup",t,{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка при удалении."})},success:function(e,t,i){webix.message({type:"success",text:"Операция удаления успешно завершена."});var o=$$("questions_checklist_block");o.getList().clearAll(),o.setValue(0),(o=$$("questions_checklist")).getList().clearAll(),o.getList().load("/legacy/ext/checklists/groups/"),o.setValue(0),$$("questions_checklist_save").disable(),$$("row_questions_checklist_block").hide()}})}},{view:"button",label:"Отмена",click:function(){this.getFormView().getParentView().close()}}]}]}}).show()}checklistEditWindow(){const e=this.getThis();webix.ui({id:"checklist_setup_win",view:"window",head:{view:"toolbar",margin:-4,cols:[{view:"label",label:"Список вопросов чеклиста"},{view:"icon",icon:"wxi-close",click:"$$('checklist_setup_win').close();"}]},resize:!0,width:600,height:500,center:!0,position:"center",modal:!0,move:!0,body:{rows:[{cols:[{view:"richselect",id:"questions_checklist",label:"Группа",labelWidth:100,labelAlign:"right",options:"/legacy/ext/checklists/groups/",on:{onChange:function(e,t){$$("questions_list").clearAll();var i=$$("questions_checklist_block");i.getList().clearAll(),i.setValue(0),e&&(i.getList().load("/legacy/ext/checklists/groups/"+e),$$("row_questions_checklist_block").show())}}},{id:"questions_checklist_add",view:"button",type:"icon",icon:"wxi-plus",width:36,click:function(){e.addGroup(0)}},{id:"questions_checklist_delete",view:"button",type:"icon",icon:"wxi-minus",width:36,click:function(){e.removeGroup($$("questions_checklist").getValue())}}]},{id:"row_questions_checklist_block",hidden:!0,cols:[{view:"richselect",id:"questions_checklist_block",label:"Блок",labelWidth:100,labelAlign:"right",options:[],value:1,on:{onChange:function(e,t){$$("questions_list").clearAll(),e&&($$("questions_list").load("/legacy/ext/checklist/list/"+e),$$("questions_checklist_save").enable())}}},{id:"questions_checklist_block_add",view:"button",type:"icon",icon:"wxi-plus",width:36,click:function(){e.addGroup($$("questions_checklist").getValue())}},{id:"questions_checklist_block_delete",view:"button",type:"icon",icon:"wxi-minus",width:36,click:function(){e.removeGroup($$("questions_checklist_block").getValue())}}]},{view:"treetable",id:"questions_list",autowidth:!0,editable:!0,columns:[{id:"question",header:"Вопрос",width:450,editor:"text"}],on:{onItemClick:function(e){this.editColumn(e),this.focusEditor(e)}}},{cols:[{view:"button",id:"questions_checklist_save",disabled:!1,label:"Сохранить",click:function(){var e=$$("questions_checklist_block").getValue();if(e){var t=[];$$("questions_list").editStop(),$$("questions_list").data.each&&$$("questions_list").data.each((function(e){t.push(e)}));var i=JSON.stringify(t);webix.ajax().post("/legacy/ext/checklist/questions/save/"+e,i,{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка при сохранении."})},success:function(e,t,i){webix.message({type:"success",text:"Операция сохранения успешно завершена."})}})}}},{view:"button",label:"Закрыть окно",click:"$$('checklist_setup_win').close();"}]}]}}).show()}reloadData(){$$("ext_checklist_table").clearAll();var e=webix.guiutils.getDateRange("reportDateRange");webix.extend($$("ext_checklist_table"),webix.ProgressBar),$$("ext_checklist_table").showProgress(),$$("ext_checklist_table").load("/legacy/ext/checklist/tree?start="+e.start+"&finish="+e.end)}getToolBar(){const e=this.getThis();return{id:"checklist_toolbar",hidden:!0,css:"top-menu-right-item",cols:[{id:"checklist_questions_fill",view:"button",type:"icon",icon:"fa fa-comments",width:155,label:"Заполнить",click:function(){webix.guiutils.checklistFillWindow(0,0,0)}},{id:"checklist_reload",view:"button",type:"icon",icon:"wxi-search",width:155,label:"Поиск",click:()=>{this.reloadData()}},{view:"button",type:"icon",icon:"wxi-file",width:185,label:"Поиск и развернуть",click:function(){$$("ext_checklist_table").clearAll();var e=webix.guiutils.getDateRange("reportDateRange");webix.extend($$("ext_checklist_table"),webix.ProgressBar),$$("ext_checklist_table").showProgress(),$$("ext_checklist_table").load("/legacy/ext/checklist/tree?start="+e.start+"&finish="+e.end+"&open=1")}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("ext_checklist_table"))}},{id:"checklist_questions_list",view:"button",type:"icon",icon:"fa fa-question",width:50,click:function(){e.checklistEditWindow()}}]}}showToolBar(){$$(this.toolBarId).show()}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}loadData(){this.setToolBar(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),webix.AppFilter.setSubmit((()=>{this.reloadData()})),webix.AppFilter.setReset((()=>{})),$$("ext_checklist_table")&&(this.loaded||(webix.AppFilter.submit(),this.loaded=1))}}},6846:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.id="clients",this.contextMenuId="clientsContext",this.toolBarId="clients_toolbar",webix.Manager.setComponent("clients",this)}roleAllowed(){return["phc.nps","erpico.admin"]}getThis(){return this}getGreed(){let e=this.getThis();return{id:this.id,hidden:!0,view:"datatable",select:!0,css:"my_style",tooltip:!0,scrollY:!0,scrollX:!0,scrollAlignY:!0,footer:!0,resizeColumn:!0,columns:[{id:"id",header:[{text:translate("ID")},{content:"serverFilter"}],width:40,footer:{content:"rowCount",colspan:2}},{id:"created",header:[{text:translate("Дата добавления")},{content:"serverDateRangeFilter"}],width:180,format:webix.Date.dateToStr("%d.%m.%Y в %H:%i:%s")},{id:"phone",header:[{text:translate("Номер телефон")},{content:"serverFilter"}],width:150,template:function(e){let t="";return t=window.MakeCall?"<a href=\"javascript:window.MakeCall('"+e.phone+"');\">"+e.phone+"</a>":'<a href="tel:'+e.phone+'">'+e.phone+"</a>",t}},{id:"name",header:[{text:translate("Имя клиента")},{content:"serverFilter"}],width:220},{id:"called",header:[{text:translate("Последний звонок")},{content:"serverDateRangeFilter"}],width:220},{id:"buyer_status",header:[{text:translate("Статус покупателя")},{content:"multiSelectFilter",suggest:webix.filterSuggest,options:[{id:"Первичный"},{id:"Повторный"}]}],width:180},{id:"lastbuy_date",header:[{text:translate("Дата последней покупки")},""],width:220},{id:"city",header:[{text:translate("Город")},{content:"multiSelectFilter",suggest:webix.filterSuggest,options:"legacy/nps/options/city"}],width:180},{id:"filial",header:[{text:translate("Филиал")},{content:"multiSelectFilter",suggest:webix.filterSuggest,options:"legacy/nps/options/filial"}],width:180},{id:"channel",header:[{text:translate("Канал")},{content:"multiSelectFilter",suggest:webix.filterSuggest,options:"legacy/nps/options/channel"}],width:180},{id:"state",header:[{text:translate("Результат звонка")},{content:"multiSelectFilter",suggest:{fitMaster:!1,width:250,body:{template:"#value#"},on:{onBeforeShow:function(){var e=this.getList(),t=[];e.data.each((function(e){t.push(e.id)}));var i=webix.html.getTextSize(t,"webix_list_item").width+100;this.define("width",i),this.resize()}}},options:[{id:0,value:"Не звонили"},{id:1,value:"Не отвечает"},{id:2,value:"Занят"},{id:3,value:"Перезвонить"},{id:4,value:"Состоялся"}]}],template:e=>{var t=["Не звонили","Не отвечает","Занят","Перезвонить","Состоялся"];let i="";return e.state&&(i=3==e.state&&e.called?t[e.state]+" в "+e.called:t[e.state]),i},width:180},{id:"anketa",width:120,header:[{text:translate("Анкета")},{text:""}],template:e=>{let t="";return e.id&&(t='<div class="webix_view webix_control webix_el_button" style="display: inline-block; vertical-align: top; border-width: 0px; width: 100px; height: 38px;"><div class="webix_el_box" style="width:100px; height:30px"><button type="button" class="webix_img_btn_abs webixtype_base accountDone" style="width:100%; "><center>Анкета</center></button></div></div></div>'),t}}],datafetch:20,loadahead:10,on:{onBeforeContextMenu:function(e){this.select(e)},onItemClick:function(e){if("anketa"==e.column){let e=$$("clients").getSelectedItem();window.open(window.location.origin+"/#!/main/script?id=10&nps="+e.id,"_blank")}},onAfterFilter:function(){},onBeforeFilter:function(e,t,i){}},ready:function(){webix.extend(this,webix.ProgressBar),e.bindContextMenuToGreed()}}}bindContextMenuToGreed(){let e=this.getThis();$$(e.contextMenuId)||webix.ui({view:"contextmenu",submenu:"data",id:e.contextMenuId,width:300,data:[{value:"Изменить статус",id:"editStatus",submenu:[{id:"0",value:"Не звонили"},{id:1,value:"Не отвечает"},{id:2,value:"Занят"},{id:3,value:"Перезвонить"},{id:4,value:"Совершен"}]},{value:"Анкета",id:"open"}],on:{onMenuItemClick:function(e){let t=this.getMenuItem(e);if("open"==t.id){let e=$$("clients")?$$("clients").getSelectedItem():0;e?window.open(window.location.origin+"/#!/main/script?id=10&nps="+e.id,"_blank"):webix.message({type:"error",text:"Произошла ошибка"})}else if("editStatus"!=t.id){let e=$$("clients").getSelectedItem();webix.ajax().get("legacy/nps/clients/setstate",{npsId:e.id,state:t.id},(function(e){(e=JSON.parse(e)).result?(webix.message({text:"Статус звонка изменен"}),$$("clients").clearAll(),$$("clients").load($$("clients").config.url)):(webix.message({type:"error",text:e.msg}),console.log("err",e.data))}))}}}}).attachTo($$(e.id))}getView(){return this.getGreed()}removeClient(){var e=$$("clients");if(e){var t=e.getSelectedItem();t&&t.id?webix.confirm({text:"Клиент и результаты его анкетирования будут удалены. <br> Продолжить?",callback:function(e){if(!e)return!1;webix.ajax().get("legacy/nps/clients/remove",{id:t.id},(function(e){(e=JSON.parse(e)).result?(webix.message({text:"Клиент удален"}),$$("clients").remove(t.id)):(webix.message({type:"error",text:e.msg}),console.log("err",e.data))}))}}):webix.message({type:"error",text:"Выберите клиента!"})}else webix.message({type:"error",text:"Произошла ошибка!"})}showModalWindow(){const e=this.getThis();webix.ui({view:"window",id:"importWindow",position:"center",move:!0,resizw:!0,modal:!0,width:700,height:500,scroll:!0,head:{view:"toolbar",margin:-4,cols:[{view:"label",label:"Импорт клиентов"},{view:"icon",icon:"wxi-close",click:()=>{webix.confirm({text:"Внесенные изменения не будут сохранены. <br/> Продолжить?",ok:"Ок",cancel:"Отмена",callback:function(e){e&&$$("importWindow").close()}})}}]},body:{id:"importForm",view:"form",elements:[{cols:[{},{view:"uploader",value:translate("Выберите Excel или CSV файл"),on:{onBeforeFileAdd:function(e){var t=[{id:"phone",value:translate("Телефон")},{id:"name",value:translate("Имя клиента")},{id:"buyer_status",value:translate("Статус покупателя")},{id:"lastbuy_date",value:translate("Дата последней покупки")},{id:"city",value:translate("Город")},{id:"filial",value:translate("Филиал")},{id:"channel",value:translate("Канал")},{id:"motivational_p",value:translate("Мотивационная программа")}];if(t.unshift({id:"empty",value:"Выберите зачение"}),"xlsx"==e.type||"xls"==e.type)webix.DataDriver.excel.toObject(e.file).then((function(e){for(var i=e.data,o=webix.toArray($$("importData").config.columns),s=0;s<i[0].length;s++)o.insertAt({id:"field"+s,header:[{content:"selectFilter",options:t}]},s);$$("importData").refreshColumns();for(s=0;s<i.length;s++){for(var a={},l=0;l<i[s].length;l++)a["field"+l]=i[s][l];i[s]=a}$$("importData").clearAll(),$$("importData").parse(i)}));else{if("csv"==e.type){var i=new FileReader;return i.onload=function(e){for(var i=e.target.result.split("\n"),o=0;o<i.length;o++){var s={};i[o]=i[o].split("\t");for(var a=0;a<i[o].length;a++)s["field"+(a+1)]=i[o][a];i[o]=s}var l=[];for(o=0;o<i.length;o++)l.push(i[o].field1.split(";",-1));var r=webix.toArray($$("importData").config.columns);for(o=0;o<l[0].length;o++)r.insertAt({id:"field"+o,header:[{content:"selectFilter",options:t}]},o);$$("importData").refreshColumns(),$$("importData").clearAll();for(o=0;o<l.length;o++){for(s={},a=0;a<l[o].length;a++)s["field"+a]=l[o][a];l[o]=s,$$("importData").parse(l[o])}},i.readAsText(e.file),!1}webix.message({type:"erro",text:"Неизвестный тип файла!"})}}}},{}]},{view:"datatable",id:"importData",select:!0,resize:!0,resizeColumn:!0,columns:[],ready:function(){this.filterByAll=function(){}}},{margin:20,cols:[{view:"label",id:"import_process"},{view:"button",value:"Отмена",width:200,click:function(){$$("importWindow").close()},hidden:!0},{view:"button",id:"importButton",type:"form",value:"Импортировать",width:200,align:"right",click:()=>{var t=getImportMap();e.sendImport(0,$$("importData").serialize(),t)}}]}]},ready:function(){webix.extend($$("importWindow"),webix.ProgressBar)}}).show()}getImportMap(){var e=$$("importData").serialize(),t=[];if(e&&e.length)for(var i in e[0])"id"!=i&&t.push($$("importData").getFilter(i).value);var o=!1;for(var s in t){if("phone"==t[s]){o=!0;break}o=!1}if(o){var a=[];for(var l in t)-1!=t[l].indexOf("phone")&&(a.phone=l),-1!=t[l].indexOf("name")&&(a.name=l),-1!=t[l].indexOf("buyer_status")&&(a.buyer_status=l),-1!=t[l].indexOf("lastbuy_date")&&(a.lastbuy_date=l),-1!=t[l].indexOf("city")&&(a.city=l),-1!=t[l].indexOf("filial")&&(a.filial=l),-1!=t[l].indexOf("channel")&&(a.channel=l),-1!=t[l].indexOf("motivational_p")&&(a.motivational_p=l);return $$("importForm").disable(),webix.extend($$("importWindow"),webix.ProgressBar),webix.extend($$("importButton"),webix.ProgressBar),$$("importWindow").showProgress({type:"bottom",hide:!1,position:.1}),$$("importButton").showProgress({type:"icon",hide:!1}),a}webix.message({type:"error",text:"Выберите телефон"})}sendImport(e,t,i){const o=this.getThis();if(webix.extend($$("importWindow"),webix.ProgressBar),$$("importWindow").showProgress({type:"bottom",hide:!1,position:e/t.length==0?.01:e/t.length}),!(e>t.length)){for(var s=[],a=e;a<e+10&&a<t.length;a++)if(t[a]){var l={phone:String(t[a]["field"+i.phone]),name:"undefined"!=String(t[a]["field"+i.name])?String(t[a]["field"+i.name]):null,buyer_status:"undefined"!=String(t[a]["field"+i.buyer_status])?String(t[a]["field"+i.buyer_status]):null,lastbuy_date:"undefined"!=String(t[a]["field"+i.lastbuy_date])?String(t[a]["field"+i.lastbuy_date]):null,city:"undefined"!=String(t[a]["field"+i.city])?String(t[a]["field"+i.city]):null,filial:"undefined"!=String(t[a]["field"+i.filial])?String(t[a]["field"+i.filial]):null,channel:"undefined"!=String(t[a]["field"+i.channel])?String(t[a]["field"+i.channel]):null,motivational_p:"undefined"!=String(t[a]["field"+i.motivational_p])?String(t[a]["field"+i.motivational_p]):null};l.phone.length&&s.push(l)}console.log(s),webix.ajax().headers({"Content-type":"application/json"}).get("legacy/nps/clients/import",{data:JSON.stringify(s)},{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка при выполнении запроса.<br/>"+e}),$$("importForm").enable(),$$("importWindow").hideProgress(),$$("importButton").hideProgress()},success:function(e,s,l){var r=s.json();if(!r||!r.result)return webix.message({type:"error",text:"Произошла ошибка при обработке данных.<br/>"+e}),$$("importForm").enable(),$$("importWindow").hideProgress(),void $$("importButton").hideProgress();$$("import_process").setHTML("Импортировано "+a+" из "+t.length),$$("import_process").show(),a<t.length-1?o.sendImport(a,t,i):($$("importButton").hideProgress(),$$("importButton").hide(),$$("importWindow").showProgress({type:"bottom",hide:!1,position:1}),webix.alert("Импорт успешно завершен",(function(e){e&&($$("importWindow").close(),$$("clients").loadNext(20,0,null,"controllers/clients.php"))})))}})}}loadGreedData(e=void 0){webix.guiutils.loadTable(this.id,"/legacy/nps/clients",e)}getToolBar(){let e=this.getThis();return{id:"clients_toolbar",hidden:!0,css:"top-menu-right-item",cols:[{view:"button",type:"icon",id:"reloadClients",width:56,icon:"wxi-sync",css:"disable_margin_btn_tbar",click:()=>{e.loadGreedData()}},{view:"button",type:"icon",icon:"wxi-file",width:260,label:translate("Import from Excel or CSV"),click:()=>{e.showModalWindow()}},{view:"button",type:"icon",icon:"wxi-trash",width:125,label:translate("Удалить"),click:()=>{e.removeClient()}}]}}showToolBar(){$$(this.toolBarId).show()}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").hide(),this.showToolBar()}loadData(){this.setToolBar(),webix.AppFilter.hide(),$$("clients")&&(this.loaded||(webix.extend($$("clients"),webix.ProgressBar),this.loadGreedData((()=>{this.loaded=1}))))}}},530:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.toolBarId="compare_calls_toolbar",this.id="compare_calls",this.filterId="compare_calls_filter",this.loaded=0,this.oneDays=1,this.twoDays=2,this.threDays=3,this.forDays=4,this.fiveDays=5,webix.Manager.setComponent("compare_calls",this)}roleAllowed(){return["phc.reports","erpico.admin"]}getThis(){return this}loadGreedData(e=void 0){let t=this.getThis();$$("compare_calls_table").enable();let i="";""!=$$("startDate_compare_calls").getValue()&&(i+="?filter[t1]="+t.getDateForCompare()),""!=$$("finishDate_compare_calls").getValue()&&(i+="&filter[t2]="+$$("finishDate_compare_calls").getValue()),""!=$$("srcFilters").getValue()&&(i+="&filter[src]="+$$("srcFilters").getValue()),""!=$$("dstFilters").getValue()&&(i+="&filter[dst]="+$$("dstFilters").getValue()),webix.extend($$("compare_calls_table"),webix.ProgressBar),$$("compare_calls_table").showProgress();var o=webix.ajax("/legacy/compare_calls"+i,(function(e){return $$("compare_calls_table").hideProgress(),e}));$$("compare_calls_table").clearAll(),$$("compare_calls_table").parse(o),$$("compare_calls_chart").clearAll(),$$("compare_calls_chart").load("/legacy/compare_calls_chart"+i,(()=>{e&&e()})),$$("compare_calls_chart").define({legend:{values:t.getLegendValues($$("finishDate_compare_calls").getValue()),align:"right",valign:"middle",layout:"y",width:100,margin:8}}),$$("compare_calls_chart").refresh()}getToolTestBar(){return{id:this.filterId,rows:[{id:"startDate_compare_calls",view:"datepicker",label:"Период от",labelPosition:"top",labelWidth:100,timepicker:!1,format:"%Y-%m-%d",value:new Date},{id:"finishDate_compare_calls",view:"richselect",label:"Диапазон",labelPosition:"top",labelWidth:100,value:1,options:[{id:this.oneDay,value:"-1 день"},{id:this.twoDays,value:"-2 дня"},{id:this.threDays,value:"-3 дня"},{id:this.forDays,value:"-4 дня"},{id:this.fiveDays,value:"-5 дней"}]}]}}resetFilters(){$$("startDate_compare_calls").setValue(new Date),$$("finishDate_compare_calls").setValue(""),webix.AppFilter.resetDefaultTraffic()}getToolBar(){let e=this.getThis();return{id:this.toolBarId,hidden:!0,css:"top-menu-right-item",cols:[{id:"search_compare_calls",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",click:function(){e.loadGreedData()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("compare_calls_table"),{filterHTML:!0,filename:"Сравнить"})}}]}}getLegendValues(e){let t=[];switch(e){case this.oneDays:t=[{text:webix.guiutils.sqlDate(this.getDateForCompare()),color:"#1293f8"}];break;case this.twoDays:t=[{text:webix.guiutils.sqlDate(this.getDateForCompare(this.twoDays)),color:"#1293f8"},{text:webix.guiutils.sqlDate(this.getDateForCompare()),color:"#66cc00"}];break;case this.threDays:t=[{text:webix.guiutils.sqlDate(this.getDateForCompare(this.threDays)),color:"#1293f8"},{text:webix.guiutils.sqlDate(this.getDateForCompare(this.twoDays)),color:"#66cc00"},{text:webix.guiutils.sqlDate(this.getDateForCompare()),color:"#FF6633"}];break;case this.forDays:t=[{text:webix.guiutils.sqlDate(this.getDateForCompare(this.forDays)),color:"#1293f8"},{text:webix.guiutils.sqlDate(this.getDateForCompare(this.threDays)),color:"#66cc00"},{text:webix.guiutils.sqlDate(this.getDateForCompare(this.twoDays)),color:"#FF6633"},{text:webix.guiutils.sqlDate(this.getDateForCompare()),color:"#CC0033"}];break;case this.fiveDays:t=[{text:webix.guiutils.sqlDate(this.getDateForCompare(this.fiveDays)),color:"#1293f8"},{text:webix.guiutils.sqlDate(this.getDateForCompare(this.forDays)),color:"#66cc00"},{text:webix.guiutils.sqlDate(this.getDateForCompare(this.threDays)),color:"#FF6633"},{text:webix.guiutils.sqlDate(this.getDateForCompare(this.twoDays)),color:"#CC0033"},{text:webix.guiutils.sqlDate(this.getDateForCompare()),color:"#009933"}]}return t}getDateForCompare(e=0){return new Date($$("startDate_compare_calls").getValue()-86400*e)}showToolBar(){$$(this.toolBarId).show()}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").hide(),this.showToolBar()}getView(){return{id:"compare_calls",hidden:!0,type:"clean",rows:[{id:"compare_calls_layout",rows:[{id:"compare_calls_table",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,height:250,footer:!0,navigation:!0,hover:"myhover",multiselect:!0,css:"my_style",columns:[{id:"0",header:[{text:"Дата",height:30}],sort:"string",width:180,footer:{text:"Всего:",height:30},format:webix.Date.dateToStr("%d.%m.%Y")},{id:"1",header:[{text:"Длительность"}],sort:"string",width:130,footer:{content:"summTimeColumn"}},{id:"2",header:[{text:"Звонки"}],sort:"string",width:155,template:"#share#",footer:{content:"summColumn"}},{id:"3",header:[{text:"ACD, мин"}],sort:"string",width:155,footer:{content:"avaregeTimeColumn"}},{id:"4",header:["ASR, %"],sort:"int",width:120,footer:{content:"avaregeColumn"}},{id:"5",header:[{text:"PDD, сек"}],sort:"int",fillspace:1,footer:{content:"avaregeColumn"}}],ready:function(){webix.extend(this,webix.ProgressBar)}},{view:"resizer"},{rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Звонков в час</center>"}],height:30},{id:"compare_calls_chart",view:"chart",type:"line",xAxis:{template:"#hour#"},yAxis:{start:0,step:10},legend:{values:[{text:webix.guiutils.sqlDate(new Date),color:"#1293f8"}],align:"right",valign:"middle",layout:"y",width:100,margin:8},series:[{value:"#sales1#",item:{borderColor:"#1293f8",color:"#ffffff"},line:{color:"#1293f8",width:3},tooltip:{template:"Звонки: #sales1# <br>Дата: #day1#"}},{value:"#sales2#",item:{borderColor:"#66cc00",color:"#ffffff"},line:{color:"#66cc00",width:3},tooltip:{template:"Звонки: #sales2# <br>Дата: #day2#"}},{value:"#sales3#",item:{borderColor:"#996600",color:"#ffffff"},line:{color:"#996600",width:3},tooltip:{template:"Звонки: #sales3# <br>Дата: #day3#"}},{value:"#sales4#",item:{borderColor:"#CC0033",color:"#ffffff"},line:{color:"#CC0033",width:3},tooltip:{template:"Звонки: #sales4# <br>Дата: #day4#"}},{value:"#sales5#",item:{borderColor:"#009933",color:"#ffffff"},line:{color:"#009933",width:3},tooltip:{template:"Звонки: #sales5# <br>Дата: #day5#"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}]}]}}loadData(){this.setToolBar(),webix.AppFilter.show(),$$("defaultsForTraffic").show(),$$("queueFilters").hide(),$$("groupByUUID").hide(),webix.AppFilter.setBody(this.id,this.getToolTestBar()),webix.AppFilter.setSubmit((()=>{this.loadGreedData()})),webix.AppFilter.setReset((()=>{this.resetFilters()})),this.loaded||(webix.extend($$("compare_calls_table"),webix.ProgressBar),webix.extend($$("compare_calls_chart"),webix.ProgressBar),webix.AppFilter.submit(),this.loaded=1)}}},4938:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(1465);class s{constructor(){this.loaded=0,this.id="contact_groups",this.toolBarId="contact_groups_toolbar",webix.Manager.setComponent(this.id,this)}roleAllowed(){return["phc.admin","erpico.admin"]}getThis(){return this}getToolBar(){let e=this.getThis();return{css:"top-menu-right-item",id:this.toolBarId,hidden:!0,cols:[{view:"button",type:"icon",icon:"wxi-plus",css:"last-button-on-left-position",width:150,label:"Добавить",click(){$$(e.id).unselectAll(),(new o.ContactsGroupsWindow).showWindow()}},{},{css:"disable_margin_btn_tbar",view:"button",type:"icon",icon:"fa fa-sync",width:56,click:function(){e.loadGreedData()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$(e.id),{filterHTML:!0,filename:"Контактные группы"})}}]}}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}loadGreedData(e=void 0){webix.guiutils.loadTable(this.id,"/contact_groups/list",e)}showToolBar(){$$(this.toolBarId).show()}getView(){let e=0,t=0,i=this.getThis();return{hidden:!0,id:i.id,view:"datatable",resizeColumn:!0,resizeRow:!0,scrollY:!0,scrollX:!0,navigation:!0,select:!0,css:"my_style",fixedRowHeight:!1,tooltip:!0,columns:[{id:"id",header:[{text:"№"},{content:"serverFilter"}],width:50},{id:"name",header:[{text:"Название"},{content:"serverFilter"}],fillspace:1},{id:"queue",header:[{text:"Входящая очередь"},{content:"serverFilter"}],fillspace:1},{id:"queues",header:[{text:"Входящие очереди"},{text:""}],fillspace:1,template:function(e){let t="";return e&&Array.isArray(e.queues)&&e.queues.forEach((function(e){t.length&&(t+=","),t+=e.fullname})),t}},{id:"items",header:[{text:"Члены группы"},{text:""}],fillspace:3,template:function(e){let t="";return e&&"object"==typeof e.items&&(Array.isArray(e.items.queues)&&e.items.queues.forEach((function(e){t.length&&(t+=","),t+=e.fullname})),Array.isArray(e.items.users)&&e.items.users.forEach((function(e){t.length&&(t+=","),t+=e.fullname}))),t}}],on:{onAfterSelect:function(){e=this.getSelectedId()},onItemDblClick:function(){$$(i.id).getSelectedItem().id?t=$$(i.id).getSelectedItem().id:$$(i.id).getSelectedItem().id=t,(new o.ContactsGroupsWindow).showWindow()},onAfterLoad:function(){e&&this.getItem(e)&&this.select(e)},onAfterContextMenu:function(e){e.row&&$$(i.id).select(e.row)}},ready:function(){webix.extend(this,webix.ProgressBar);let e="cmenucontactgroups";webix.ui({view:"contextmenu",width:180,id:e,data:[{id:"edit",value:"Изменить",icon:"wxi-pencil"},{id:"copy",value:"Копировать",icon:"fa fa-copy"},{id:"delete",value:"Удалить",icon:"wxi-trash"}],on:{onMenuItemClick:function(e){$$(i.id).getSelectedItem().id;switch(e){case"edit":$$(i.id).getSelectedItem().id?t=$$(i.id).getSelectedItem().id:$$(i.id).getSelectedItem().id=t,(new o.ContactsGroupsWindow).showWindow();break;case"copy":t=$$(i.id).getSelectedItem().id,$$(i.id).getSelectedItem().id=0,(new o.ContactsGroupsWindow).showWindow();break;case"delete":if($$(i.id).getSelectedId()){let e="/contact_groups/"+parseInt($$(i.id).getSelectedId())+"/remove";webix.guiutils.removeFromTable(parseInt($$(i.id).getSelectedId()),e,i.id,"removeContactGroup")}else webix.message({type:"error",text:"Выберите группу для удаления"})}}}}),$$(e).attachTo(this)}}}loadData(){this.setToolBar(),webix.AppFilter.hide(),$$(this.id)&&(this.loaded||(webix.extend($$(this.id),webix.ProgressBar),this.loadGreedData((()=>{this.loaded=1}))))}}},5021:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){webix.Manager.setComponent("cti",this)}roleAllowed(){return null}getView(){return webix.AppFilter.hide(),{id:"cti",view:"htmlform",scroll:"y",template:'<div style="padding: 0px 20px 20px 20px"><h1>Памятка по использованию IP-АТС ErpicoPBX</h1><p>Для совершения исходящих вызовов наберите номер телефона и нажмите клавишу «#» или «Набор». При звонке на городские номера нет необходимости набирать префикс, на сотовые и междугородние номера вызов осуществляется через «8» без дополнительных префиксов.</p><h2>Переадресация</h2><p>Для переадресации звонка нажмите два раза клавишу «#» во время разговора, система Вам сообщит об инициализации перевода, наберите внутренний номер сотрудника и нажмите еще раз «#». После ответа сотрудника или когда услышите сигнал вызова положите трубку – вызов уйдет сотруднику. Для возвращения к звонку до завершения переадресации нажмите клавишу «*».<br/>Краткая формула: ## номер #<br/>Возврат: *</p><h2>Перехват</h2><p>Для перехвата звонка наберите «**» и вызов.</p><h2>Телефонный клиент</h2><p>Телефонный клиент предоставляет расширенные функции телефонии и доступ к онлайн-контролю, статистики и записи разговоров.<br/><br/>Для установки скачайте телефонный клиент по ссылке <a href="https://dl.erpico.ru/ErpicoPBX.msi">ErpicoPBX.msi</a></p><p>Для запуска телефонного клиента щелкните по иконке на рабочем столе. Если программа запускается первый раз нужно верно указать имя сервера, логин и пароль. Уточните эти реквизиты у Вашего системного администратора. Адрес совпадает с адресом АТС, логин, как правило, совпадает с номером телефона.</p><p>Если программа запущена щелкните по иконке на панели задач.</p><p>Когда телефонный клиент запущен Вы можете набирать номера используя функцию Copy2Call. Для осуществления звонка Вам достаточно выделить на любом сайте или в любой программе номер телефона, по которому Вы хотите позвонить и два раза скопировать его в буфер обмена при помощи клавиатуры: Ctrl+C</p><p>На Ваш телефон придет служебный вызов, ответьте на него и система начнет автоматически набор номера.</p><p>Так же в телефонном клиенте Вам доступен справочник сотрудников и история Ваших звонков.</p><h2>Техподдержка</h2><p>По всем вопросам использования АТС и телефонного клиента обращайтесь в нашу службу техподдержки: 8 (4852) 593-100, добавочный код: 2</p></div>'}}loadData(){webix.AppFilter.hide()}}},8948:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.toolBarId="daily_report_toolbar",this.id="daily_report",this.filterId="daily_report_filter",this.additionOptionsWindowId="win_option_daily_report",webix.Manager.setComponent("daily_report",this)}roleAllowed(){return["phc.reports","erpico.admin"]}getThis(){return this}getToolBar(){let e=this.getThis();return{id:e.toolBarId,css:"top-menu-right-item",hidden:!0,cols:[{id:"search_daily_report",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",click:function(){e.loadGreedData()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("daily_report_table"),{filterHTML:!0,filename:"По дням"})}}]}}loadGreedData(e=void 0){$$("daily_report_table").enable();var t=webix.guiutils.getDateRange("reportDateRange"),i="/legacy/daily_report?filter[t1]="+t.start+"&filter[t2]="+t.end;""!=$$("srcFilters").getValue()&&(i+="&filter[src]="+$$("srcFilters").getValue()),""!=$$("dstFilters").getValue()&&(i+="&filter[dst]="+$$("srcFilters").getValue()),""!=$$("queueFilters").getValue()&&(i+="&filter[queue]="+$$("queueFilters").getValue()),$$("daily_report_table").clearAll(),$$("daily_report_table").showProgress({type:"icon",hide:!0}),$$("daily_report_table").load(i,(()=>{e&&e()}))}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}showToolBar(){$$(this.toolBarId).show()}getView(){return{id:"daily_report",hidden:!0,type:"clean",rows:[{id:"daily_report_table",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,footer:!0,hover:"myhover",navigation:!0,multiselect:!0,tooltip:!0,css:"my_style",columns:[{id:"0",header:[{text:"Дата",height:25},{content:"textFilter"}],sort:"string",width:180,template:"#calldate2#",footer:{text:"Всего:",height:30}},{id:"1",header:["Длительность",{content:"textFilter"}],sort:"string",width:130,footer:{content:"summTimeColumn"}},{id:"2",header:["Звонки",{content:"textFilter"}],sort:"int",width:155,template:"#share#",footer:{content:"summColumn"}},{id:"3",header:["ACD, мин",{content:"textFilter"}],sort:"string",width:155,footer:{content:"avaregeTimeColumn"}},{id:"4",header:["ASR, %",{content:"textFilter"}],sort:"string",width:120,footer:{content:"avaregeColumn"}},{id:"5",header:["PDD, сек",{content:"textFilter"}],sort:"string",width:140,footer:{content:"avaregeColumn"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}}loadData(){this.setToolBar(),webix.AppFilter.show(),$$("defaultsForTraffic").show(),$$("dstFilters").show(),$$("queueFilters").hide(),$$("groupByUUID").hide(),webix.AppFilter.setBody(this.id,{id:this.filterId}),webix.AppFilter.setSubmit((()=>{this.loadGreedData()})),webix.AppFilter.setReset((()=>{this.resetFilters()})),$$("daily_report_table")&&(webix.extend($$("daily_report_table"),webix.ProgressBar),this.loaded||this.loadGreedData((()=>{this.loaded=1})))}}},7719:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,webix.Manager.setComponent("dashboard",this),this.npsTooltip="<strong>#name#:</strong><table><tr><td>Промоутеры: &nbsp;</td><td>#promouters#%</td></tr><tr><td>Нейтралы:</td><td>#neutrals#%</td></tr><tr><td>Детракторы:</td><td>#detractors#%</td></tr><tr><td>NPS:</td><td>#nps#%</td></tr><tr><td>Клиентов:</td><td>#allClients#</td></tr></table>",this.toolBarId="dashboard_toolbar",this.filterId="dashboard_filter",this.id="dashboard"}roleAllowed(){return["phc.nps","erpico.admin"]}getByCity(){return{id:"nps/dashboard",view:"panel",x:0,y:0,dx:1,dy:1,header:"NPS по городам",body:{view:"chart",id:"countListByCities",minWidth:500,minHeight:500,type:"stackedBar",barWidth:30,radius:2,padding:{bottom:110},css:"nps_chart nps_chart_cities",legend:{values:[{text:"Детракторы",color:"#d81b1b"},{text:"Нейтралы",color:"#d4dbd3"},{text:"Промоутеры",color:"#27ae60"},{text:"NPS",color:"#ff9900"}],valign:"middle",align:"center",width:400,height:30,layout:"x"},xAxis:{template:"#name#",width:100},yAxis:{start:0,step:25,end:100,lines:!0},series:[{value:"#detractors#",color:"#d81b1b",tooltip:{template:this.npsTooltip}},{value:"#neutrals#",color:"#d4dbd3",tooltip:{template:this.npsTooltip}},{value:"#promouters#",color:"#27ae60",tooltip:{template:this.npsTooltip}},{type:"line",value:"#nps#",color:"#ff9900",label:"#nps#%(#numberNps#)",item:{borderColor:"#ff9900",color:"#ff9900",type:"s",radius:6,borderWidth:1,shadow:!0},line:{color:"#ff9900",width:3},tooltip:{template:this.npsTooltip}}],ready:function(){webix.extend(this,webix.ProgressBar),webix.guiutils.getNpsFilter()}}}}getByFilials(){return{id:"dashboardNps",view:"panel",x:0,y:0,dx:1,dy:1,header:"NPS по филиалам",body:{view:"chart",id:"countList",minWidth:500,minHeight:500,type:"stackedBar",barWidth:30,radius:2,padding:{bottom:110},css:"nps_chart nps_chart_filials",legend:{values:[{text:"Детракторы",color:"#d81b1b"},{text:"Нейтралы",color:"#d4dbd3"},{text:"Промоутеры",color:"#27ae60"},{text:"NPS",color:"orange"}],valign:"middle",align:"center",width:400,height:30,layout:"x"},xAxis:{template:function(e){if(!e)return"";if(!e.name)return"";if(e.name.toString().length>10){var t=e.name.substring(0,7);return t+="..",t+=e.name.substring(e.name.length-2)}return e.name},width:200},yAxis:{start:0,step:25,end:100,lines:!0},series:[{value:"#detractors#",color:"#d81b1b",tooltip:{template:this.npsTooltip}},{value:"#neutrals#",color:"#d4dbd3",tooltip:{template:this.npsTooltip}},{value:"#promouters#",color:"#27ae60",tooltip:{template:this.npsTooltip}},{type:"line",value:"#nps#",color:"#ff9900",label:"#nps#%(#numberNps#)",item:{borderColor:"#ff9900",color:"#ff9900",type:"s",radius:6,borderWidth:1,shadow:!0},line:{color:"#ff9900",width:3},tooltip:{template:this.npsTooltip}}]}}}getDetractors(){return{view:"chart",id:"detractorsList",type:"barH",height:450,css:"flip-horizontal-chart chart-detractor",value:"#sales#",tooltip:{template:"#comments#"},label:"<strong>#label#</strong> <span class='chart-number'>#sales#%</span>",barWidth:35,padding:{top:30,left:0,right:10,bottom:20},color:"#d81b1b",legend:{values:[{text:"Детракторы",color:"#d81b1b"}],valign:"middle",align:"center",height:22,layout:"x"},xAxis:{start:0,step:25,end:100,lines:!1}}}getPromoters(){return{view:"chart",id:"promotersList",type:"barH",css:"no-flip-horizontal-chart chart-promouter",value:"#sales#",tooltip:{template:"#comments#"},InnerText:"#sales#",label:" <span class='chart-number'>#sales#%</span> <strong>#label#</strong>",barWidth:35,padding:{top:30,left:0,right:10,bottom:20},color:"#27ae60",legend:{values:[{text:"Промоутеры",color:"#27ae60"}],valign:"middle",align:"center",height:22,layout:"x"},xAxis:{start:0,step:25,end:100,lines:!1}}}getDash(){return{rows:[this.getByCity(),this.getByFilials()]}}getDetractorsAndPromotersData(){return{cols:[this.getDetractors(),this.getPromoters()]}}getView(){return{view:"scrollview",id:"dashboard",hidden:!0,body:{rows:[this.getDash(),this.getDetractorsAndPromotersData()]}}}resetFilters(){$$("cityFilter").setValue(""),$$("filialFilter").setValue(""),$$("channel").setValue("")}getToolTestBar(){return{id:this.filterId,rows:[{view:"multiselect",label:"Город",id:"cityFilter",labelWidth:100,on:{onChange:()=>{webix.guiutils.getNpsFilter()}},options:"/legacy/nps/options/city"},{view:"multiselect",label:"Филиал",id:"filialFilter",labelWidth:100,on:{onChange:()=>{webix.guiutils.getNpsFilter()},onAfterRender:()=>{webix.guiutils.getNpsFilter()}},options:"/legacy/nps/options/filial"},{labelWidth:100,view:"multiselect",label:"Канал",id:"channel",on:{onChange:()=>{webix.guiutils.getNpsFilter()}},options:"/legacy/nps/options/channel"}]}}getToolBar(){return{id:this.toolBarId,css:"top-menu-right-item",hidden:!0,cols:[{css:"disable_margin_btn_tbar",width:56,view:"button",type:"icon",icon:"wxi-sync",click:()=>{webix.guiutils.getNpsFilter()}},{view:"button",type:"icon",icon:"fa fa-file-excel",label:"Export to PDF",width:200,click:function(){webix.guiutils.getPdfChart("charts")}}]}}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}showToolBar(){$$(this.toolBarId).show()}loadData(){this.setToolBar(),$$("reportDateRange").show(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,this.getToolTestBar()),webix.AppFilter.setSubmit((()=>{webix.guiutils.getNpsFilter()})),webix.AppFilter.setReset((()=>{this.resetFilters()})),this.loaded||(webix.guiutils.getNpsFilter(),this.loaded=1)}}},7824:(e,t,i)=>{"use strict";function o(e,t){for(var i,s=[],a=0;a<e.length;a++){var l=e[a],r=t+"."+a,n={id:r,open:!1,checked:!0};void 0!==l.value&&(n.value=l.value),void 0!==l.elem&&(n.elem=l.elem),void 0!==l.col&&(n.col=l.col),void 0!==l.data&&(i=o(l.data,r),n.data=i),console.log(n),s.push(n)}return s}function s(){return window.response=o([{elem:"gages_row",value:"Показатели",data:[{elem:"gage_sl",value:"SL"},{elem:"gage_lcr",value:"LCR"},{elem:"gage_ans",value:"Ср. ответа"},{elem:"gage_avg",value:"Ср. разговора"},{elem:"gage_fcr",value:"FCR"},{elem:"box3",value:"Стоимость звонка"}]},{elem:"ext_dashboard_managers",value:"Менеджеры",data:[{elem:"ext_dashboard_managers",col:"agent_name",value:"Менеджер"},{elem:"ext_dashboard_managers",col:"total",value:"Звонков"},{elem:"ext_dashboard_managers",col:"served",value:"Принятых"},{elem:"ext_dashboard_managers",col:"served_more20s",value:"После SL"},{elem:"ext_dashboard_managers",col:"unserved",value:"Не принятых"},{elem:"ext_dashboard_managers",col:"served_call_per",value:"Отвеченные(%)"},{elem:"ext_dashboard_managers",col:"sl",value:"SL"},{elem:"ext_dashboard_managers",col:"lcr",value:"LCR"},{elem:"ext_dashboard_managers",col:"avg_answer",value:"Ср. ответа"},{elem:"ext_dashboard_managers",col:"avg_duration",value:"Ср. разговора ВХ"},{elem:"ext_dashboard_managers",col:"out_count",value:"Исходящих"},{elem:"ext_dashboard_managers",col:"out_avg",value:"Ср. разговора ИСХ"},{elem:"ext_dashboard_managers",col:"int_count",value:"Внутренних"},{elem:"ext_dashboard_managers",col:"int_avg",value:"Ср. разговора ВН"}]},{elem:"ext_dashboard_charts",value:"Графики по звонкам",data:[{elem:"callschart",value:"По дням"},{elem:"hourschart",value:"По часам"}]},{elem:"ext_dashboard_charts2",value:"Графики по операторам",data:[{elem:"operatorsworktime",value:"Рабочее время"},{elem:"operatorschart",value:"Среднее время разговоров"}]},{elem:"dashboard_tree",value:"Данные по периодам",data:[{elem:"dashboard_tree",col:"period",value:"Период"},{elem:"dashboard_tree",col:"total",value:"Всего"},{elem:"dashboard_tree",col:"served",value:"Принято"},{elem:"dashboard_tree",col:"served20",value:"Принято > SL"},{elem:"dashboard_tree",col:"unserved",value:"Потеряно"},{elem:"dashboard_tree",col:"lost20",value:"Потеряно > SL"},{elem:"dashboard_tree",col:"served_call_per",value:"Отв (%)"},{elem:"dashboard_tree",col:"sl",value:"SL(%)"},{elem:"dashboard_tree",col:"agents",value:"Операторов"},{elem:"dashboard_tree",col:"avg_lost",value:"ВХ Ср. пот."},{elem:"dashboard_tree",col:"avg_ans",value:"ВХ Ср. отв."},{elem:"dashboard_tree",col:"avg_talk",value:"ВХ Ср. разг."},{elem:"dashboard_tree",col:"max_wait",value:"ВХ Макс. отв."},{elem:"dashboard_tree",col:"max_talk",value:"ВХ Макс. разг."},{elem:"dashboard_tree",col:"out_count",value:"Исходящих"},{elem:"dashboard_tree",col:"out_avg",value:"Ср. разговора ИСХ"},{elem:"dashboard_tree",col:"int_count",value:"Внутренних"},{elem:"dashboard_tree",col:"int_avg",value:"Ср. разговора ВН"}]}],"ft"),console.log(response),response}i.r(t),i.d(t,{default:()=>r});for(var a=[],l=0;l<24;l++)a.push({id:l,value:l+":00-"+l+"-59"});class r{constructor(){this.loaded=0,this.dashboard_req_pars="",this.toolBarId="ext_dashboard_toolbar",this.filterId="ext_dashboard_filter",this.id="ext_dashboard",webix.Manager.setComponent("ext_dashboard",this),this.ext_dashboard_charts2_tooltip="<table border=0><tr><td colspan=2><b>#agent_name#</td></tr><tr><td>Готов:</td><td>#ready# ч.</td></tr><tr><td>Не готов:</td><td>#notready# ч.</td></tr><tr><td>Обед:</td><td>#lunch# ч.</td></tr><tr><td>Отдых:</td><td>#rest# ч.</td></tr><tr><td>Постобработка:</td><td>#afterwork# ч.</td></tr><tr><td>Собрание:</td><td>#meeting# ч.</td></tr><tr><td>Доп. задачи:</td><td>#tasks# ч.</td></tr><tr><td>Разговоров:</td><td>#talktime# ч.</td></tr><tr><td>Утилизация:</td><td>#utilization# %</td></tr></table>",this.ext_dashboard_charts3_tooltip="<table border=0><tr><td colspan=2><b>#agent_name#</td></tr><tr><td>Ср. разговора:</td><td>#avg_duration#</td></tr><tr><td>Ср. исходящие:</td><td>#out_avg#</td></tr><tr><td>Ср. внутренние:</td><td>#int_avg#</td></tr></table>"}roleAllowed(){return["phc.reports","erpico.admin"]}getThis(){return this}loadDashboard(){return()=>{var e=webix.guiutils.getExtDashboardFilterData();$$("ext_dashboard_managers").clearAll(),$$("dashboard_tree").clearAll(),$$("callschart").clearAll(),$$("hourschart").clearAll(),$$("operatorsworktime").clearAll(),$$("operatorschart").clearAll(),this.dashboard_req_pars=e,$$("search_ext_dashboard")&&webix.extend($$("search_ext_dashboard"),webix.ProgressBar),webix.ajax("/legacy/ext_dashboard_getgages",e,(function(t,i,o){i=i.json(),$$("gage_sl").setValue(i.sl),$$("gage_lcr").setValue(i.lcr),$$("gage_fcr").setValue(i.fcr);var s=$$("box3").getValues();s.items[0].value=i.cost+" р.",$$("box3").setValues(s),$$("gage_ans").setValue(parseFloat(i.aat.replace(/,/,"."))),$$("gage_avg").setValue(i.att),webix.extend($$("ext_dashboard_managers"),webix.ProgressBar),webix.extend($$("operatorschart"),webix.ProgressBar),webix.extend($$("callschart"),webix.ProgressBar),webix.extend($$("hourschart"),webix.ProgressBar),webix.extend($$("dashboard_tree"),webix.ProgressBar),webix.extend($$("operatorsworktime"),webix.ProgressBar),$$("operatorschart").showProgress(),$$("callschart").showProgress(),$$("hourschart").showProgress(),$$("dashboard_tree").showProgress(),$$("operatorsworktime").showProgress(),webix.ajax("/legacy/ext_dashboard_agents_stat",e,(function(t,i,o){let s=i.json();$$("ext_dashboard_managers").clearAll(),$$("ext_dashboard_managers").parse(s.data),$$("operatorschart").clearAll(),$$("operatorschart").parse(s.data),$$("ext_dashboard_managers").hideProgress(),$$("operatorschart").hideProgress(),webix.ajax("/legacy/ext_dashboard_callschart",e,(function(t,i,o){$$("callschart").clearAll(),$$("callschart").parse(t),$$("callschart").hideProgress(),webix.ajax("/legacy/ext_dashboard_hourschart",e,(function(t,i,o){$$("hourschart").clearAll(),$$("hourschart").parse(t),$$("hourschart").hideProgress(),webix.ajax("/legacy/ext_dashboard_treetable",e,(function(e,t,i){$$("dashboard_tree").clearAll(),$$("dashboard_tree").parse(e),$$("dashboard_tree").hideProgress()}))}))}))}))})),webix.ajax("/legacy/ext_dashboard_worktimechart",e,(function(e,t,i){$$("operatorsworktime").clearAll(),$$("operatorsworktime").parse(e),$$("operatorsworktime").hideProgress()}))}}getColor(e){return e<20?"green":e<50?"orange":"red"}getColorFcr(e){return e<50?"red":e<80?"orange":"greed"}getToolBar(){return{id:this.toolBarId,hidden:!0,css:"top-menu-right-item",cols:[{css:"disable_margin_btn_tbar",id:"search_ext_dashboard",view:"button",type:"icon",icon:"wxi-sync",width:56,on:{onItemClick:()=>{webix.AppFilter.submit()},onAfterRender:function(){webix.extend(this,webix.ProgressBar)}}}]}}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}showToolBar(){$$(this.toolBarId).show()}getToolTestBar(){return{type:"space",id:this.filterId,name:this.filterId,margin:0,padding:0,rows:[{view:"multiselect",id:"hours",name:"hours",label:"Часы",labelWidth:100,labelPosition:"top",options:a},{view:"multiselect",id:"queues-select",name:"queues-select",label:"Очереди",labelWidth:100,labelPosition:"top",options:"/legacy/grouped_queues_name/short"},{view:"multiselect",id:"agents",name:"agents",label:"Операторы",labelWidth:100,labelPosition:"top",options:"/legacy/ext_dashboard_agentslist/0/short"},{view:"label",template:'<hr style="background-color: transparent">',height:20},{cols:[{id:"ext_dashboard_fields",view:"button",type:"icon",icon:"fa fa-list",width:155,label:"Поля",click:function(){$$("fields_setup_win")?$$("fields_setup_win").show():webix.ui({id:"fields_setup_win",view:"window",title:"",head:{view:"toolbar",margin:-4,cols:[{view:"label",label:"Настройка полей"},{view:"icon",icon:"wxi-close",click:"$$('fields_setup_win').close();"}]},resize:!0,width:600,height:500,center:!0,position:"center",modal:!1,move:!0,body:{rows:[{id:"fields_tree",view:"tree",template:"{common.icon()} {common.checkbox()} {common.folder()} <span>#value#</span>",select:!0,data:s(),on:{onItemCheck:function(e){let t=$$("fields_tree").getItem(e);t.checked?void 0!==t.col?$$(t.elem).showColumn(t.col):$$(t.elem).show():void 0!==t.col?$$(t.elem).hideColumn(t.col):$$(t.elem).hide()}}}]}}).show()}},{},{id:"ext_dashboard_salary",view:"button",type:"icon",icon:"fa fa-dollar-sign",width:155,label:"Оклады",click:function(){webix.ui({id:"salary_setup_win",view:"window",title:"",head:{view:"toolbar",margin:-4,cols:[{view:"label",label:"Настройка окладов"},{view:"icon",icon:"wxi-close",click:"$$('salary_setup_win').close();"}]},resize:!0,width:600,height:500,center:!0,position:"center",modal:!0,move:!0,body:{rows:[{view:"datatable",id:"salary_agents",autowidth:!0,editable:!0,columns:[{id:"value",header:"Сотрудник",width:400},{id:"salary",header:"Оклад",width:100,editor:"text"}],url:"/legacy/ext_dashboard_agentslist/",on:{onItemClick:function(e){this.editColumn(e),this.focusEditor(e)}}},{cols:[{view:"button",label:"Сохранить",click:function(){}}]}]}}).show()}}]}]}}resetFilters(){$$("hours").setValue(""),$$("agents").setValue(""),$$("queues-select").setValue("")}getGages(){return{type:"clean",rows:[{id:"gages_row",rows:[{id:"gages",cols:[{id:"gage_sl",view:"gage",minRange:0,maxRange:100,color:this.getColorFcr(),value:0,label:"SL",placeholder:"%"},{id:"gage_lcr",view:"gage",minRange:0,maxRange:100,color:this.getColor(),value:0,label:"LCR",placeholder:"%"},{id:"gage_ans",view:"gage",minRange:0,maxRange:20,color:this.getColor(),value:0,label:"Ср.ответа",placeholder:"сек"},{id:"gage_avg",view:"gage",minRange:0,maxRange:120,color:this.getColor(),value:0,label:"Ср.разговора",placeholder:"сек"},{id:"gage_fcr",view:"gage",minRange:0,maxRange:100,color:this.getColorFcr(),value:0,label:"FCR",placeholder:"%"},{id:"box3",view:"template",height:136,css:"tiles",width:250,template:function(e){for(var t=null,i=e.items,o="<div class='flex_tmp'>",s=0;s<i.length;s++)o+="<div class='item "+(t=i[s]).css+"'>",o+="<div class='webix_icon icon fa-"+t.icon+"'></div>",o+="<div class='details'><div class='text'>"+t.text+"</div><div class='value'>"+t.value+"</div></div>",o+="</div>";return o+="</div>"},data:{items:[{id:"evidences",text:"Стоимость звонка",icon:"wxi-usd",css:"feedbacks",value:""}]}}]}]}]}}getManagers(){return{type:"clean",rows:[{id:"ext_dashboard_managers",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,height:300,columns:[{id:"agent_name",header:[{text:"Менеджеров"}],sort:"string",width:160},{id:"total",header:[{text:"Звонков"}],width:160},{id:"served",header:[{text:"Принятых"}],width:160},{id:"served_more20s",header:[{text:"После SL"}],width:160},{id:"unserved",header:[{text:"Не принятых"}],width:160},{id:"served_call_per",header:[{text:"Отвеченные(%)"}],width:160},{id:"sl",header:[{text:"SL"}],width:160},{id:"lcr",header:[{text:"LCR"}],width:160},{id:"avg_answer",header:[{text:"Ср. ответа"}],width:160},{id:"avg_duration",header:[{text:"Ср. разговора ВХ"}],width:160},{id:"out_count",header:[{text:"Исходящих"}],width:160},{id:"out_avg",header:[{text:"Ср. разговора ИСХ"}],width:160},{id:"int_count",header:[{text:"Внутренних"}],width:160},{id:"int_avg",header:[{text:"Ср. разговора ВН"}],width:160}],onBeforeLoad:function(){this.showProgress()},onAfterLoad:function(){this.hideProgress()},ready:function(){webix.extend(this,webix.ProgressBar)}}]}}getCharts(){return{type:"clean",rows:[{id:"ext_dashboard_charts",rows:[{height:300,cols:[{id:"callschart",view:"chart",type:"bar",barWidth:20,radius:2,alpha:.7,gradient:"rising",xAxis:{template:"'#period#"},yAxis:{property:"value"},legend:{values:[{text:"Звонки",color:"#4aa397"},{text:"SL",color:"#de619c",markerType:"item"}],valign:"middle",align:"right",width:90,layout:"y"},series:[{value:"#calls#",color:"#4aa397",tooltip:{template:"Звонков: #calls#, SL: #sl#%"}},{type:"line",value:"#slg#",color:"#36abee",item:{borderColor:"#b7286c",color:"#de619c",type:"s"},line:{color:"#de619c",width:2},tooltip:{template:"Звонков: #calls#, SL: #sl#%"}}]},{id:"hourschart",view:"chart",type:"stackedBar",barWidth:60,gradient:"falling",xAxis:{template:"#time#"},yAxis:{},legend:{values:[{text:"Принятые > SL",color:"#36abee"},{text:"Принято < SL",color:"#f7ae70"},{text:"Потеряно > SL",color:"#a7ee70"},{text:"Потеряно < SL",color:"#07eef0"}],valign:"middle",align:"right",width:160,layout:"y"},series:[{value:"#unserved20#",color:"#07eef0",label:"#unserved20#",tooltip:{template:"<table border=0><tr><td>Принятые > SL:</td><td>#served#</td></tr><tr><td>Принятые <= SL:</td><td>#served20#</td></tr><tr><td>Потеряно > SL:</td><td>#unserved#</td></tr><tr><td>Потеряно <= SL:</td><td>#unserved20#</td></tr>"}},{value:"#unserved#",color:"#a7ee70",label:"#unserved#",tooltip:{template:"<table border=0><tr><td>Принятые > SL:</td><td>#served#</td></tr><tr><td>Принятые <= SL:</td><td>#served20#</td></tr><tr><td>Потеряно > SL:</td><td>#unserved#</td></tr><tr><td>Потеряно <= SL:</td><td>#unserved20#</td></tr>"}},{value:"#served20#",color:"#f7ae70",label:"#served20#",tooltip:{template:"<table border=0><tr><td>Принятые > SL:</td><td>#served#</td></tr><tr><td>Принятые <= SL:</td><td>#served20#</td></tr><tr><td>Потеряно > SL:</td><td>#unserved#</td></tr><tr><td>Потеряно <= SL:</td><td>#unserved20#</td></tr>"}},{value:"#served#",label:"#served#",color:"#36abee",tooltip:{template:"<table border=0><tr><td>Принятые > SL:</td><td>#served#</td></tr><tr><td>Принятые <= SL:</td><td>#served20#</td></tr><tr><td>Потеряно > SL:</td><td>#unserved#</td></tr><tr><td>Потеряно <= SL:</td><td>#unserved20#</td></tr>"}}]}]},{id:"ext_dashboard_charts2",rows:[{height:300,id:"operatorsworktime",view:"chart",type:"stackedBar",barWidth:60,gradient:"falling",xAxis:{template:"#agent_name_short#"},yAxis:{},legend:{values:[{text:"Готов",color:"#36abee"},{text:"Не готов",color:"#f7ae70"},{text:"Обед",color:"#a7fe70"},{text:"Отдых",color:"#f7aeff"},{text:"Постобработка",color:"#a7ae70"},{text:"Собрание",color:"#36cbfe"},{text:"Доп.задачи",color:"#36fffe"}],valign:"middle",align:"right",width:160,layout:"y"},series:[{value:"#notready#",color:"#f7ae70",label:"#notready# ч.",tooltip:{template:this.ext_dashboard_charts2_tooltip}},{value:"#lunch#",color:"#a7fe70",label:"#lunch# ч.",tooltip:{template:this.ext_dashboard_charts2_tooltip}},{value:"#rest#",color:"#f7aeff",label:"#rest# ч.",tooltip:{template:this.ext_dashboard_charts2_tooltip}},{value:"#afterwork#",color:"#a7ae70",label:"#afterwork# ч.",tooltip:{template:this.ext_dashboard_charts2_tooltip}},{value:"#meeting#",color:"#36cbfe",label:"#meeting# ч.",tooltip:{template:this.ext_dashboard_charts2_tooltip}},{value:"#tasks#",color:"#36fffe",label:"#tasks# ч.",tooltip:{template:this.ext_dashboard_charts2_tooltip}},{value:"#ready#",color:"#36abee",label:"#ready# ч.",tooltip:{template:this.ext_dashboard_charts2_tooltip}},{type:"line",value:"#utg#",color:"#36abee",label:"#utilization#%",item:{borderColor:"#b7286c",color:"#de619c",type:"s"},line:{color:"#de619c",width:2},tooltip:{template:this.ext_dashboard_charts2_tooltip}}]},{height:300,id:"operatorschart",view:"chart",type:"stackedBar",barWidth:60,gradient:"falling",xAxis:{template:"#agent_name_short#"},yAxis:{},legend:{values:[{text:"Ср. разговора",color:"#36abee"},{text:"Ср. исходящие",color:"#f6abee"},{text:"Ср. внутренние",color:"#36fbee"}],valign:"middle",align:"right",width:160,layout:"y"},series:[{value:"#avg_duration_sec#",color:"#36abee",label:"#avg_duration#",tooltip:{template:this.ext_dashboard_charts3_tooltip}},{value:"#out_avg_sec#",color:"#f6abee",label:"#out_avg#",tooltip:{template:this.ext_dashboard_charts3_tooltip}},{value:"#int_avg_sec#",color:"#36fbee",label:"#int_avg#",tooltip:{template:this.ext_dashboard_charts3_tooltip}}]}]}]}]}}getCalls(){return{id:"dashboard_tree",type:{folder:""},view:"treetable",columns:[{id:"period",header:[{text:"Период"}],width:250,template:"{common.treetable()} #period#"},{id:"total",header:[{text:"Всего"}]},{id:"served",header:[{text:"Принято"}]},{id:"served20",header:[{text:"Принято > SL"}],width:150},{id:"unserved",header:[{text:"Потеряно"}]},{id:"lost20",header:[{text:"Потеряно > SL"}],width:150},{id:"served_call_per",header:[{text:"Отв (%)"}]},{id:"sl",header:[{text:"SL(%)"}]},{id:"agents",header:[{text:"Операторов"}]},{id:"avg_lost",header:[{text:"ВХ Ср. потер."}],width:130},{id:"avg_ans",header:[{text:"ВХ Ср. отв."}]},{id:"avg_talk",header:[{text:"ВХ Ср. разг."}]},{id:"max_wait",header:[{text:"ВХ Макс. отв."}],width:130},{id:"max_talk",header:[{text:"ВХ Макс. разг."}],width:130},{id:"out_count",header:[{text:translate("Исходящих")}],width:160},{id:"out_avg",header:[{text:translate("Ср. разговора ИСХ")}],width:160},{id:"int_count",header:[{text:translate("Внутренних")}],width:160},{id:"int_avg",header:[{text:translate("Ср. разговора ВН")}],width:160}],resizeColumn:!0,height:500,select:!0,on:{onAfterRender:function(){webix.extend(this,webix.ProgressBar)},onDataRequest:function(e){let t=webix.guiutils.getExtDashboardFilterData(1);return this.load("/legacy/ext_dashboard_treetable?filter[parent]="+e+"&"+t),!1}}}}getView(){return{id:"ext_dashboard",hidden:!0,rows:[{view:"scrollview",id:"verses",scroll:"y",body:{rows:[this.getGages(),this.getManagers(),this.getCharts(),this.getCalls()]}}]}}loadData(){this.setToolBar(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,this.getToolTestBar()),webix.AppFilter.setSubmit(this.loadDashboard()),webix.AppFilter.setReset((()=>{this.resetFilters()})),this.loaded||(webix.AppFilter.submit(),this.loaded=1)}}},7798:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,webix.Manager.setComponent("ext_incoming_external",this),this.toolBarId="ext_incoming_external_toolbar",this.filterId="ext_incoming_external_filter",this.id="ext_incoming_external"}getThis(){return this}roleAllowed(){return["phc.reports","erpico.admin"]}loadReport(){var e=webix.guiutils.getDateRange("reportDateRange"),t="legacy/ext_incoming_external_total?filter[t1]="+e.start+"&filter[t2]="+e.end;$$("ext_incoming_external_table").clearAll(),$$("ext_incoming_external_table").load(t)}getToolBar(){return{id:this.toolBarId,hidden:!0,css:"top-menu-right-item",cols:[{id:"search_ext_incoming_external",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",click:()=>{this.loadReport()}}]}}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}showToolBar(){$$(this.toolBarId).show()}getGrid(){return{id:"ext_incoming_external",hidden:!0,type:"clean",rows:[{rows:[{id:"ext_incoming_external_table",view:"datatable",subview:{view:"datatable",columns:[{id:"agent_name",header:[{text:"Оператор"}],sort:"string",width:309},{id:"total",header:[{text:"Всего"}],width:160},{id:"served",header:[{text:"Принятых"}],width:160},{id:"unserved",header:[{text:"Не принятых"}],width:160},{id:"avg_answer",header:[{text:"Ср. ответа"}],width:160},{id:"avg_duration",header:[{text:"Ср. обращения"}],width:160},{id:"avg_wait",header:[{text:"Ср. ожидания"}],width:160},{id:"max_wait",header:[{text:"Макс. ожидания"}],width:160},{id:"min_wait",header:[{text:"Мин. ожидания"}],width:160},{id:"lcr",header:[{text:"LCR"}],width:160},{id:"sl",header:[{text:"SL"}],width:160},{id:"rcr",header:[{text:"% повторных"}],width:160},{id:"fcr",header:[{text:"FCR"}],width:160},{id:"transfer",header:[{text:"Переводов"}],width:160},{id:"cost",header:[{text:"Себестоимость"}],width:160},{id:"ready",header:[{text:"Готов"}],width:160},{id:"notready",header:[{text:"Не готов"}],width:160}],data:[],height:300,resizeColumn:!0,resizeRow:!0,select:!0},resizeColumn:!0,resizeRow:!0,select:!0,columns:[{id:"queue_name",header:[{text:"Линия"}],template:"{common.subrow()} #queue_name#",sort:"string",width:160},{id:"agents",header:[{text:"Операторов"}],width:160},{id:"total",header:[{text:"Всего"}],width:160},{id:"served",header:[{text:"Принятых"}],width:160},{id:"unserved",header:[{text:"Не принятых"}],width:160},{id:"avg_answer",header:[{text:"Ср. ответа"}],width:160},{id:"avg_duration",header:[{text:"Ср. обращения"}],width:160},{id:"avg_wait",header:[{text:"Ср. ожидания"}],width:160},{id:"max_wait",header:[{text:"Макс. ожидания"}],width:160},{id:"min_wait",header:[{text:"Мин. ожидания"}],width:160},{id:"lcr",header:[{text:"LCR"}],width:160},{id:"sl",header:[{text:"SL"}],width:160},{id:"rcr",header:[{text:"% повторных"}],width:160},{id:"fcr",header:[{text:"FCR"}],width:160},{id:"transfer",header:[{text:"Переводов"}],width:160},{id:"nwh",header:[{text:"Не рабочее время"}],width:160},{id:"cost",header:[{text:"Себестоимость"}],width:160}],ready:function(){webix.extend(this,webix.ProgressBar)},on:{onSubViewCreate:function(e,t){var i=webix.guiutils.getDateRange("reportDateRange");e.load("legacy/ext_incoming_external_personal?filter[t1]="+i.start+"&filter[t2]="+i.end+"&filter[queue]="+t.queue)}}}]}]}}getView(){return this.getGrid()}loadData(){this.setToolBar(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),webix.AppFilter.setSubmit((()=>{this.loadReport()})),webix.AppFilter.setReset((()=>{})),this.loaded||$$("ext_incoming_external_table")&&(webix.extend($$("ext_incoming_external_table"),webix.ProgressBar),webix.AppFilter.submit(),this.loaded=1)}}},1318:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,webix.Manager.setComponent("ext_incoming_internal",this),this.toolBarId="ext_incoming_internal_toolbar",this.filterId="ext_incoming_internal_filter",this.id="ext_incoming_internal"}getThis(){return this}roleAllowed(){return["phc.reports","erpico.admin"]}getUrl(){var e=webix.guiutils.getDateRange("reportDateRange");if($$("ext_incoming_internal_talbe").isVisible())var t=$$("ext_incoming_internal_talbe").getFilter("number").value,i=$$("ext_incoming_internal_talbe").getFilter("user_name").value;else t="",i="";var o="/legacy/ext_incoming_internal?filter[t1]="+e.start+"&filter[t2]="+e.end;return i.length&&(o+="&filter[user_name]="+i),t.length&&(o+="&filter[number]="+t),o}loadReport(){$$("ext_incoming_internal_talbe").clearAll(),$$("ext_incoming_internal_talbe").load(this.getUrl())}getToolBar(){return{css:"top-menu-right-item",id:"ext_incoming_internal_toolbar",hidden:!0,cols:[{id:"search_ext_incoming_internal",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",on:{onItemClick:()=>{this.loadReport()}}}]}}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}showToolBar(){$$(this.toolBarId).show()}getGrid(){return{id:"ext_incoming_internal",hidden:!0,type:"clean",rows:[{rows:[{id:"ext_incoming_internal_talbe",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,columns:[{id:"number",header:[{text:"Вн. номер"},{content:"serverFilter"}],width:160},{id:"user_name",header:[{text:"Сотрудник"},{content:"serverFilter"}],width:160},{id:"total",header:[{text:"Всего"}],width:160},{id:"served",header:[{text:"Принятых"}],width:160},{id:"unserved",header:[{text:"Не принятых"}],width:160},{id:"avg_answer",header:[{text:"Ср. ответа"}],width:160},{id:"avg_duration",header:[{text:"Ср. обращения"}],width:160},{id:"avg_wait",header:[{text:"Ср. ожидания"}],width:160},{id:"max_wait",header:[{text:"Макс. ожидания"}],width:160},{id:"min_wait",header:[{text:"Мин. ожидания"}],width:160},{id:"lcr",header:[{text:"LCR"}],width:160},{id:"sl",header:[{text:"SL"}],width:160}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}]}}getView(){return this.getGrid()}loadData(){this.setToolBar(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),webix.AppFilter.setSubmit((()=>{this.loadReport()})),webix.AppFilter.setReset((()=>{})),$$("ext_incoming_internal_talbe")&&(webix.extend($$("ext_incoming_internal_talbe"),webix.ProgressBar),webix.AppFilter.submit(),this.loaded=1)}}},9409:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,webix.Manager.setComponent("ext_outgoing",this),this.toolBarId="ext_outgoing_toolbar",this.id="ext_outgoing",this.filterId="ext_outgoing_filter"}roleAllowed(){return["phc.reports","erpico.admin"]}loadReport(){var e=webix.guiutils.getDateRange("reportDateRange");if($$("ext_outgoing_table").isVisible())var t=$$("ext_outgoing_table").getFilter("number").value,i=$$("ext_outgoing_table").getFilter("user_name").value;else t="",i="";var o="/legacy/ext_outgoing?filter[t1]="+e.start+"&filter[t2]="+e.end;i.length&&(o+="&filter[user_name]="+i),t.length&&(o+="&filter[number]="+t),$$("ext_outgoing_table").clearAll(),$$("ext_outgoing_table").load(o)}getToolBar(){return{id:this.toolBarId,css:"top-menu-right-item",hidden:!0,cols:[{id:"search_ext_outgoing",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",on:{onItemClick:()=>{this.loadReport()}}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",id:"outgoingExcelButton",hidden:!1,click:function(){webix.toExcel($$("ext_outgoing_table"),{filterHTML:!0,filename:"Исходящие"})}}]}}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}showToolBar(){$$(this.toolBarId).show()}getGrid(){return{id:"ext_outgoing",hidden:!0,type:"clean",rows:[{rows:[{id:"ext_outgoing_table",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,tooltip:!0,columns:[{id:"number",header:[{text:"Вн. номер"},{content:"serverFilter"}],width:100,sort:"string",tooltip:()=>"Внутренний номер сотрудника"},{id:"user_name",header:[{text:"Сотрудник"},{content:"serverFilter"}],width:160,sort:"string"},{id:"total",header:[{text:"Всего"},{content:"numberFilter"}],width:70,sort:"string",sort:"string"},{id:"served",header:[{text:"Отвеченных"}],width:110,sort:"string"},{id:"unserved",header:[{text:"Не отвеченных"}],width:150,sort:"string"},{id:"avg_answer",header:[{text:"Ср. ответа"}],width:110,sort:"string",tooltip:()=>"Среднее время ответа"},{id:"avg_duration",header:[{text:"Ср. разговора"}],width:140,sort:"string",tooltip:()=>"Среднее время разговора"},{id:"avg_wait",header:[{text:"Ср. ожидания"}],width:130,sort:"string",tooltip:()=>"Среднее время ожидания"},{id:"max_wait",header:[{text:"Макс. ожидания"}],width:150,sort:"string",tooltip:()=>"Максимальное время ожидания"},{id:"min_wait",header:[{text:"Мин. ожидания"}],width:140,sort:"string",tooltip:()=>"Минимальное время ожидания"},{id:"internal",header:[{text:"Внутренние"}],width:130,sort:"string"},{id:"urban",header:[{text:"Городские"}],width:130,sort:"string"},{id:"cellular",header:[{text:"Сотовые"}],width:130,sort:"string"},{id:"intercity",header:[{text:"Межгород"}],width:130,sort:"string"},{id:"international",header:[{text:"Международные"}],width:140,sort:"string"}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}]}}getView(){return this.getGrid()}loadData(){this.setToolBar(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),webix.AppFilter.setSubmit((()=>{this.loadReport()})),$$("ext_outgoing_table")&&(webix.extend($$("ext_outgoing_table"),webix.ProgressBar),this.loaded||(webix.AppFilter.submit(),this.loaded=1))}}},2223:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,webix.Manager.setComponent("extended_calls",this),this.dst_change="",this.src_change="",this.optionsWindowId="win_option_cdr_report",this.toolBarId="extended_calls_toolbar",this.filterId="extended_calls_filter",this.id="extended_calls"}roleAllowed(){return["phc.reports","erpico.admin"]}getThis(){return this}getGrid(){return{id:"extended_calls",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,footer:!0,hover:"myhover",multiselect:!0,navigation:!0,css:"my_style",columns:[{id:"calldate",header:[{text:translate("Date"),height:25},{content:"textFilter",height:40}],sort:"string",width:180,template:"#calldate2#",footer:{text:translate("Total:"),colspan:2,height:30}},{id:"fullname",header:[{text:translate("Staffer")},{content:"selectFilter"}],sort:"string",width:160},{id:"src",header:[{text:translate("Source")},{content:"textFilter"}],sort:"string",width:155,footer:{content:"avgColumn"}},{id:"dst",header:[{text:translate("Dialed number")},{content:"textFilter"}],sort:"string",width:155},{id:"status",header:[{text:translate("Status")},{content:"selectFilter"}],sort:"string",width:120,template:"<span class='state #disposition#'>#status#</span>"},{id:"ratesec",header:[{text:translate("Duration")},{content:"textFilter"}],sort:"string",width:140},{id:"channel",header:[{text:translate("Канал 1")},{content:"textFilter"}],sort:"string",width:200},{id:"dstchannel",header:[{text:translate("Канал 2")},{content:"textFilter"}],sort:"string",width:200}],data:[],ready:function(){webix.extend(this,webix.ProgressBar)}}}getTraffic(){return{id:"extended_calls_trafic",rows:[{view:"toolbar",height:30,elements:[{view:"label",label:"<center>"+translate("Traffic for period")+"</center>"}]},{id:"cdr_report_trafic",view:"datatable",height:75,navigation:!0,resizeColumn:!0,resizeRow:!0,css:"my_style",columns:[{id:"1",header:[{text:translate("Duration"),height:25}],width:180},{id:"2",header:[{text:translate("Calls")}],width:180},{id:"3",header:[{text:"ACD, "+translate("min")}],width:180},{id:"4",header:["ASR, %"],width:180},{id:"5",header:[{text:"PDD, "+translate("sec")}],width:180}],data:[],ready:function(){webix.extend(this,webix.ProgressBar)}}]}}loadReport(){$$("extended_calls").enable(),$$("cdr_report_trafic").enable(),$$("extended_calls").getFilter("calldate").value="",$$("extended_calls").getFilter("fullname").value="",$$("extended_calls").getFilter("src").value="",$$("extended_calls").getFilter("dst").value="",$$("extended_calls").getFilter("status").value="",$$("extended_calls").getFilter("ratesec").value="";var e=webix.guiutils.getDateRange("reportDateRange"),t=e.end,i="extended_calls/list",o="?filter[t1]="+e.start+"&filter[t2]="+t;""!=$$("srcFilters").getValue()&&(o+="&filter[src]="+$$("srcFilters").getValue()),""!=$$("dstFilters").getValue()&&(o+="&filter[dst]="+$$("dstFilters").getValue()),$$("cdr_report_trafic").showProgress({type:"icon",hide:!0}),$$("extended_calls").showProgress({type:"icon",hide:!0}),$$("extended_calls").clearAll(),$$("cdr_report_trafic").clearAll(),$$("extended_calls").load(i+o,"json",(()=>{$$("extended_calls").hideProgress({type:"icon",hide:!0})})),$$("cdr_report_trafic").load(i+"/trafic"+o,"json",(()=>{$$("cdr_report_trafic").hideProgress({type:"icon",hide:!0})}))}getToolBar(){return{id:this.getThis().toolBarId,css:"top-menu-right-item",hidden:!0,cols:[{id:"search",view:"button",type:"icon",icon:"wxi-search",width:200,label:translate("Show report"),click:()=>{this.loadReport()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:translate("Export to Excel"),click:function(){var e=webix.guiutils.getDateRange("reportDateRange");webix.toExcel($$("extended_calls"),{filterHTML:!0,filename:"Расширенные звонки с "+e.end+" по "+e.start})}}]}}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}showToolBar(){$$(this.toolBarId).show()}getView(){return{id:this.id,rows:[this.getGrid(),this.getTraffic()]}}loadData(){this.setToolBar(),$$("extended_calls")&&($$("extended_calls_trafic").show(),$$("groupByUUID").hide(),webix.AppFilter.show(),$$("defaultsForTraffic").show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),webix.AppFilter.setSubmit((()=>{this.loadReport()})),webix.AppFilter.setReset((()=>{webix.AppFilter.resetDefaultTraffic()})),webix.extend($$("extended_calls"),webix.ProgressBar),webix.extend($$("cdr_report_trafic"),webix.ProgressBar),this.loaded||(webix.AppFilter.submit(),this.loaded=1))}}},6020:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,webix.Manager.setComponent("extended_contact_calls",this),this.toolBarId="extended_contact_calls_toolbar",this.filterId="extended_contact_calls_filter",this.id="extended_contact_calls"}roleAllowed(){return["phc.reports","erpico.admin"]}getThis(){return this}static filterBySecondsCompare(e,t){console.log(e),console.log(t)}static filterGridBySecond(e,t,i){let o=e.split(":");if(o&&o[0]&&o[1]){let e=o[1],s=60*o[0]+e;return s>=t&&s<=i}return!1}getGrid(){return{id:"extended_contact_calls",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,footer:!0,navigation:!0,hover:"myhover",multiselect:!0,css:"my_style",tooltip:!0,columns:[{id:"calldate",header:[{text:translate("Date"),height:25}],sort:"date",width:180,template:"#calldate2#",footer:{text:translate("Total:"),height:30}},{id:"queue",header:[{text:translate("Queue"),content:"excelFilter",mode:"text"}],sort:"string",width:130,footer:{content:"avgColumn"}},{id:"agentname",header:[{text:translate("Agent"),content:"excelFilter",mode:"text"}],sort:"string",width:160},{id:"agent",header:[{text:translate("Agent name"),content:"excelFilter",mode:"text"}],sort:"string",width:155},{id:"src",header:[{text:translate("Source"),content:"excelFilter",mode:"text"}],sort:"string",width:155,footer:{text:translate("Average:")}},{id:"holdtime",header:[{text:translate("Waiting time"),content:"excelFilter",filterConfig:webix.guiutils.timeFilterConfig()}],sort:"int",width:155,footer:{content:"avgTime"},template:function(e){return webix.guiutils.formatTime(e.holdtime)}},{id:"talktime",header:[{text:translate("Talktime"),content:"excelFilter",filterConfig:webix.guiutils.timeFilterConfig()}],sort:"int",width:150,footer:{content:"avgTime"},template:function(e){return webix.guiutils.formatTime(e.talktime)}},{id:"ringtime",header:[{text:translate("Ringtime"),content:"excelFilter",filterConfig:webix.guiutils.timeFilterConfig()}],sort:"int",width:150,footer:{content:"avgTime"},template:function(e){return webix.guiutils.formatTime(e.ringtime)}},{id:"position",header:[{text:translate("Position"),content:"excelFilter",mode:"text"}],sort:"int",width:140},{id:"status",header:[{text:translate("Reason of completing"),content:"excelFilter",mode:"text"}],sort:"int",width:185,template:"<span class='state #reason#'>#status#</span>"},{id:"channel",header:[{text:translate("Канал"),content:"excelFilter",mode:"text"}],sort:"string",width:200},{id:"uid",header:[{text:translate("UID"),content:"excelFilter",mode:"text"}],sort:"string",width:200}],data:[],on:{onBeforeFilter:function(){this.showProgress()},onAfterFilter:function(){this.hideProgress()}},ready:function(){webix.extend(this,webix.ProgressBar)}}}getReportData(){$$("extended_contact_calls").enable(),$$("extended_contact_calls").filter();var e=webix.guiutils.getDateRange("reportDateRange"),t="/extended_contact_calls/list?filter[t1]="+e.start+"&filter[t2]="+e.end;""!=$$("srcFilters").getValue()&&(t+="&filter[src]="+$$("srcFilters").getValue()),""!=$$("filterReports").getValue()&&(t+="&filter[filter]="+$$("filterReports").getValue()),$$("extended_contact_calls").clearAll(),$$("extended_contact_calls").load(t,"json",(()=>{$$("extended_contact_calls").showProgress({type:"icon",hide:!0})}))}getToolBar(){let e=this.getThis();return{id:"extended_contact_calls_toolbar",css:"top-menu-right-item",hidden:!0,cols:[{responsive:"extended_contact_calls_toolbar",cols:[{id:"search_contact_cdr_report",view:"button",type:"icon",icon:"wxi-search",width:200,label:translate("Show report"),click:function(){e.getReportData()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:translate("Export to Excel"),click:function(){var e=webix.guiutils.getDateRange("reportDateRange");webix.toExcel($$("extended_contact_calls"),{columns:{date:{template:function(e){return e.calldate},header:"Дата"},queue:{template:function(e){return e.queue},header:"Очередь"},agentname:{template:function(e){return e.agentname},header:"Агент"},agent:{template:function(e){return e.agent},header:"Имя агента"},src:{template:function(e){return e.src},header:"Источник"},holdtime:{template:function(e){return webix.guiutils.formatTime(e.holdtime)},header:"Время ожидания"},talktime:{template:function(e){return webix.guiutils.formatTime(e.talktime)},header:"Время разговора"},ringtime:{template:function(e){return webix.guiutils.formatTime(e.ringtime)},header:"Время ответа"},position:{template:function(e){return e.position},header:"Позиция"},status:{template:function(e){return e.status},header:"Причина завершения"},channel:{template:function(e){return e.channel},header:"Канал"},uid:{template:function(e){return e.uid},header:"UID"}},filterHTML:!0,filename:"Расширенные входящие с "+e.end+" по "+e.start})}}]}]}}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}showToolBar(){$$(this.toolBarId).show()}getView(){return{rows:[this.getGrid()]}}loadData(){this.setToolBar(),$$("extended_contact_calls")&&(webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),webix.AppFilter.setSubmit((()=>{this.getReportData()})),webix.AppFilter.setReset((()=>{webix.AppFilter.resetDefaultTraffic()})),$$("defaultsForTraffic").show(),$$("dstFilters").hide(),$$("groupByUUID").hide(),$$("defaultsForReports").show(),$$("queueReports").hide(),$$("filterReports").show(),webix.extend($$("extended_contact_calls"),webix.ProgressBar),this.loaded||(webix.AppFilter.submit(),this.loaded=1))}}},2101:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.id="grouped_reports",this.toolBarId="grouped_reports_toolbar",this.filterId="grouped_reports_filter",this.additionOptionsWindowId="win_option_grouped_reports",webix.Manager.setComponent("grouped_reports",this)}roleAllowed(){return["phc.reports","erpico.admin"]}getFirstReport(){return{id:"grouped_reports1_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Звонки</center>"}],height:30},{id:"grouped_reports1",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"},xAxis:{template:"#month#"},yAxis:{start:0,step:10},ready:function(){webix.extend(this,webix.ProgressBar)}}]}}getSecondReport(){return{id:"grouped_reports2_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Суммарное время разговора, ожидания (мин.)</center>"}],height:30},{id:"grouped_reports2",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"},xAxis:{template:"#month#"},yAxis:{start:0,step:10},ready:function(){webix.extend(this,webix.ProgressBar)}}]}}getThirdReport(){return{id:"grouped_reports3_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Причина завершения обслуженных звонков</center>"}],height:30},{id:"grouped_reports3",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"},xAxis:{template:"#month#"},yAxis:{start:0,step:10},ready:function(){webix.extend(this,webix.ProgressBar)}}]}}getFourthReport(){return{id:"grouped_reports4_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Причина завершения необслуженных звонков</center>"}],height:30},{id:"grouped_reports4",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"},xAxis:{template:"#month#"},yAxis:{start:0,step:10},ready:function(){webix.extend(this,webix.ProgressBar)}}]}}getFifthReport(){return{id:"grouped_reports5_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Время разговора (минимальное, среднее, максимальное), сек.</center>"}],height:30},{id:"grouped_reports5",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"},xAxis:{template:"#month#"},yAxis:{start:0,step:10},ready:function(){webix.extend(this,webix.ProgressBar)}}]}}getSixthReport(){return{id:"grouped_reports6_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Время ожидания (минимальное, среднее, максимальное), сек.</center>"}],height:30},{id:"grouped_reports6",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"},xAxis:{template:"#month#"},yAxis:{start:0,step:10},ready:function(){webix.extend(this,webix.ProgressBar)}}]}}getSeventhReport(){return{id:"grouped_reports7_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Звонки по уровню обслуживания (обслуженные в интервале ожидания)</center>"}],height:30},{id:"grouped_reports7",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"},xAxis:{template:"#month#"},yAxis:{start:0,step:10},ready:function(){webix.extend(this,webix.ProgressBar)}}]}}getGreed(){return[{visibleBatch:"1",rows:[{id:"analysis_outgoing_calls_layout_1",view:"scrollview",batch:1,scroll:"y",body:{height:1120,rows:[{cols:[this.getFirstReport(),{view:"resizer"},this.getSeventhReport()]},{view:"resizer"},{cols:[this.getSixthReport(),{view:"resizer"},this.getSecondReport()]},{view:"resizer"},{cols:[this.getFifthReport(),{view:"resizer"},this.getThirdReport()]},{view:"resizer"},{cols:[this.getFourthReport()]}]}}]}]}getView(){return{id:"grouped_reports",hidden:!0,type:"clean",rows:this.getGreed()}}refreshReport(){const e=this.getThis();let t=$$("reportDateRange").getValue(),i="";if(t.end){var o=webix.guiutils.sqlDateTime(t.start);i=webix.guiutils.sqlDateTime(t.end)}else o=webix.guiutils.sqlDate(t.start);webix.extend($$(e.id),webix.ProgressBar),$$(e.id).showProgress();var s="?filter[t1]="+o+"&filter[t2]="+i;$$("queueReports").getValue()&&(s+="&filter[queue]="+$$("queueReports").getValue()),$$("filterReports").getValue()&&(s+="&filter[filter]="+$$("filterReports").getValue());var a="/legacy/grouped_reports_total_chart";$$("grouped_reports1").load(a+"1"+s),$$("grouped_reports2").load(a+"2"+s),$$("grouped_reports3").load(a+"3"+s),$$("grouped_reports4").load(a+"4"+s),$$("grouped_reports5").load(a+"5"+s),$$("grouped_reports6").load(a+"6"+s),$$("grouped_reports7").load(a+"7"+s,(()=>{$$(e.id).hideProgress()}))}getThis(){return this}getToolBar(){const e=this.getThis();return{css:"top-menu-right-item",id:this.toolBarId,hidden:!0,cols:[{css:"disable_margin_btn_tbar",id:"search_grouped_reports",view:"button",type:"icon",icon:"wxi-sync",width:55,click:function(){e.refreshReport()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",disabled:!0,id:"grouped_reports_export"}]}}getToolTestBar(){return{id:this.filterId,rows:[]}}showToolBar(){$$(this.toolBarId).show()}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}loadData(){this.setToolBar(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),$$("defaultsForReports").show(),webix.AppFilter.setSubmit((()=>{this.refreshReport()})),webix.AppFilter.setReset((()=>{webix.AppFilter.resetDefaultReport()})),this.loaded||(webix.AppFilter.submit(),this.loaded=1)}}},3202:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.toolBarId="agents_grouped_reports_toolbar",this.filterId="grouped_reports_by_agents_filter",this.id="grouped_reports_by_agents",webix.Manager.setComponent("grouped_reports_by_agents",this)}getThis(){return this}roleAllowed(){return["phc.reports","erpico.admin"]}getGreed(){return{id:"agents_reports",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,hover:"myhover",navigation:!0,multiselect:!0,tooltip:!0,css:"my_style",columns:[{id:"agent",header:[{text:"<b>Агент</b>",rowspan:3,height:25},{text:"",height:25},{text:"",height:25},{content:"selectFilter"}],sort:"string",template:"#agent#",width:115,footer:{text:"Total:",height:30}},{id:"agent_name",header:[{text:"<b>Имя агента</b>",rowspan:3},{text:""},{text:""},{content:"selectFilter"}],sort:"string",width:120,footer:{content:"avgColumn"}},{id:"total_call",header:[{text:"<b>Звонки</b>",colspan:3},{text:"Всего",rowspan:2},{text:""},{content:"textFilter"}],sort:"int",footer:{content:"summColumn"}},{id:"unserved_call",header:[{text:""},{text:"Необслуженные",rowspan:2},{text:""},{content:"textFilter"}],sort:"int",width:140,template:"#unserved_call_chart#",footer:{content:"summColumn"}},{id:"served_call",header:[{text:""},{text:"Обслуженные",rowspan:2},{text:""},{content:"textFilter"}],sort:"int",width:140,template:"#served_call_chart#",footer:{content:"summColumn"}},{id:"investment_unserved",header:[{text:"<b>Вклад, %</b>",colspan:2},{text:"Необслуженные",rowspan:2},{text:""},{content:"textFilter"}],sort:"int",width:135},{id:"investment_served",header:[{text:""},{text:"Обслуженные",rowspan:2},{text:""},{content:"textFilter"}],sort:"int",width:130},{id:"time_sum_hold",header:[{text:"<b>Время, мин.</b>",colspan:4},{text:"Всего",colspan:2},{text:"Ожидание"},{content:"textFilter"}],sort:"int",width:140,template:"#time_sum_hold_chart#",footer:{content:"summTimeColumn"}},{id:"time_sum_talk",header:[{text:""},{text:""},{text:"Разговор"},{content:"textFilter"}],sort:"int",width:140,template:"#time_sum_talk_chart#",footer:{content:"summTimeColumn"}},{id:"time_avg_hold",header:[{text:""},{text:"Среднее",colspan:2},{text:"Ожидание"},{content:"textFilter"}],sort:"int",width:100,footer:{content:"avaregeTimeColumn"}},{id:"time_avg_talk",header:[{text:""},{text:""},{text:"Разговор"},{content:"textFilter"}],sort:"int",width:100,footer:{content:"avaregeTimeColumn"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}}getView(){return{id:"grouped_reports_by_agents",hidden:!0,type:"clean",rows:[this.getGreed()]}}loadReport(e){var t=$$("reportDateRange").getValue(),i=t.start,o=i.getMonth()+1,s=i.getFullYear()+"-"+o+"-"+i.getDate()+" "+i.getHours()+":"+i.getMinutes()+":"+i.getSeconds(),a=t.end;if(a)var l=a.getMonth()+1,r=a.getFullYear()+"-"+l+"-"+a.getDate()+" "+a.getHours()+":"+a.getMinutes()+":"+a.getSeconds();else r="";var n="/legacy/grouped_agents_reports?filter[t1]="+s+"&filter[t2]="+r;$$("filterReports").getValue()&&(n+="&filter[filter]="+$$("filterReports").getValue()),$$("queueReports").getValue()&&(n+="&filter[queue]="+$$("queueReports").getValue()),$$("agents_reports").clearAll(),webix.extend($$("agents_reports"),webix.ProgressBar),$$("agents_reports").showProgress(),$$("agents_reports").load(n,(()=>{e&&e()}))}getToolBar(){let e=this.getThis();return{id:e.toolBarId,css:"top-menu-right-item",cols:[{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Показать отчет",click:function(){e.loadReport()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("agents_reports"),{filename:"agents_reports",name:"agents_reports",filterHTML:!0})}}]}}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").show()}loadData(){this.setToolBar(),$$("agents_reports")&&(webix.extend($$("agents_reports"),webix.ProgressBar),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),$$("defaultsForReports").show(),webix.AppFilter.setSubmit((()=>{this.loadReport()})),webix.AppFilter.setReset((()=>{webix.AppFilter.resetDefaultReport()})),this.loaded||(webix.AppFilter.submit(),this.loaded=1))}}},8830:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.toolBarId="queues_grouped_reports_toolbar",this.id="queues_grouped_reports_filter",this.filterId="queues_grouped_reports_filter",webix.Manager.setComponent("grouped_reports_by_queues",this)}roleAllowed(){return["phc.reports","erpico.admin"]}loadQueuesGroupedReports(){var e=$$("filterReports").getValue(),t=$$("queueReports").getValue(),i=$$("reportDateRange").getValue(),o=i.start,s=o.getMonth()+1,a=o.getFullYear()+"-"+s+"-"+o.getDate()+" "+o.getHours()+":"+o.getMinutes()+":"+o.getSeconds(),l=i.end;if(l)var r=l.getMonth()+1,n=l.getFullYear()+"-"+r+"-"+l.getDate()+" "+l.getHours()+":"+l.getMinutes()+":"+l.getSeconds();else n="";var d="?filter[t1]="+a+"&filter[t2]="+n;1==e?($$("report_queues_chart1_l").show(),$$("report_queues_chart2_l").show(),$$("report_queues_chart3_l").show(),$$("report_queues_chart4_l").show(),$$("report_queues_chart5_l").show()):2==e?($$("report_queues_chart1_l").hide(),$$("report_queues_chart2_l").show(),$$("report_queues_chart3_l").hide(),$$("report_queues_chart4_l").show(),$$("report_queues_chart5_l").show()):3==e?($$("report_queues_chart1_l").hide(),$$("report_queues_chart2_l").hide(),$$("report_queues_chart3_l").show(),$$("report_queues_chart4_l").hide(),$$("report_queues_chart5_l").show()):4==e&&($$("report_queues_chart1_l").hide(),$$("report_queues_chart2_l").hide(),$$("report_queues_chart3_l").hide(),$$("report_queues_chart4_l").hide(),$$("report_queues_chart5_l").hide()),""!=e&&(d+="&filter[filter]="+e),""!=t&&(d+="&filter[queue]="+t),$$("report_queues_table").clearAll(),webix.extend($$("report_queues_table"),webix.ProgressBar),$$("report_queues_table").showProgress(),$$("report_queues_table").load("/legacy/grouped_queues_table_total"+d),$$("report_queues_chart1").clearAll(),webix.extend($$("report_queues_chart1"),webix.ProgressBar),$$("report_queues_chart1").showProgress(),$$("report_queues_chart1").load("/legacy/grouped_queues_table_chart1"+d),$$("report_queues_chart2").clearAll(),webix.extend($$("report_queues_chart2"),webix.ProgressBar),$$("report_queues_chart2").showProgress(),$$("report_queues_chart2").load("/legacy/grouped_queues_table_chart2"+d),$$("report_queues_chart3").clearAll(),webix.extend($$("report_queues_chart3"),webix.ProgressBar),$$("report_queues_chart3").showProgress(),$$("report_queues_chart3").load("/legacy/grouped_queues_table_chart3"+d),$$("report_queues_chart4").clearAll(),webix.extend($$("report_queues_chart4"),webix.ProgressBar),$$("report_queues_chart4").showProgress(),$$("report_queues_chart4").load("/legacy/grouped_queues_table_chart4"+d),$$("report_queues_chart5").clearAll(),webix.extend($$("report_queues_chart5"),webix.ProgressBar),$$("report_queues_chart5").showProgress(),$$("report_queues_chart5").load("/legacy/grouped_queues_table_chart5"+d)}getGreed(){return{id:"report_queues_table",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,hover:"myhover",navigation:!0,multiselect:!0,tooltip:!0,css:"my_style",columns:[{id:"name_queue",header:[{text:"<b>Очередь</b>",rowspan:2,height:25},{text:"",height:25}],width:150,footer:{text:"Всего:",height:30}},{id:"calls_total",header:[{text:"<b>Звонки</b>",colspan:3},{text:"Всего"}],width:120,footer:{content:"summColumn"}},{id:"unserved_call",header:[{text:""},{text:"Необслуженные"}],width:140,template:"#unserved_call_chart#",footer:{content:"summColumn"}},{id:"served_call",header:[{text:""},{text:"Обслуженные"}],width:140,template:"#served_call_chart#",footer:{content:"summColumn"}},{id:"sum_holdtime",header:[{text:"<b>Суммарное время, мин.</b>",colspan:2},{text:"Ожидание"}],width:140,template:"#sum_holdtime_chart#",footer:{content:"summTimeColumn"}},{id:"sum_talktime",header:[{text:""},{text:"Разговор"}],width:140,template:"#sum_talktime_chart#",footer:{content:"summTimeColumn"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}}getFirstChartRow(){return{cols:[{id:"report_queues_chart1_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Всего звонков</center>"}],height:30},{id:"report_queues_chart1",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"},xAxis:{template:function(e){if(!e)return"";if(!e.month)return"";if(e.month.toString().length>10){var t=e.month.substring(0,7);return t+="..",t+=e.month.substring(e.month.length-2)}return e.month},width:200,tooltip:{template:"#month#"}},yAxis:{start:0,step:10},ready:function(){webix.extend(this,webix.ProgressBar)}}]},{view:"resizer"},{id:"report_queues_chart2_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Обслуженные звонки</center>"}],height:30},{id:"report_queues_chart2",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",xAxis:{template:function(e){if(!e)return"";if(!e.month)return"";if(e.month.toString().length>10){var t=e.month.substring(0,7);return t+="..",t+=e.month.substring(e.month.length-2)}return e.month},width:200,tooltip:{template:"#month#"}},yAxis:{start:0,step:10},legend:{values:[{text:"Перевод",color:"#66CCFF"},{text:"Завершен оператором",color:"#FFCC33"},{text:"Завершен клиентом",color:"#FF3333"}],valign:"middle",align:"right",width:250,layout:"y"},series:[{value:"#sales#",color:"#66CCFF",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"}},{value:"#sales2#",color:"#FFCC33",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales2#</div>",tooltip:{template:"#sales2#"}},{value:"#sales3#",color:"#FF3333",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales3#</div>",tooltip:{template:"#sales3#"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}]}}getSecondChartRow(){return{cols:[{id:"report_queues_chart4_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Время разговора (минимальное, среднее, максимальное), сек.</center>"}],height:30},{id:"report_queues_chart4",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",xAxis:{template:function(e){if(!e)return"";if(!e.month)return"";if(e.month.toString().length>10){var t=e.month.substring(0,7);return t+="..",t+=e.month.substring(e.month.length-2)}return e.month},width:200,tooltip:{template:"#month#"}},yAxis:{start:0,step:10},legend:{values:[{text:"Минимум",color:"#66CCFF"},{text:"Среднее",color:"#FF3333"},{text:"Максимум",color:"#66CC33"}],valign:"middle",align:"right",width:130,layout:"y"},series:[{value:"#sales#",color:"#66CCFF",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"}},{value:"#sales2#",color:"#FF3333",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales2#</div>",tooltip:{template:"#sales2#"}},{value:"#sales3#",color:"#66CC33",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales3#</div>",tooltip:{template:"#sales3#"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}]},{view:"resizer"},{id:"report_queues_chart5_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Время ожидания (минимальное, среднее, максимальное), сек.</center>"}],height:30},{id:"report_queues_chart5",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",xAxis:{template:function(e){if(!e)return"";if(!e.month)return"";if(e.month.toString().length>10){var t=e.month.substring(0,7);return t+="..",t+=e.month.substring(e.month.length-2)}return e.month},width:200,tooltip:{template:"#month#"}},yAxis:{start:0,step:10},legend:{values:[{text:"Минимум",color:"#66CCFF"},{text:"Среднее",color:"#FF3333"},{text:"Максимум",color:"#66CC33"}],valign:"middle",align:"right",width:130,layout:"y"},series:[{value:"#sales#",color:"#66CCFF",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"}},{value:"#sales2#",color:"#FF3333",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales2#</div>",tooltip:{template:"#sales2#"}},{value:"#sales3#",color:"#66CC33",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales3#</div>",tooltip:{template:"#sales3#"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}]}}getLastChartRow(){return{rows:[{id:"report_queues_chart3_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Необслуженные звонки</center>"}],height:30},{id:"report_queues_chart3",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",xAxis:{template:function(e){if(!e)return"";if(!e.month)return"";if(e.month.toString().length>10){var t=e.month.substring(0,7);return t+="..",t+=e.month.substring(e.month.length-2)}return e.month},width:200,tooltip:{template:"#month#"}},yAxis:{start:0,step:10},legend:{values:[{text:"Прерванные клиентом",color:"#66CCFF"},{text:"Таймаут вызова клиента",color:"#FF3333"},{text:"По нажатию кнопки клиентом",color:"#66CC33"},{text:"По причине пустой очереди",color:"#CC6633"}],valign:"middle",align:"right",width:250,layout:"y"},series:[{value:"#sales#",color:"#66CCFF",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"}},{value:"#sales2#",color:"#FF3333",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales2#</div>",tooltip:{template:"#sales2#"}},{value:"#sales3#",color:"#66CC33",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales3#</div>",tooltip:{template:"#sales3#"}},{value:"#sales4#",color:"#CC6633",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales4#</div>",tooltip:{template:"#sales4#"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}]}}getView(){let e=this;return{id:"grouped_reports_by_queues",hidden:!0,type:"clean",rows:[{id:"report_queues",batch:3,view:"scrollview",scroll:"y",body:{height:1010,rows:[e.getGreed(),{view:"resizer"},e.getFirstChartRow(),{view:"resizer"},e.getSecondChartRow(),{view:"resizer"},e.getLastChartRow()]}}]}}getToolBar(){let e=this;return{id:this.toolBarId,css:"top-menu-right-item",cols:[{view:"button",id:"queues_grouped_reports_load_button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Показать отчет",click:function(){e.loadQueuesGroupedReports()},on:{itemClick:function(){e.loadQueuesGroupedReports()}}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("report_queues_table"),{filename:"report_queues",name:"report_queues",filterHTML:!0})}}]}}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").show()}loadData(){this.setToolBar(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),$$("defaultsForReports").show(),webix.AppFilter.setSubmit((()=>{this.loadQueuesGroupedReports()})),webix.AppFilter.setReset((()=>{webix.AppFilter.resetDefaultReport()})),this.loaded||(webix.AppFilter.submit(),this.loaded=1)}}},2172:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(3566);class s{constructor(){this.loaded=0,this.toolBarId="groups_toolbar",webix.Manager.setComponent("groups",this)}roleAllowed(){return["erpico.admin"]}getView(){let e=0,t=0;return{id:"groups",hidden:!0,view:"datatable",resizeColumn:!0,resizeRow:!0,scroll:!0,scrollX:!0,navigation:!0,select:!0,css:"my_style",fixedRowHeight:!1,tooltip:!0,columns:[{id:"id",header:[{text:"№"},{content:"serverFilter"}],width:50},{id:"name",header:[{text:"Название"},{content:"serverFilter"}],fillspace:1},{id:"description",header:[{text:"Описание"},{content:"serverFilter"}],fillspace:1},{id:"list_users_str",header:["Список пользователей",""],fillspace:3}],on:{onItemDblClick:function(){$$("groups").getSelectedItem().id?t=$$("groups").getSelectedItem().id:$$("groups").getSelectedItem().id=t,(new o.GroupsWindow).showWindow(this.$scope)},onAfterSelect:function(){e=this.getSelectedId()},onAfterLoad:function(){e&&this.getItem(e)&&this.select(e),this.adjustRowHeight("list_users_str")},onAfterContextMenu:function(e){e.row&&$$("groups").select(e.row)}},ready:function(){let e="cmenugroups";webix.ui({view:"contextmenu",width:180,id:e,data:[{id:"edit",value:"Изменить",icon:"wxi-pencil"},{id:"copy",value:"Копировать",icon:"fa fa-copy"},{id:"delete",value:"Удалить",icon:"wxi-trash"}],on:{onMenuItemClick:function(e){switch(e){case"edit":$$("groups").getSelectedItem().id?t=$$("groups").getSelectedItem().id:$$("groups").getSelectedItem().id=t,(new o.GroupsWindow).showWindow(this.$scope);break;case"copy":$$("groups").getSelectedItem().id&&(t=$$("groups").getSelectedItem().id),$$("groups").getSelectedItem().id=0,(new o.GroupsWindow).showWindow(this.$scope);break;case"delete":webix.guiutils.removeFromTable(parseInt($$("groups").getSelectedId()),"/groups/"+parseInt($$("groups").getSelectedId())+"/remove","groups","removeGroup")}}}}),$$(e).attachTo(this),webix.extend(this,webix.ProgressBar),this.adjustRowHeight("list_users_str")}}}getToolBar(){return{id:this.toolBarId,hidden:!0,css:"top-menu-right-item",cols:[{view:"button",type:"icon",icon:"wxi-plus",width:150,label:"Добавить",css:"last-button-on-left-position",click(){$$("groups").unselectAll(),(new o.GroupsWindow).showWindow()}},{},{css:"disable_margin_btn_tbar",view:"button",type:"icon",icon:"fa fa-sync",width:56,click:function(){webix.guiutils.loadTable("groups","/groups/list")}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("groups"),{filterHTML:!0,filename:"Группы"})}}]}}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").hide()}loadData(){this.setToolBar(),webix.AppFilter.hide(),this.loaded||(webix.extend($$("groups"),webix.ProgressBar),webix.guiutils.loadTable("groups","/groups/list",(()=>{this.loaded=1})))}}},8075:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.toolBarId="hourly_traffic_toolbar",this.id="hourly_load",this.filterId="hourly_traffic_filter",this.additionOptionsWindowId="win_option_hourly_load",webix.Manager.setComponent("hourly_load",this)}roleAllowed(){return["phc.reports","erpico.admin"]}getView(){return{id:"hourly_load",hidden:!0,type:"clean",rows:[{id:"hourly_load_layout",rows:[{id:"hourly_load_table",view:"datatable",resizeColumn:!0,resizeRow:!0,height:85,navigation:!0,multiselect:!0,css:"my_style",columns:[{id:"0",header:[{text:"Дата",height:30}],width:180,format:webix.Date.dateToStr("%d.%m.%Y")},{id:"1",header:[{text:"Длительность"}],width:130},{id:"2",header:[{text:"Звонки"}],template:"#share#",width:155},{id:"3",header:[{text:"ACD, мин"}],width:155},{id:"4",header:["ASR, %"],width:120},{id:"5",header:[{text:"PDD, сек"}],width:140}],ready:function(){webix.extend(this,webix.ProgressBar)}},{view:"resizer"},{borderless:!0,cols:[{rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Звонков в час</center>"}],height:30},{id:"hourly_load_chart",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"},xAxis:{template:"#month#"},yAxis:{start:0,step:10},ready:function(){webix.extend(this,webix.ProgressBar)}}]},{view:"resizer"},{rows:[{view:"toolbar",elements:[{view:"label",label:"<center>ASR% по часам</center>"}],height:30},{id:"hourly_load_chart_asr",view:"chart",type:"line",value:"#sales#",item:{borderColor:"#ffffff",color:"#000000"},line:{color:"#ff9900",width:3},label:"<div style='color:#111;font-weight:bold;font-size:1.4em;'>#sales#</div>",tooltip:{template:"#sales#"},xAxis:{template:"#month#"},yAxis:{start:0,end:100,step:10},ready:function(){webix.extend(this,webix.ProgressBar)}}]}]}]}]}}getToolTestBar(){return{id:this.filterId,rows:[{id:"startDate_hourly_load",view:"datepicker",label:"Период от",labelPosition:"top",labelWidth:100,timepicker:!1,format:"%Y-%m-%d",value:new Date}]}}resetFilters(){$$("startDate_hourly_load").setValue(new Date),webix.AppFilter.resetDefaultTraffic()}getToolBar(){let e=this;return{id:"hourly_traffic_toolbar",css:"top-menu-right-item",hidden:!0,cols:[{id:"search_hourly_load",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",click:function(){e.loadReport()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("hourly_load_table"),{filterHTML:!0,filename:"По часам"})}}]}}loadReport(e){$$("hourly_load_table").enable(),$$("hourly_load_chart").enable(),$$("hourly_load_chart_asr").enable();var t="/legacy/hourly_load",i="";if(""!=$$("startDate_hourly_load").getValue()){var o=new Date($$("startDate_hourly_load").getValue()),s=o.getDate(),a=o.getMonth()+1;i+="?filter[t1]="+o.getFullYear()+"-"+a+"-"+s}""!=$$("srcFilters").getValue()&&(i.length?i+="&":i+="?",i+="filter[src]="+$$("srcFilters").getValue()),""!=$$("dstFilters").getValue()&&(i.length?i+="&":i+="?",i+="filter[dst]="+$$("dstFilters").getValue());var l=webix.ajax(t+i,(function(e){return e}));$$("hourly_load_table").clearAll(),$$("hourly_load_table").showProgress({type:"icon",hide:!0}),$$("hourly_load_table").parse(l),$$("hourly_load_chart").clearAll(),$$("hourly_load_chart").load(t+"_chart1"+i),$$("hourly_load_chart").refresh(),$$("hourly_load_chart_asr").clearAll(),$$("hourly_load_chart_asr").load(t+"_chart2"+i,(()=>{e&&e()})),$$("hourly_load_chart_asr").refresh()}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").hide()}loadData(){this.setToolBar(),webix.AppFilter.show(),$$("defaultsForTraffic").show(),$$("queueFilters").hide(),$$("groupByUUID").hide(),webix.AppFilter.setBody(this.id,this.getToolTestBar()),webix.AppFilter.setSubmit((()=>{this.loadReport()})),webix.AppFilter.setReset((()=>{this.resetFilters()})),this.loaded||(webix.extend($$("hourly_load_table"),webix.ProgressBar),webix.extend($$("hourly_load_chart"),webix.ProgressBar),webix.extend($$("hourly_load_chart_asr"),webix.ProgressBar),this.loadReport((()=>{this.loaded=1})))}}},7933:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.toolBarId="interval_reports_toolbar",this.id="interval_reports",this.filterId="interval_reports_filter",this.additionOptionsWindowId="win_option_interval_reports",webix.Manager.setComponent("interval_reports",this)}roleAllowed(){return["phc.reports","erpico.admin"]}getGreed(){return{id:"interval_reports_table",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,footer:!0,hover:"myhover",navigation:!0,multiselect:!0,tooltip:!0,css:"my_style",columns:[{id:"calldate",header:[{text:"<b>Интервал</b>",rowspan:2,height:25},{text:"",height:25},{content:"textFilter"}],sort:"string",width:130,footer:{text:"Всего:",height:30},format:webix.Date.dateToStr("%d.%m.%Y")},{id:"calls_total",header:[{text:"<b>Звонки</b>",colspan:3},{text:"Всего"},{content:"textFilter"}],sort:"string",width:85,footer:{content:"summColumn"}},{id:"calls_unserved",header:[{text:""},{text:"Необслуженные"},{content:"textFilter"}],sort:"string",width:140,footer:{content:"summColumn"},template:"#calls_unserved_chart#"},{id:"calls_served",header:[{text:""},{text:"Обслуженные"},{content:"textFilter"}],sort:"string",width:140,footer:{content:"summColumn"},template:"#calls_served_chart#"},{id:"sum_holdtime",header:[{text:"<b>Суммарное время, мин.</b>",colspan:2},{text:"Ожидание"},{content:"textFilter"}],sort:"string",width:140,footer:{content:"summTimeColumn"},template:"#sum_holdtime_chart#"},{id:"sum_talktime",header:[{text:""},{text:"Разговор"},{content:"textFilter"}],sort:"string",width:140,footer:{content:"summTimeColumn"},template:"#sum_talktime_chart#"}],ready:function(){webix.extend(this,webix.ProgressBar)}}}getView(){return{type:"clean",id:"interval_reports",hidden:!0,rows:[{view:"scrollview",scroll:"y",body:{height:1120,rows:[this.getGreed(),{view:"resizer"},{cols:[{id:"chart_total_calls_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Всего звонков</center>"}],height:30},{id:"chart_total_calls",view:"chart",type:"bar",value:"#sales#",color:"#color#",gradient:"rising",legend:{values:[{text:"Всего звонков",color:"#FF3333"}],valign:"middle",align:"right",width:250,layout:"y"},tooltip:{template:"<b>Date: </b>#month#<br><b>Всего звонков: </b>#sales#"},xAxis:{template:""},yAxis:{start:0,step:10},ready:function(){webix.extend(this,webix.ProgressBar)}}]},{view:"resizer"},{id:"chart_served_calls_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Обслуженные звонки</center>"}],height:30},{id:"chart_served_calls",view:"chart",type:"bar",gradient:"rising",xAxis:{template:""},yAxis:{start:0,step:10},legend:{values:[{text:"Трансфер звонков",color:"#66CCFF"},{text:"Завершенные агентом",color:"#FFCC33"},{text:"Завершенные клиентом",color:"#FF3333"}],valign:"middle",align:"right",width:250,layout:"y"},series:[{value:"#sales#",color:"#66CCFF",tooltip:{template:"<b>Date: </b>#year#<br><b>Трансфер звонков: </b>#sales#"}},{value:"#sales2#",color:"#FFCC33",tooltip:{template:"<b>Date: </b>#year#<br><b>Завершенные агентом: </b>#sales2#"}},{value:"#sales3#",color:"#FF3333",tooltip:{template:"<b>Date: </b>#year#<br><b>Завершенные клиентом: </b>#sales3#"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}]},{view:"resizer"},{cols:[{id:"chart_unserved_calls_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Необслуженные звонки</center>"}],height:30},{id:"chart_unserved_calls",view:"chart",type:"bar",gradient:"rising",xAxis:{template:""},yAxis:{start:0,step:10},legend:{values:[{text:"Прерванные клиентом",color:"#66CCFF"},{text:"Таймаут вызова агента",color:"#FF3333"},{text:"По нажатию кнопки клиентом",color:"#66CC33"},{text:"По причине пустой очереди",color:"#CC6633"}],valign:"middle",align:"right",width:250,layout:"y"},series:[{value:"#sales#",color:"#66CCFF",tooltip:{template:"<b>Date: </b>#year#<br><b>Прерванные клиентом: </b>#sales#"}},{value:"#sales2#",color:"#FF3333",tooltip:{template:"<b>Date: </b>#year#<br><b>Таймаут вызова агента: </b>#sales2#"}},{value:"#sales3#",color:"#66CC33",tooltip:{template:"<b>Date: </b>#year#<br><b>По нажатию кнопки клиентом: </b>#sales3#"}},{value:"#sales4#",color:"#CC6633",tooltip:{template:"<b>Date: </b>#year#<br><b>По причине пустой очереди: </b>#sales4#"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}]},{view:"resizer"},{id:"chart_talktime_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Время разговора (минимальное, среднее, максимальное), сек.</center>"}],height:30},{id:"chart_talktime",view:"chart",type:"bar",gradient:"rising",xAxis:{template:""},yAxis:{start:0,step:10},legend:{values:[{text:"Минимальное",color:"#66CCFF"},{text:"Среднее",color:"#FF3333"},{text:"Максимальное",color:"#66CC33"}],valign:"middle",align:"right",width:250,layout:"y"},series:[{value:"#sales#",color:"#66CCFF",tooltip:{template:"<b>Date: </b>#year#<br><b>Минимальное: </b>#sales#"}},{value:"#sales2#",color:"#FF3333",tooltip:{template:"<b>Date: </b>#year#<br><b>Среднее: </b>#sales2#"}},{value:"#sales3#",color:"#66CC33",tooltip:{template:"<b>Date: </b>#year#<br><b>Максимальное: </b>#sales3#"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}]},{view:"resizer"},{cols:[{id:"chart_holdtime_l",rows:[{view:"toolbar",elements:[{view:"label",label:"<center>Время ожидания (минимальное, среднее, максимальное), сек.</center>"}],height:30},{id:"chart_holdtime",view:"chart",type:"bar",gradient:"rising",xAxis:{template:""},yAxis:{start:0,step:10},legend:{values:[{text:"Минимальное",color:"#66CCFF"},{text:"Среднее",color:"#FF3333"},{text:"Максимальное",color:"#66CC33"}],valign:"middle",align:"right",width:250,layout:"y"},series:[{value:"#sales#",color:"#66CCFF",tooltip:{template:"<b>Date: </b>#year#<br><b>Минимальное: </b>#sales#"}},{value:"#sales2#",color:"#FF3333",tooltip:{template:"<b>Date: </b>#year#<br><b>Среднее: </b>#sales2#"}},{value:"#sales3#",color:"#66CC33",tooltip:{template:"<b>Date: </b>#year#<br><b>Максимальное: </b>#sales3#"}}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}]}]}}]}}loadReport(e){$$("interval_reports_table").enable(),$$("chart_total_calls").enable(),$$("chart_served_calls").enable(),$$("chart_unserved_calls").enable(),$$("chart_talktime").enable(),$$("chart_holdtime").enable(),$$("interval_reports_table").getFilter("calldate")&&($$("interval_reports_table").getFilter("calldate").value="",$$("interval_reports_table").getFilter("calls_total").value="",$$("interval_reports_table").getFilter("calls_served").value="",$$("interval_reports_table").getFilter("calls_unserved").value="",$$("interval_reports_table").getFilter("sum_talktime").value="",$$("interval_reports_table").getFilter("sum_holdtime").value="");var t=webix.guiutils.getDateRange("reportDateRange"),i="?filter[t1]="+t.start+"&filter[t2]="+t.end;$$("srcFilters").getValue()&&(i+="&filter[src]="+$$("srcFilters").getValue()),$$("queueFilters").getValue()&&(i+="&filter[queue]="+$$("queueFilters").getValue()),$$("groupByUUID").getValue()&&(i+="&filter[groupByUuid]="+$$("groupByUUID").getValue()),$$("filter_interval_reports").getValue()&&(i+="&filter[filter]="+$$("filter_interval_reports").getValue()),$$("interval_interval_reports").getValue()&&(i+="&filter[type]="+$$("interval_interval_reports").getValue()),$$("interval_reports_table").clearAll(),$$("interval_reports_table").load("/legacy/interval_reports_day"+i),1==$$("filter_interval_reports").getValue()?($$("chart_total_calls_l").show(),$$("chart_served_calls_l").show(),$$("chart_unserved_calls_l").show(),$$("chart_talktime_l").show(),$$("chart_holdtime_l").show()):2==$$("filter_interval_reports").getValue()?($$("chart_total_calls_l").hide(),$$("chart_served_calls_l").show(),$$("chart_unserved_calls_l").hide(),$$("chart_talktime_l").show(),$$("chart_holdtime_l").show()):3==$$("filter_interval_reports").getValue()?($$("chart_total_calls_l").hide(),$$("chart_served_calls_l").hide(),$$("chart_unserved_calls_l").show(),$$("chart_talktime_l").hide(),$$("chart_holdtime_l").show()):4==$$("filter_interval_reports").getValue()&&($$("chart_total_calls_l").hide(),$$("chart_served_calls_l").hide(),$$("chart_unserved_calls_l").hide(),$$("chart_talktime_l").hide(),$$("chart_holdtime_l").hide()),$$("chart_total_calls").clearAll(),$$("chart_total_calls").load("/legacy/interval_reports_day_chart1"+i),$$("chart_served_calls").clearAll(),$$("chart_served_calls").load("/legacy/interval_reports_day_chart2"+i),$$("chart_unserved_calls").clearAll(),$$("chart_unserved_calls").load("/legacy/interval_reports_day_chart3"+i),$$("chart_talktime").clearAll(),$$("chart_talktime").load("/legacy/interval_reports_day_chart4"+i),$$("chart_holdtime").clearAll(),$$("chart_holdtime").load("/legacy/interval_reports_day_chart5"+i,(()=>{e&&e()}))}getToolBar(){let e=this;return{id:e.toolBarId,hidden:!0,css:"top-menu-right-item",cols:[{id:"search_interval_reports",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",click:function(){e.loadReport()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){switch($$("filter_interval_reports").getValue()){case 1:default:e.filter_interval_reports_text="Входящие - все";break;case 2:e.filter_interval_reports_text="Входящие - обслуженные";break;case 3:e.filter_interval_reports_text="Входящие - необслуженные";break;case 4:e.filter_interval_reports_text="Исходящие"}switch($$("interval_interval_reports")){case 1:e.interval_interval_reports_text="По дням";break;case 2:e.interval_interval_reports_text="По дням недели";break;case 3:e.interval_interval_reports_text="По часам";break;case 4:e.interval_interval_reports_text="По месяцам"}webix.toExcel($$("interval_reports_table"),{filterHTML:!0,filename:"Входящие - "+e.interval_interval_reports_text+" - "+e.filter_interval_reports_text})}}]}}getToolTestBar(){return{type:"space",id:this.filterId,name:this.filterId,margin:0,padding:0,rows:[{id:"filter_interval_reports",view:"richselect",labelPosition:"top",label:"Тип звонков",labelWidth:100,options:[{id:1,value:"Входящие - все"},{id:2,value:"Входящие - обслуженные"},{id:3,value:"Входящие - необслуженные"},{id:4,value:"Исходящие"}]},{id:"interval_interval_reports",view:"richselect",labelPosition:"top",label:"Тип звонков",labelWidth:100,options:[{id:1,value:"По дням"},{id:2,value:"По дням недели"},{id:3,value:"По часам"},{id:4,value:"По месяцам"}]}]}}resetFilters(){$$("interval_interval_reports").setValue(""),$$("filter_interval_reports").setValue(""),$$("srcFilters").setValue(""),$$("queueFilters").setValue(""),$$("groupByUUID").setValue("")}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").show()}loadData(){this.setToolBar(),webix.AppFilter.show(),$$("defaultsForTraffic").show(),$$("groupByUUID").show(),$$("dstFilters").hide(),webix.AppFilter.setBody(this.id,this.getToolTestBar()),webix.AppFilter.setSubmit((()=>{this.loadReport()})),webix.AppFilter.setReset((()=>{this.resetFilters()})),this.loaded||(webix.extend($$("chart_total_calls"),webix.ProgressBar),webix.extend($$("interval_reports_table"),webix.ProgressBar),webix.extend($$("chart_served_calls"),webix.ProgressBar),webix.extend($$("chart_unserved_calls"),webix.ProgressBar),webix.extend($$("chart_talktime"),webix.ProgressBar),webix.extend($$("chart_holdtime"),webix.ProgressBar),webix.AppFilter.submit(),this.loaded=1)}}},252:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>a});var o=i(7422),s=i.n(o);class a{constructor(){this.loaded=0,this.id="journal",this.table="journal_table",this.toolBarId="journal_toolbar",webix.Manager.setComponent(this.id,this)}roleAllowed(){return["phc.reports","erpico.admin"]}getGrid(){return{id:this.table,view:"datatable",select:!0,columns:[{id:"id",hidden:!0},{id:"time",header:[{text:"Дата"},{content:"serverDateRangeFilter"}],fillspace:1,format:webix.Date.dateToStr("%d.%m.%Y в %H:%i")},{id:"admin_name",header:[{text:"Пользователь"},{content:"serverFilter"}],fillspace:1},{id:"action",header:[{text:"Действие"},{content:"serverMultiSelectFilter",suggest:{view:"select_suggest",fitMaster:!1,width:320,body:{yCount:10}}}],fillspace:1,template:e=>e.action_name},{id:"info",header:"Информация о событии",fillspace:1,template:e=>{if(!e.jdata)return"";return Object.keys(e.jdata).filter((e=>!["changes","data"].includes(e))).map((t=>{switch(t){case"user":return"Пользователь: "+e.jdata[t];case"phone":return"Телефон: "+e.jdata[t];case"queue":return"Очередь: "+e.jdata[t];case"channel":return"Канал: "+e.jdata[t]}})).join(", ")}}],clipboard:"selection",scrollAlignY:!0,scrollX:!0,tooltip:!0,export:!0,on:{onItemDblClick:()=>{s().show($$(this.table).getSelectedItem())}}}}getView(){return{id:this.id,hidden:!0,type:"clean",rows:[this.getGrid()]}}getToolBar(){return{id:this.toolBarId,css:"top-menu-right-item",hidden:!0,cols:[{id:"search_outgoing_report",view:"button",type:"icon",icon:"fa fa-sync",width:56,click:function(){webix.guiutils.loadJournalTable()}}]}}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show()}loadTable(){webix.guiutils.loadTable(this.id,"/journal/list")}loadData(e){webix.guiutils.loadTable(this.table,"/journal/list",e),webix.guiutils.loadFilterOptions(this.table,"action","/journal/events"),this.setToolBar(),webix.AppFilter.hide(),this.loaded||(webix.AppFilter.submit(),this.loaded=1)}}},8733:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.toolBarId="lost_calls_toolbar",this.filterId="lost_calls_filter",this.id="lost_calls",webix.Manager.setComponent("lost_calls",this)}roleAllowed(){return["phc.reports","erpico.admin"]}getGreed(){return{id:"lost_calls_table",view:"datatable",resizeColumn:!0,resizeRow:!0,scrollY:!1,navigation:!0,multiselect:!0,css:"my_style",columns:[{id:"title_unserved_calls",header:[{text:"<b> <center>"+translate("Report for period")+"</center> </b>",colspan:5,height:25},{text:"",rowspan:2,height:25},{text:"",height:25}],fillspace:!0},{id:"client_callback",fillspace:!0,header:[{text:""},{text:translate("Client called back himself"),rowspan:2},{text:""}]},{id:"manager_callback",fillspace:!0,header:[{text:""},{text:translate("Manager called back to client"),colspan:2},{text:translate("Total")}]},{id:"speed_callback",fillspace:!0,header:[{text:""},{text:""},{text:translate("Average speed of callback, h.")}]},{id:"call_was_lost",fillspace:!0,header:[{text:""},{text:translate("Lost call"),rowspan:2},{text:""}]}],on:{onAfterRender:function(){webix.extend(this,webix.ProgressBar)}},ready:function(){webix.extend(this,webix.ProgressBar)}}}getList(){return{id:"lost_calls_list",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,footer:!0,hover:"myhover",navigation:!0,multiselect:!0,css:"my_style",columns:[{header:[{text:"<b>"+translate("List of lost calls during period")+"</b>",height:25},{content:"textFilter",height:30}],sort:"string",fillspace:!0,id:"number",footer:{text:"<center><b>"+translate("Total:")+"</b></center>",height:30},template:function(e){return'<a href="tel:'+e.number+'">'+e.number+"</a>"}},{id:"date",header:["<b>"+translate("Date and time of last call during period")+"</b>",{content:"textFilter"}],sort:"string",fillspace:!0,footer:{content:"avgColumn"},format:webix.Date.dateToStr("%d.%m.%Y в %H:%i:%s")},{id:"queue",header:["<b>Очередь</b>",{content:"textFilter"}],sort:"string",fillspace:!0},{id:"agent",header:["<b>Оператор</b>",{content:"textFilter"}],sort:"string",fillspace:!0}],on:{onAfterRender:function(){webix.extend(this,webix.ProgressBar)}},ready:function(){webix.extend(this,webix.ProgressBar)}}}getView(){return{id:"lost_calls",hidden:!0,type:"clean",rows:[this.getGreed(),{view:"resizer"},this.getList()]}}loadReport(e){webix.extend($$("lost_calls_list"),webix.ProgressBar),webix.extend($$("lost_calls_table"),webix.ProgressBar),$$("lost_calls_table").enable(),$$("lost_calls_list").enable();let t=webix.guiutils.getDateRange("reportDateRange"),i=$$("queueReportsMultiSelect").getValue(),o="filter[t1]="+t.start+"&filter[t2]="+t.end+"&filter[queues]="+i;console.log(i),$$("lost_calls_list").showProgress(),$$("lost_calls_table").showProgress(),webix.ajax().get("legacy/lost_calls_total",o,{error:function(e,t,i){$$("lost_calls_list").hideProgress(),$$("lost_calls_table").hideProgress(),webix.message({type:"error",text:"Произошла ошибка при получении данных."})},success:function(t,i,o){var s=i.json();$$("lost_calls_list").clearAll(),s.data.lost_cals&&$$("lost_calls_list").parse(s.data.lost_cals),$$("lost_calls_table").clearAll(),s.data&&$$("lost_calls_table").parse(s.data),$$("lost_calls_list").hideProgress(),$$("lost_calls_table").hideProgress(),e&&e()}})}getToolBar(){let e=this;return{id:"lost_calls_toolbar",css:"top-menu-right-item",hidden:!0,cols:[{id:"search_lost_calls",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",click:function(){e.loadReport()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("lost_calls_list"),{filterHTML:!0,filename:"Lost"})}}]}}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").show()}loadData(){this.setToolBar(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),$$("defaultsForLostCalls").show(),webix.AppFilter.setSubmit((()=>{this.loadReport()})),webix.AppFilter.setReset((()=>{})),this.loaded||(webix.AppFilter.submit(),this.loaded=1)}}},8821:(e,t,i)=>{"use strict";i.r(t),i.d(t,{RemoteConfigPhoneAddresses:()=>o});class o{constructor(){this.id="remoteConfigPhoneAddressesWnd",this.table="remoteConfigPhoneAddresses",this.cb=null,this.type=null}show(e="main",t="",i=null){this.cb=i,this.type=e;let o={view:"window",id:this.id,position:"center",modal:!0,width:800,height:600,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Список адресов",align:"left"},{view:"icon",icon:"wxi-close",click:()=>{webix.$$(this.id).close()}}]},body:webix.copy(this.btr_window()),on:{onShow:()=>{if(t){const e=t.split(",").map((e=>({ip_address:e})));$$(this.table).parse(e)}}}};webix.ui(o).show()}btr_window(){return{width:400,view:"form",minHeight:500,elements:[{id:this.table,view:"datatable",resizeColumn:!0,resizeRow:!1,select:!0,editable:!0,multiselect:!0,tooltip:!0,minWidth:400,onContext:{webix_view:function(e,t){this.locate(e.target||e.srcElement)||($$("cmenutable").setContext({obj:webix.$$(e)}),$$("cmenutable").show(e),webix.html.preventEvent(e),$$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"new",value:"Добавить"}]),$$("remoteConfigPhoneAddresses").unselectAll())}},columns:[{editor:"text",header:"IP-адрес",id:"ip_address",width:366}],on:{onAfterRender(){$$("cmenutable")||webix.ui({view:"contextmenu",width:180,id:"cmenutable",data:[{id:"new",value:"Добавить"}],on:{onMenuItemClick:e=>{if("new"===e)$$("remoteConfigPhoneAddresses").add({});else if("delete"===e){const e=$$("remoteConfigPhoneAddresses").getSelectedId();e&&$$("remoteConfigPhoneAddresses").remove(e)}}}}),$$("cmenutable").attachTo($$("remoteConfigPhoneAddresses"))},onBeforeContextMenu:function(e){this.getItem(e)?(this.select(e),$$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"new",value:"Добавить"},{id:"delete",value:"Удалить"}])):($$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"new",value:"Добавить"}]))}}},{cols:[{},{view:"button",label:"Сохранить",width:120,click:()=>{let e=$$(this.table).serialize();e=e.map((e=>e.ip_address)),e=e.join(",");let t={settings:[{handle:"remote.config.phone.addresses",val:e}]};"main"===this.type?webix.ajax().post("/settings/default/save",t).then((t=>{(t=t.json()).result?(webix.message("Информация сохранена."),$$("setup").enable(),$$(this.id).close(),this.cb&&this.cb(e)):webix.message({type:"error",text:t.message}),$$("setup").enable()})):(this.cb&&this.cb(e),$$(this.id).close())}},{view:"button",label:"Отмена",align:"center",width:120,click:()=>{webix.$$(this.id).close()}},{}]}]}}showWindow(){this.getRoot().show()}}},3420:(e,t,i)=>{"use strict";i.r(t),i.d(t,{SpecificPhonesModals:()=>o});class o{constructor(){this.id="specificPhonesWnd",this.table="specificPhones"}show(){let e={view:"window",id:this.id,position:"center",modal:!0,width:800,height:600,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Определенные номера",align:"left"},{view:"icon",icon:"wxi-close",click:()=>{webix.$$(this.id).close()}}]},body:webix.copy(this.btr_window()),on:{onShow:()=>{$$(this.id).disable(),webix.extend($$(this.id),webix.ProgressBar),webix.extend($$(this.id),webix.ProgressBar).showProgress(),webix.ajax().get("/specific_phones",(e=>{e=JSON.parse(e),$$(this.table).parse(e),$$(this.id).enable(),webix.extend($$(this.id),webix.ProgressBar).hideProgress()}))}}};webix.ui(e).show()}btr_window(){return{width:400,view:"form",id:"specific-phones-form",minHeight:500,elements:[{id:this.table,view:"datatable",resizeColumn:!0,resizeRow:!1,select:!0,editable:!0,multiselect:!0,tooltip:!0,minWidth:400,onContext:{webix_view:function(e,t){this.locate(e.target||e.srcElement)||($$("cmenutable").setContext({obj:webix.$$(e)}),$$("cmenutable").show(e),webix.html.preventEvent(e),$$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"new",value:"Добавить"}]),$$("specificPhones").unselectAll())}},columns:[{editor:"text",header:"Телефон",id:"number",width:366}],on:{onBeforeContextMenu:function(e){this.getItem(e)?(this.select(e),$$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"new",value:"Добавить"},{id:"delete",value:"Удалить"}])):($$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"new",value:"Добавить"}]))}},ready:function(){$$("cmenutable")||webix.ui({view:"contextmenu",width:180,id:"cmenutable",data:[{id:"new",value:"Добавить"}],on:{onMenuItemClick:e=>{switch(e){case"new":$$("specificPhones").add({});break;case"delete":(e=$$("specificPhones").getSelectedId())&&$$("specificPhones").remove(e)}}}}),$$("cmenutable").attachTo(this)}},{cols:[{},{view:"button",label:"Сохранить",width:120,click:()=>{const e=$$(this.table).serialize();webix.ajax().post("/specific_phones/save",{data:e}).then((e=>{var t=e.json();t.result?(webix.message("Информация сохранена."),$$("setup").enable(),$$(this.id).close()):webix.message({type:"error",text:t.message}),$$("setup").enable()}))}},{view:"button",label:"Отмена",align:"center",width:120,click:()=>{webix.$$(this.id).close()}},{}]}]}}showWindow(){this.getRoot().show()}}},6358:(e,t,i)=>{"use strict";i.r(t),i.d(t,{CallsSyncModals:()=>o});class o{show(){let e={view:"window",id:"bitrixCallSyncWnd",position:"center",modal:!0,width:800,height:600,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Синхронизация звонков с Bitrix24",align:"left"},{view:"icon",icon:"wxi-close",click:function(){console.log(webix.lastXHR),webix.lastXHR.abort(),$$("bitrixCallSyncWnd").close()}}]},body:webix.copy(this.btr_window()),on:{onShow:function(){webix.extend($$("calls_success"),webix.ProgressBar),webix.extend($$("calls_errors"),webix.ProgressBar),$$("calls_success").disable(),$$("calls_errors").disable(),$$("calls_success").showProgress(),$$("calls_errors").showProgress(),webix.ajax().get("bitrix24/call/sync",(e=>{e=JSON.parse(e);const t=[],i=[];e.synchronizedCalls.map((e=>{t.push({result:JSON.stringify(e.result)})})),e.exception.map((e=>{i.push({result:JSON.stringify(e.result)})})),$$("calls_success").parse(t),$$("calls_errors").parse(i),$$("calls_success").hideProgress(),$$("calls_errors").hideProgress(),$$("calls_success").enable(),$$("calls_errors").enable(),webix.message({type:"success",text:0===e.synchronizedCalls.length&&0===e.exception.length?"Звонки для синхронизации отсутствуют":e.exception.length>0?"Синхронизация звонков произошла с ошибками":"Синхронизация звонков произошла успешно"})}))}}};webix.attachEvent("onBeforeAjax",(function(e,t,i,o){webix.lastXHR=o})),webix.ui(e).show()}btr_window(){return{width:600,view:"form",id:"bitrix-calls-sync-form",minHeight:500,elements:[{view:"tabview",id:"calls_tabs",cells:[{header:"Успешные",body:{rows:[{elementsConfig:{labelWidth:100},width:600,view:"datatable",id:"calls_success",select:!0,tooltip:!0,resizeColumn:!0,scroll:!0,columns:[{id:"result",header:"Результат",minWidth:566}]},{view:"button",css:"export_btn",label:"Экспортировать успешные звонки",click:()=>{webix.toExcel($$("calls_success"),{filename:"Успешные"})}}]}},{header:"Ошибки",body:{rows:[{elementsConfig:{labelWidth:100},width:600,view:"datatable",id:"calls_errors",select:!0,tooltip:!0,scroll:!0,columns:[{id:"result",header:"Результат",minWidth:566}]},{view:"button",css:"export_btn",label:"Экспортировать звонки с ошибками",click:()=>{webix.toExcel($$("calls_errors"),{filename:"Ошибки"})}}]}}]}]}}showWindow(){this.getRoot().show()}}},1647:(e,t,i)=>{"use strict";i.r(t),i.d(t,{DialingRulesModals:()=>o});class o{constructor(){this.windowName="dialingRulesWnd",this.tableName="dialing-rules-tbl"}show(){let e={view:"window",id:this.windowName,position:"center",modal:!0,width:583,height:600,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Правила набора",align:"left"},{view:"icon",icon:"wxi-close",click:()=>{webix.$$(this.windowName).close()}}]},body:webix.copy(this.btr_window()),on:{onShow:()=>{webix.extend($$(this.tableName),webix.ProgressBar).showProgress(),$$(this.tableName).disable(),webix.ajax().get("settings/dialingRules",(e=>{e=JSON.parse(e),$$(this.tableName).parse(e),$$(this.tableName).hideProgress(),$$(this.tableName).enable()}))}}};webix.ui(e).show()}btr_window(){return{view:"form",id:"dialing-rules-form",minHeight:500,elements:[{id:this.tableName,view:"datatable",resizeColumn:!0,resizeRow:!1,select:!0,editable:!0,multiselect:!0,tooltip:!0,minWidth:400,onContext:{webix_view:function(e){this.locate(e.target)||($$("cmenutable").setContext({obj:webix.$$(e)}),$$("cmenutable").show(e),webix.html.preventEvent(e),$$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"add",value:"Добавить"}]),$$("dialing-rules-tbl").unselectAll())}},columns:[{header:"Правило маршрутизации",width:183,id:"dialing_rule",editor:"combo",options:"/config/extensions"},{editor:"combo",header:"Канал связи",id:"channel",width:200,options:"/channels/list"},{header:"CallerID",width:166,id:"caller_id",editor:"text"}],on:{onBeforeContextMenu:function(e){this.getItem(e)?(this.select(e),$$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"add",value:"Добавить"},{id:"remove",value:"Удалить"}])):($$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"add",value:"Добавить"}]))}},ready:function(){webix.ui({view:"contextmenu",width:180,id:"cmenutable",data:[{id:"add",value:"Добавить",icon:"wxi-pencil"}],on:{onMenuItemClick:e=>{switch(e){case"add":$$("dialing-rules-tbl").add({});break;case"remove":let e=$$("dialing-rules-tbl").getSelectedItem();e&&(e=e.id),$$("dialing-rules-tbl").remove(e)}}}}).attachTo(this)}},{cols:[{},{view:"button",label:"Сохранить",width:120,click:()=>{let e=[],t=$$(this.tableName).serialize();for(let i=0;i<t.length;i++){if(isNaN(t[i].caller_id)){webix.message({text:"ID звонящего должен состоять только из цифр",type:"error"}),e=[];break}e.push({dialing_rule:t[i].dialing_rule,caller_id:t[i].caller_id,channel:t[i].channel})}e.length>0&&webix.ajax().post("/settings/dialingRules/save",{dialingRules:e}).then((e=>{(e=e.json()).result?(webix.message("Информация сохранена."),$$("setup").enable(),webix.$$(this.windowName).close()):(e.message.includes("Duplicate")&&(e.message="Правила должны быть уникальными!"),webix.message({type:"error",text:e.message})),$$("setup").enable()}))}},{view:"button",label:"Отмена",align:"center",width:120,click:()=>{webix.$$(this.windowName).close()}},{}]}]}}showWindow(){this.getRoot().show()}}},7523:(e,t,i)=>{"use strict";i.r(t),i.d(t,{GetEditModals:()=>o});class o{show(){let e={view:"window",id:"setup_wnd",position:"center",modal:!0,width:600,maxHeight:800,resize:!0,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Дополнительные настройки",align:"left"},{view:"icon",icon:"wxi-close",click:()=>{webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:e=>{e&&webix.$$("setup_wnd").close()}})}}]},body:webix.copy(this.edit_window()),on:{onShow:function(){$$("setup-cfg-settings").load("/settings/default")}}};webix.ui(e).show()}edit_window(){return{width:800,view:"form",id:"settings-form",minHeight:500,padding:17,scroll:!0,elements:[{elementsConfig:{labelWidth:100},width:600,view:"datatable",id:"setup-cfg-settings",select:!0,tooltip:!0,resizeColumn:!0,scroll:!0,editable:!0,columns:[{id:"handle",header:"",fillspace:2,minWidth:50},{id:"val",header:"",fillspace:2,minWidth:150,editor:"text"},{id:"changed",hidden:!0}],ready:function(){this.getChangedSettings=()=>{const e=this.serialize();let t=[];return e.forEach((e=>{parseInt(e.changed)&&t.push(e)})),t},this.save=()=>{const e=$$("setup-cfg-settings");e.disable();const t=e.getChangedSettings();if(!t.length)return webix.message({type:"error",text:"Изменений не зафиксированно"}),void e.enable();webix.ajax().post("/settings/default/save",{settings:t}).then((t=>{e.enable(),(t=t.json()).result?(webix.message({type:"success",text:"Сохранение прoшло успешно"}),e.enable(),webix.$$("setup_wnd").close()):(webix.message({type:"error",text:"Произошла ошибка сохранения"}),e.enable())})).catch((function(t){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),e.enable(),console.log(t)}))}},on:{onBeforeEditStop(e,t){return this.edited=0,e.value!=e.old&&(this.edited=1),!0},onEditorChange:function(e,t){(this.getItem(e.row)[e.column]!=t||this.edited)&&(this.getItem(e.row).changed=1,this.refresh(e.row))}}},{margin:10,padding:17,cols:[{},{view:"button",label:"Сохранить",type:"form",align:"center",width:120,click:function(){webix.confirm({text:"Все измененные данные будут сохранены. <br> Продолжить?",callback:e=>{e&&$$("setup-cfg-settings").save()}})}},{view:"button",label:"Закрыть",align:"center",width:120,click:()=>{webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:e=>{e&&webix.$$("setup_wnd").close()}})}}]}]}}}},3879:(e,t,i)=>{"use strict";i.r(t),i.d(t,{LinesUsersModals:()=>o});class o{show(){let e={view:"window",id:"linesUsersWnd",position:"center",modal:!0,width:800,height:600,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Сотрудники по умолчанию",align:"left"},{view:"icon",icon:"wxi-close",click:function(){webix.$$("linesUsersWnd").close()}}]},body:webix.copy(this.btr_window()),on:{onShow:function(){$$("linesUsersWnd").disable(),webix.extend($$("linesUsersWnd"),webix.ProgressBar),webix.extend($$("linesUsersWnd"),webix.ProgressBar).showProgress(),webix.ajax().get("settings/default",(e=>{e=(e=JSON.parse(e)).filter((e=>!isNaN(e.handle))),$$("operators_tbl").parse(e),this.data=e,$$("linesUsersWnd").enable(),webix.extend($$("linesUsersWnd"),webix.ProgressBar).hideProgress()}))}}};webix.ui(e).show()}btr_window(){return{width:400,view:"form",id:"lines-users-form",minHeight:500,elements:[{id:"operators_tbl",view:"datatable",resizeColumn:!0,resizeRow:!1,select:!0,editable:!0,multiselect:!0,tooltip:!0,minWidth:400,onContext:{webix_view:function(e,t){this.locate(e.target||e.srcElement)||($$("cmenutable").setContext({obj:webix.$$(e)}),$$("cmenutable").show(e),webix.html.preventEvent(e),$$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"new",value:"Добавить"}]),$$("operators_tbl").unselectAll())}},data:[],columns:[{header:"Номер линии",width:183,id:"handle",editor:"text"},{editor:"combo",header:"Сотрудник",id:"val",width:183,options:"/groups/users/short",suggest:{url:"/groups/users/short",body:{template:function(e){return e.fullname+" ("+e.value+")"}},filter:function(e,t){return t=t.toLowerCase(),-1!==e.value.toLowerCase().indexOf(t)||-1!==e.fullname.toLowerCase().indexOf(t)},width:430,fitMaster:!1,yCount:8,template:function(e){return"string"==typeof e.value&&"0"!=e.value||(e.value=""),e.value}}}],on:{onBeforeContextMenu:function(e){this.getItem(e)?(this.select(e),$$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"new",value:"Добавить"},{id:"delete",value:"Удалить"}])):($$("cmenutable").clearAll(),$$("cmenutable").parse([{id:"new",value:"Добавить"}]))}},ready:function(){$$("cmenutable")||webix.ui({view:"contextmenu",width:180,id:"cmenutable",data:[{id:"new",value:"Добавить"}],on:{onMenuItemClick:function(e){switch(e){case"new":$$("operators_tbl").add({});break;case"delete":(e=$$("operators_tbl").getSelectedId())&&$$("operators_tbl").remove(e)}}}}),$$("cmenutable").attachTo(this)}},{cols:[{},{view:"button",label:"Сохранить",width:120,click:function(){let e=[];$$("operators_tbl").serialize().forEach((function(t){isNaN(t.handle)?(webix.message({text:"Линии должныть состоять только из цифр",type:"error"}),e=[]):e.push({handle:`${t.handle}`,val:`${t.val}`})})),e.length>0&&webix.ajax().post("/settings/default/save",{settings:e,queues:1}).then((function(e){var t=e.json();1==t.result?(webix.message("Информация сохранена."),$$("setup").enable(),webix.$$("linesUsersWnd").close()):webix.message({type:"error",text:t.message}),$$("setup").enable()}))}},{view:"button",label:"Отмена",align:"center",width:120,click:function(){webix.$$("linesUsersWnd").close()}},{}]}]}}showWindow(){this.getRoot().show()}}},7880:(e,t,i)=>{"use strict";i.r(t),i.d(t,{UsersSyncModals:()=>o});class o{show(){let e={view:"window",id:"bitrixSyncWnd",position:"center",modal:!0,width:800,height:600,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Синхронизация с Bitrix24",align:"left"},{view:"icon",icon:"wxi-close",click:function(){webix.$$("bitrixSyncWnd").close()}}]},body:webix.copy(this.btr_window()),on:{onShow:function(){webix.extend($$("bitrix-sync-table"),webix.ProgressBar),$$("bitrix-sync-table").disable(),$$("bitrix-sync-table").showProgress(),webix.ajax().get("bitrix24/sync",(e=>{if(1==(e=JSON.parse(e)).res){let t=e.users;t.map((e=>{e.result=e.result.message,e.fullname=e.last_name?`${e.last_name} ${e.name}`:`${e.name}`})),$$("bitrix-sync-table").parse(t),$$("bitrix-sync-table").hideProgress(),$$("bitrix-sync-table").enable()}else webix.message({type:"error",text:"Произошла ошибка синхронизации!<br>"+e.message})}))}}};webix.ui(e).show()}btr_window(){return{width:600,view:"form",id:"bitrix-sync-form",minHeight:500,elements:[{width:600,view:"datatable",margin:0,id:"bitrix-sync-table",select:!0,tooltip:!0,editable:!0,columns:[{id:"phone",header:[{text:"Номер"}],width:75},{id:"fullname",header:[{text:"Имя"}],width:200},{id:"result",header:[{text:"Результат"}],width:300}]}]}}showWindow(){this.getRoot().show()}}},2482:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.toolBarId="month_traffic_toolbar",this.filterId="month_traffic_filter",this.id="month_traffic",this.additionOptionsWindowId="win_option_month_traffic",webix.Manager.setComponent("month_traffic",this)}roleAllowed(){return["phc.reports","erpico.admin"]}getView(){return{id:"month_traffic",hidden:!0,type:"clean",rows:[{id:"month_traffic_layout",rows:[{id:"month_traffic_table",view:"datatable",resizeColumn:!0,resizeRow:!0,select:!0,footer:!0,navigation:!0,hover:"myhover",multiselect:!0,css:"my_style",columns:[{id:"10",header:[{text:"Месяц",height:25},{content:"selectFilter"}],sort:"string",width:180,template:"#month#",footer:{text:"Всего:",height:30}},{id:"1",header:["Длительность",{content:"textFilter"}],sort:"int",template:"#time#",width:130,footer:{content:"summTimeColumn"}},{id:"2",header:["Звонки",{content:"textFilter"}],sort:"int",width:155,template:function(e){return e&&e.share?e.share:e[1]},footer:{content:"summColumn"}},{id:"3",header:["ACD, мин",{content:"textFilter"}],sort:"string",width:155,footer:{content:"avaregeTimeColumn"}},{id:"4",header:["ASR, %",{content:"textFilter"}],sort:"int",width:120,footer:{content:"avaregeColumn"}},{id:"5",header:["PDD, сек",{content:"textFilter"}],sort:"int",width:140,footer:{content:"avaregeColumn"}}],disabled:!0,ready:function(){webix.extend(this,webix.ProgressBar)}},{view:"resizer"},{id:"month_traffic_chart",view:"chart",type:"pie3D",value:"#sales#",color:"#color#",tooltip:{template:"#month#"},pieInnerText:"",shadow:0,disabled:!0,legend:{layout:"y",width:250,align:"right",valign:"middle",template:"<div style='color:#111;font-weight:bold;'>#month#</div>"},ready:function(){webix.extend(this,webix.ProgressBar)}}]}]}}loadReport(e){$$("month_traffic_table").enable(),$$("month_traffic_chart").enable();var t="";""!=$$("startDate_month_traffic").getValue()&&(t&&(t+="&"),t+="&filter[t1]="+$$("startDate_month_traffic").getValue()),""!=$$("finishDate_month_traffic").getValue()&&(t&&(t+="&"),t+="filter[t2]="+$$("finishDate_month_traffic").getValue()),""!=$$("srcFilters").getValue()&&(t&&(t+="&"),t+="filter[src]="+$$("srcFilters").getValue()),""!=$$("dstFilters").getValue()&&(t&&(t+="&"),t+="filter[dst]="+$$("dstFilters").getValue()),$$("month_traffic_table").clearAll(),webix.extend($$("month_traffic_table"),webix.ProgressBar),$$("month_traffic_table").showProgress(),$$("month_traffic_table").load("/legacy/month_traffic?"+t),$$("month_traffic_chart").clearAll(),$$("month_traffic_chart").load("/legacy/month_traffic_chart?"+t,(()=>{e&&e()})),$$("month_traffic_chart").refresh()}resetFilters(){$$("startDate_month_traffic").setValue(""),$$("finishDate_month_traffic").setValue(""),webix.AppFilter.resetDefaultTraffic()}getToolTestBar(){return{id:this.filterId,rows:[{id:"startDate_month_traffic",view:"richselect",label:"Период от",labelPosition:"top",labelWidth:100,options:"/legacy/month_traffic_period"},{id:"finishDate_month_traffic",view:"richselect",label:"Месяцев",labelPosition:"top",labelWidth:100,options:[{id:1,value:"-1 месяц"},{id:2,value:"-2 месяца"},{id:3,value:"-3 месяца"},{id:4,value:"-4 месяца"},{id:5,value:"-5 месяцев"},{id:6,value:"-6 месяцев"}]}]}}getToolBar(){let e=this;return{id:e.toolBarId,hidden:!0,css:"top-menu-right-item",cols:[{id:"search_month_traffic",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",click:function(){e.loadReport()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("month_traffic_table"),{filterHTML:!0,filename:"По месяцам"})}}]}}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").hide()}loadData(){this.setToolBar(),webix.AppFilter.show(),$$("defaultsForTraffic").show(),$$("queueFilters").hide(),$$("groupByUUID").hide(),webix.AppFilter.setBody(this.id,this.getToolTestBar()),webix.AppFilter.setSubmit((()=>{this.loadReport()})),webix.AppFilter.setReset((()=>{this.resetFilters()})),this.loaded||(webix.AppFilter.submit(),this.loaded=1)}}},6232:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.operators_work_report_toolbar="",this.toolBarId="operators_work_report_toolbar",this.filterId="operators_work_report_filter",this.id="operators_work_report",webix.Manager.setComponent("operators_work_report",this)}roleAllowed(){return["phc.reports","erpico.admin"]}getView(){return{id:"operators_work_report",hidden:!0,type:"clean",rows:[{id:"operators_work_table",view:"datatable",resizeColumn:!0,resizeRow:!0,footer:!0,select:!0,hover:"myhover",navigation:!0,multiselect:!0,css:"my_style",tooltip:!0,columns:[{id:"operator_name",header:[{text:"Имя оператора",height:25},{content:"textFilter"}],sort:"string",width:210,footer:{text:"Всего:",height:30}},{id:"time_ready",header:[{text:"Готов"},{content:"textFilter"}],sort:"string",width:200,footer:{content:"avgColumn"}},{id:"time_unready",header:[{text:"Не готов"},{content:"textFilter"}],sort:"string",width:160},{id:"time_post",header:[{text:"Постобработка"},{content:"textFilter"}],sort:"string",width:260},{id:"time_first",header:[{text:"Время первого входа"},{content:"textFilter"}],sort:"string",width:260,template:function(e){if(!e)return"";if(e.time_first){var t=e.time_first.split(" ");return t[0]&&t[1]?t[0]+" в "+t[1]:e.time_first}return""}},{id:"time_last",header:[{text:"Последнего выхода"},{content:"textFilter"}],sort:"string",width:260,template:function(e){if(!e)return"";if(e.time_last){var t=e.time_last.split(" ");return t[0]&&t[1]?t[0]+" в "+t[1]:e.time_last}return""}},{id:"include",header:[{text:"Включений в очереди"},{content:"textFilter"}],sort:"string",width:260},{id:"take_part",header:[{text:"Очереди, в которых принимал участие"},{content:"textFilter"}],sort:"string",width:450}],ready:function(){webix.extend(this,webix.ProgressBar)}},{view:"resizer"},{id:"operators_work_report_list",view:"treetable",resizeColumn:!0,resizeRow:!0,select:!0,hover:"myhover",navigation:!0,multiselect:!0,css:"my_style",tooltip:!0,scheme:{$change:function(e){"Начало смены"==e.type&&(e.$css="highlightB"),"Не готов"==e.type&&(e.$css="highlightY"),"Завершение смены"==e.type&&(e.$css="highlightR")}},columns:[{id:"type",header:[{text:"<b>Тип</b>",height:25},{content:"textFilter"}],sort:"string",width:300,template:"{common.treetable()} #type#"},{id:"calldate",header:["<b>Время</b>",{content:"textFilter"}],sort:"string",width:180,template:function(e){if(!e)return"";if(e.calldate){var t=e.calldate.split(" ");return t[0]&&t[1]?t[0]+" в "+t[1]:e.calldate}return""}},{id:"duration",header:["<b>Длительность</b>",{content:"textFilter"}],sort:"string",width:150},{id:"queue",header:["<b>Очереди</b>",{content:"textFilter"}],sort:"string",width:600}],ready:function(){webix.extend(this,webix.ProgressBar)}}]}}loadReport(e){var t=webix.guiutils.getDateRange("reportDateRange"),i="?filter[t1]="+t.start+"&filter[t2]="+t.end;$$("operators_work_table").clearAll(),$$("operators_work_report_list").clearAll(),webix.extend($$("operators_work_table"),webix.ProgressBar),webix.extend($$("operators_work_report_list"),webix.ProgressBar),$$("operators_work_table").showProgress(),$$("operators_work_report_list").showProgress(),$$("operators_work_table").load("/legacy/operators_work_report"+i,(()=>{$$("operators_work_report_list").load("legacy/operators_work_report_list"+i,(()=>{e&&e()}))}))}getToolBar(){let e=this;return{id:e.toolBarId,hidden:!0,css:"top-menu-right-item",cols:[{id:"search_operators_work_report",view:"button",type:"icon",icon:"wxi-search",width:200,label:"Показать отчет",click:function(){e.loadReport()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("operators_work_table"),{filterHTML:!0,filename:"Суммарно"}),webix.toExcel($$("operators_work_report_list"),{filterHTML:!0,filename:"Операторы"})}}]}}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").show()}loadData(){this.setToolBar(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),webix.AppFilter.setSubmit((()=>{this.loadReport()})),webix.AppFilter.setReset((()=>{})),this.loaded||(webix.AppFilter.submit(),this.loaded=1)}}},1293:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,this.toolBarId="phoneExcelButton",webix.Manager.setComponent("phone",this)}roleAllowed(){return["erpico.admin"]}getView(){return{id:"phone",hidden:!0,view:"treetable",resizeColumn:!0,resizeRow:!0,select:!0,hover:"myhover",navigation:!0,multiselect:!0,css:"my_style",columns:[{id:"group",header:[{text:"Группа",height:30},{content:"textFilter",height:35}],sort:"int",width:160,template:"{common.icon()} #group#"},{id:"number",header:[{text:"Номер",height:30},{content:"textFilter",height:35}],sort:"int",width:160},{id:"fio",header:[{text:"ФИО"},{content:"textFilter"}],sort:"int",width:200}]}}getToolBar(){return{css:"top-menu-right-item excel_btn_on_phone",view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",id:"phoneExcelButton",hidden:!1,click:function(){webix.toExcel($$("phone"),{filterHTML:!0,filename:"Телефоны"})}}}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").hide()}loadData(){this.setToolBar(),webix.AppFilter.hide(),this.loaded||$$("phone")&&($$("phone").load("/legacy/phones"),this.loaded=1)}}},3016:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(4471);class s{constructor(){this.loaded=0,this.toolBarId="phones_toolbar",this.PhonesWindow=new o.PhonesWindow,webix.Manager.setComponent("phones",this)}roleAllowed(){return["erpico.admin"]}getView(){let e=0;return{hidden:!0,id:"phones",view:"datatable",resizeColumn:!0,resizeRow:!0,scrollX:!0,scrollY:!0,navigation:!0,select:!0,css:"my_style",tooltip:!0,columns:[{id:"active",header:"",width:30,template:function(e){return 1==e.active?void 0!==e.s_ip&&e.s_ip.length?"<span class='greencircle'></span>":"<span class='yellowcircle'></span>":"<span class='graycircle'></span>"},footer:{content:"summTotal",colspan:2}},{id:"id",header:[{text:"№"},{content:"serverFilter"}],width:50,sort:"int"},{id:"phone",header:[{text:"Номер"},{content:"serverFilter"}],width:100,sort:"server"},{id:"model",header:[{text:"Модель"},{content:"serverFilter"}],width:150,options:"./assets/options/models.json"},{id:"mac",header:[{text:"MAC-адрес "},{content:"serverFilter"}],width:150},{id:"user_id",header:[{text:"ID пользователя"},{content:"serverFilter"}],width:150,options:"/groups/users/short"},{id:"login",header:[{text:"Логин"},{content:"serverFilter"}],width:150},{id:"rules",header:[{text:"Правила набора номера "},{content:"serverFilter"}],width:150,options:"/config/extensions"},{id:"default_phone",header:[{text:"Внешний номер по умолчанию"},{content:"serverFilter"}],width:150},{id:"s_ip",header:[{text:"IP адрес"},{content:"textFilter"}],width:150,template:function(e){return"string"==typeof e.s_ip&&e.s_ip.length?'<a href="http://'+e.s_ip+'/" target="_blank">'+e.s_ip+"</a>":""}},{id:"s_port",header:[{text:"Порт"},{content:"textFilter"}],width:150},{id:"s_status",header:[{text:"Статус"},{content:"textFilter"}],width:150}],on:{onItemDblClick:function(){let e=this.getSelectedItem();(new o.PhonesWindow).show(e)},onAfterSelect:function(){e=this.getSelectedId()},onAfterLoad:function(){},onAfterContextMenu:function(e){e.row&&$$("phones").select(e.row)},onBeforeLoad:function(){$$("phones").clearSelection()}},ready:function(){let e="cmenuphones";webix.ui({view:"contextmenu",width:180,id:e,data:[{id:"edit",value:"Изменить",icon:"wxi-pencil"},{id:"copy",value:"Копировать",icon:"fa fa-copy"},{id:"delete",value:"Удалить",icon:"wxi-trash"}],on:{onMenuItemClick:function(e){let t="/phones/list?filter[id]="+$$("phones").getSelectedItem().id,i=null;switch(e){case"edit":let e=$$("phones").getSelectedItem();(new o.PhonesWindow).show(e);break;case"copy":webix.ajax(t).then((function(e){i=e.json().data[0]})).then((()=>{i?(i.id=0,(new o.PhonesWindow).show(i)):webix.message({type:"error",text:"Выберите телефон для копирования"})}));break;case"delete":$$("phones").getSelectedId()?webix.guiutils.removeFromTable(parseInt($$("phones").getSelectedId()),"/phones/"+parseInt($$("phones").getSelectedId())+"/remove","phones","removePhone"):webix.message({type:"error",text:"Выберите телефон для удаления"})}}}}),$$(e).attachTo(this)}}}getToolBar(){let e=this;return{id:e.toolBarId,css:"top-menu-right-item",hidden:!0,cols:[{view:"button",type:"icon",icon:"wxi-plus",width:150,label:"Добавить",click:function(){e.PhonesWindow.show({})}},{view:"button",type:"icon",icon:"wxi-pencil",width:150,label:"Provisioning",css:"last-button-on-left-position",click:function(){if($$("phones").getSelectedId()){var e=$$("phones").getSelectedItem(),t={id:"window-phone-provisioning",view:"window",position:"center",move:!0,modal:!0,resize:!1,scroll:!0,minHeight:500,maxHeight:500,width:600,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Provisioning телефона",align:"left"},{view:"icon",icon:"wxi-close",click:function(){$$("window-phone-provisioning").close()}}]},body:{view:"form",id:"provisioning-form",elements:[{view:"text",label:"IP Адрес",name:"ip",required:!0},{view:"button",label:"Перезагрузить и настроить",click:()=>{var t=$$("provisioning-form").getValues();webix.ajax().post("/phones/provisioning/start",{ip:t.ip,mac:e.mac}).then((function(e){}))}}]}};webix.ui(t).show()}else webix.message({type:"error",text:"Выберите телефон для настройки"})}},{},{css:"disable_margin_btn_tbar",view:"button",type:"icon",icon:"fa fa-sync",width:56,click:function(){e.PhonesWindow.loadTable()}},{view:"button",type:"icon",icon:"fa fa-file-excel",width:200,label:"Выгрузить в Excel",click:function(){webix.toExcel($$("phones"),{filterHTML:!0,filename:"Телефоны"})}}]}}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show(),$$("reportDateRange").hide()}loadData(){this.setToolBar(),webix.AppFilter.hide(),webix.extend($$("phones"),webix.ProgressBar),this.loaded||$$("phones").load("/phones/list","json",(()=>{this.loaded=1}))}}},5663:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,webix.Manager.setComponent("phones_groups",this)}roleAllowed(){return["erpico.admin"]}getView(){let e=0;const t="phones_groups";return{hidden:!0,id:"phones_groups",view:"datatable",resizeColumn:!0,resizeRow:!0,scrollY:!0,navigation:!0,select:!0,css:"my_style",columns:[{id:"id",header:[{text:"№"},{content:"serverFilter"}],width:50},{id:"name",header:[{text:"Название"},{content:"serverFilter"}],fillspace:1},{id:"code",header:[{text:"Код"},{content:"serverFilter"}]},{id:"pattern",header:[{text:"Шаблон"},{content:"serverFilter"}],fillspace:1,options:"/config/sip"},{id:"rules",header:[{text:"Правила набора"},{content:"serverFilter"}],fillspace:1,options:"/config/extensions"},{id:"outgoing_phone",header:[{text:"Исходящий номер"},{content:"serverFilter"}],fillspace:1},{id:"phones_names",header:[{text:"Телефоны в группе"},{content:"serverMultiComboFilter"}],fillspace:1}],on:{onItemDblClick:function(){let e=this.getSelectedItem();phonesGroupsWindow.show(e)},onAfterSelect:function(){e=this.getSelectedId()},onAfterLoad:function(){e&&this.getItem(e)&&this.select(e)},onAfterContextMenu:function(e){e.row&&$$(t).select(e.row)}},ready:function(){let e="cmenuphonesgroups";webix.ui({view:"contextmenu",width:180,id:e,data:[{id:"edit",value:"Изменить",icon:"wxi-pencil"},{id:"copy",value:"Копировать",icon:"fa fa-copy"},{id:"delete",value:"Удалить",icon:"wxi-trash"}],on:{onMenuItemClick:function(e){let i="/phones/groups/list?filter[id]="+$$(t).getSelectedItem().id,o=null;switch(e){case"edit":$$(t).getSelectedId()?phonesGroupsWindow.show($$(t).getSelectedItem()):webix.message({type:"error",text:"Выберите группу телефонов для редактирования"});break;case"copy":webix.ajax(i).then((function(e){o=e.json().data[0]})).then((()=>{o?(o.id=0,phonesGroupsWindow.show(o)):webix.message({type:"error",text:"Выберите группу телефонов для копирования"})}));break;case"delete":$$(t).getSelectedId()?webix.guiutils.removeFromTable(parseInt($$(t).getSelectedId()),"/phones/groups/"+parseInt($$(t).getSelectedId())+"/remove",t,"removePhoneGroup"):webix.message({type:"error",text:"Выберите группу для удаления"})}}}}),$$(e).attachTo(this)}}}loadData(){webix.AppFilter.hide(),$$("phones_groups")&&(webix.extend($$("phones_groups"),webix.ProgressBar),this.loaded||$$("phones_groups").load("/phones/groups/list","json",(()=>{this.loaded=1}))),$$("phones_groups_toolbar").show()}}},9410:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,webix.Manager.setComponent("queues",this)}roleAllowed(){return["phc.admin","erpico.admin"]}getView(){let e=0;return{hidden:!0,id:"queues",view:"datatable",resizeColumn:!0,resizeRow:!0,scroll:!0,navigation:!0,select:!0,css:"my_style",columns:[{id:"active",header:"",width:30,template:function(e){return 1==e.active?"<span class='greencircle'></span>":"<span class='graycircle'></span>"},footer:{content:"summTotal",colspan:2}},{id:"id",header:[{text:"№"},{content:"serverFilter"}],width:50},{id:"name",header:[{text:"Код"},{content:"serverFilter"}],fillspace:1},{id:"fullname",header:[{text:"Название"},{content:"serverFilter"}],fillspace:1},{id:"url",header:[{text:"URI"},{content:"serverFilter"}],fillspace:1},{id:"close_on_hangup",header:[{text:"Закрытие страницы после обработки "},{content:"serverFilter"}],fillspace:1,template:function(e){var t="";switch(e.close_on_hangup){case"1":t+="Да";break;case"0":t+="Нет";break;case"10":t+="10 сек";break;case"60":t+="60 сек";break;case"300":t+="5 мин";break;case"600":t+="10 мин"}return t}},{id:"sl",header:[{text:"SL"},{content:"serverFilter"}],fillspace:1},{id:"viq",header:[{text:"Приоритетная очередь"},{content:"serverRichSelectFilter"}],fillspace:1,options:[{id:"0",value:"Нет"},{id:"1",value:"Да"}]},{id:"service_id",header:[{text:"Сервис"},{content:"serverFilter"}],fillspace:1},{id:"pattern",header:[{text:"Шаблон"},{content:"serverFilter"}],fillspace:1,options:"/config/queues"},{id:"agents",header:["Операторы",""],fillspace:3,template:function(e){var t="";return Array.isArray(e.agents)&&e.agents.forEach((function(e){t.length>0&&(t+=", "),null!=e.name?t+=e.name:null!=e.phone?t+=e.phone:null!=e.acl_user_id&&(t+="id"+e.acl_user_id)})),t}},{id:"hidden",header:[{text:"Скрытая"},{content:"serverRichSelectFilter"}],fillspace:1,options:[{id:"0",value:"Нет"},{id:"1",value:"Да"}]}],on:{onAfterLoad:function(){},onBeforeLoad:function(){$$("queues").clearSelection()},onAfterSelect:function(){e=this.getSelectedId()},onItemDblClick:function(){let e=this.getSelectedItem();queuesWindow.show(e)},onAfterContextMenu:function(e){e.row&&$$("queues").select(e.row)}},ready:function(){let e="cmenuqueues";webix.ui({view:"contextmenu",width:180,id:e,data:[{id:"edit",value:"Изменить",icon:"wxi-pencil"},{id:"copy",value:"Копировать",icon:"fa fa-copy"},{id:"delete",value:"Удалить",icon:"wxi-trash"}],on:{onMenuItemClick:function(e){let t="/queues/list?filter[id]="+$$("queues").getSelectedItem().id,i=null;switch(e){case"edit":webix.ajax(t).then((function(e){i=e.json().data[0]})).then((()=>{i?queuesWindow.show(i):webix.message({type:"error",text:"Выберите очередь для редактирования"})}));break;case"copy":webix.ajax(t).then((function(e){i=e.json().data[0]})).then((()=>{i?(i.id=0,queuesWindow.show(i)):webix.message({type:"error",text:"Выберите очередь для копирования"})}));break;case"delete":$$("queues").getSelectedId()?webix.guiutils.removeFromTable(parseInt($$("queues").getSelectedId()),"/queues/"+parseInt($$("queues").getSelectedId())+"/remove","queues","removeQueue"):webix.message({type:"error",text:"Выберите очередь для удаления"})}}}}),$$(e).attachTo(this),webix.extend(this,webix.ProgressBar)}}}loadData(){webix.AppFilter.hide(),$$("queues_toolbar").show(),$$("queues")&&(this.loaded||$$("queues").load("/queues/list","json",(()=>{this.loaded=1})))}}},5733:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>o});class o{constructor(){this.loaded=0,webix.Manager.setComponent("reports",this),this.id="reports",this.filterId="reports_filter",this.toolBarId="reports_toolbar"}roleAllowed(){return["phc.nps","erpico.admin"]}getView(){return webix.protoUI({name:"my_suggest",$init:function(e){var t=e.body.rows.length;t>1&&(e.body.rows[t]={view:"select",label:"От",id:"markFrom",options:["","0","1","2","3","4","5","6","7","8","9","10"]},e.body.rows[t+1]={view:"select",label:"До",id:"markTo",options:["","0","1","2","3","4","5","6","7","8","9","10"]},e.body.rows[t+2]={view:"button",label:"Применить",click:()=>{$$("reports");$$("reports").filterByAll()}})}},webix.ui.checksuggest),webix.ui.datafilter.rowCount=webix.extend({refresh:function(e,t,i){t.firstChild.innerHTML="Итого:  "+e.count()||0}},webix.ui.datafilter.summColumn),{id:"reports",hidden:!0,view:"datatable",select:!0,css:"my_style",tooltip:!0,footer:!0,resizeColumn:!0,columns:[{id:"id",header:[{text:translate("ID")},{content:"serverFilter"}],sort:"int",width:40,footer:{content:"rowCount",colspan:2}},{id:"city",header:[{text:translate("Город")},{content:"multiSelectFilter",suggest:{fitMaster:!1,width:250,body:{template:"#id#"},on:{onBeforeShow:function(){var e=this.getList(),t=[];e.data.each((function(e){t.push(e.id)}));var i=webix.html.getTextSize(t,"webix_list_item").width+100;this.define("width",i),this.resize()}}},options:"legacy/nps/options/city"}],sort:"int",width:150,footer:{content:"rowCount",colspan:1}},{id:"filial",header:[{text:translate("Филиал")},{content:"multiSelectFilter",suggest:{fitMaster:!1,width:250,body:{template:"#id#"},on:{onBeforeShow:function(){var e=this.getList(),t=[];e.data.each((function(e){t.push(e.id)}));var i=webix.html.getTextSize(t,"webix_list_item").width+100;this.define("width",i),this.resize()}}},options:"legacy/nps/options/filial"}],sort:"int",width:150},{id:"channel",header:[{text:translate("Канал")},{content:"multiSelectFilter",suggest:{fitMaster:!1,width:250,body:{template:"#id#"},on:{onBeforeShow:function(){var e=this.getList(),t=[];e.data.each((function(e){t.push(e.id)}));var i=webix.html.getTextSize(t,"webix_list_item").width+100;this.define("width",i),this.resize()}}},options:"legacy/nps/options/channel"}],sort:"int",width:150},{id:"name",header:[{text:translate("ФИО клиента")},{content:"serverFilter"}],sort:"int",width:150},{id:"lastbuy_date",header:[{text:translate("Дата последней покупки ")},""],width:220},{id:"buyer_status",header:[{text:translate("Статус покупателя")},{content:"multiSelectFilter",suggest:{fitMaster:!1,width:250,body:{template:"#id#"}},options:[{id:"Первичный"},{id:"Повторный"}]}],width:180},{id:"motivational_p",header:[{text:translate("Мотивационная программа")},{content:"multiSelectFilter",suggest:{fitMaster:!1,width:250,body:{template:"#id#"},on:{onBeforeShow:function(){var e=this.getList(),t=[];e.data.each((function(e){t.push(e.id)}));var i=webix.html.getTextSize(t,"webix_list_item").width+100;this.define("width",i),this.resize()}}},options:"legacy/nps/options/motivational_p"}],sort:"int",width:180},{id:"recomendations_mark",header:[{text:translate("Шкала рекомендаций")},{content:"multiSelectFilter",suggest:{view:"my_suggest",fitMaster:!1,width:200}}],sort:"int",width:180},{id:"reason_plus",header:[{text:translate("Причина положительной оценки")},{content:"multiSelectFilter",suggest:{fitMaster:!1,width:250,body:{template:"#id#"},on:{onBeforeShow:function(){var e=this.getList(),t=[];e.data.each((function(e){t.push(e.id)}));var i=webix.html.getTextSize(t,"webix_list_item").width+100;this.define("width",i),this.resize()}}},options:"legacy/nps/options/reasonPlus"}],sort:"int",width:250},{id:"reason_minus",header:[{text:translate("Причина отрицательной оценки")},{content:"multiSelectFilter",suggest:{fitMaster:!1,width:250,body:{template:"#id#"},on:{onBeforeShow:function(){var e=this.getList(),t=[];e.data.each((function(e){t.push(e.id)}));var i=webix.html.getTextSize(t,"webix_list_item").width+100;this.define("width",i),this.resize()}}},options:"legacy/nps/options/reasonPlus"}],sort:"int",width:250},{id:"recomendations",header:[{text:translate("Рекомендации по улучшению")},{content:"multiSelectFilter",suggest:{fitMaster:!1,body:{tooltip:function(e){return e.id},template:"#id#"},tooltip:!0},on:{onBeforeShow:function(){var e=this.getList(),t=[];e.data.each((function(e){t.push(e.id)}));var i=webix.html.getTextSize(t,"webix_list_item").width+100;this.define("width",i),this.resize()}},options:"legacy/nps/options/recomendations"}],width:250,sort:"int"}],on:{onBeforeContextMenu:function(e){this.select(e)}},ready:function(){$$("reports").registerFilter($$("reportDateRange"),{columnId:"date"},{getValue:function(e){return e.getValue()},setValue:function(e,t){e.setValue(t)}}),$$("reports").registerFilter($$("markFrom"),{columnId:"markFrom"},{getValue:function(e){return e.getValue()},setValue:function(e,t){e.setValue(t)}}),$$("reports").registerFilter($$("markTo"),{columnId:"markTo"},{getValue:function(e){return e.getValue()},setValue:function(e,t){e.setValue(t)}}),webix.extend(this,webix.ProgressBar),webix.ui({view:"contextmenu",submenu:"data",width:300,data:[{value:"Анкета",id:"open"}],on:{onMenuItemClick:function(e){if("open"===this.getMenuItem(e).id){let e=$$("reports")?$$("reports").getSelectedItem():0;e?window.open(window.location.origin+"/#!/main/script?id=10&nps="+e.id,"_blank"):webix.message({type:"error",text:"Произошла ошибка"})}}}}).attachTo(this)}}}loadReport(){$$("reports").clearAll(),webix.extend($$("reports"),webix.ProgressBar),$$("reports").showProgress(),$$("reports").load("legacy/nps/report"),$$("reports").filterByAll()}getToolBar(){return{id:"reports_toolbar",hidden:!0,css:"top-menu-right-item",cols:[{css:"disable_margin_btn_tbar",width:56,view:"button",type:"icon",icon:"wxi-sync",click:()=>{this.loadReport()}},{view:"button",type:"icon",icon:"fa fa-file-excel",label:"Export to PDF",width:200,click:function(){var e=$$("reportDateRange").getValue();if(e.start)var t=webix.Date.dateToStr("%d.%m.%Y")(new Date(e.start));else if(e.end)t=webix.Date.dateToStr("%d.%m%Y")(new Date(e.end));if(e.end)var i=webix.Date.dateToStr("%d.%m%Y")(new Date(e.end));else i=t;webix.toExcel($$("reports"),{filename:"NPS_Report_"+t+"-"+i,name:"NPS_Report_"+t+"-"+i})}}]}}setToolBar(){$$(this.toolBarId)||$$("top-menu").addView(this.getToolBar(),5),$$("reportDateRange").show(),this.showToolBar()}showToolBar(){$$(this.toolBarId).show()}loadData(){this.setToolBar(),webix.AppFilter.show(),webix.AppFilter.show(),webix.AppFilter.setBody(this.id,{id:this.filterId}),webix.AppFilter.setSubmit((()=>{this.loadReport()})),webix.AppFilter.setReset((()=>{})),this.loaded||(webix.AppFilter.submit(),this.loaded=1)}}},393:(e,t,i)=>{"use strict";function o(e){var t=$$("scripts_lst").getValue();if(t){var i=$$("script_stages").getSelectedId(!1),o=e.id?e.id:0;i?webix.ui({id:"add_script_element_win",view:"window",head:{view:"toolbar",margin:-4,cols:[{view:"label",label:o?"Изменение элемента этапа скрипта":"Добавление элемент этапа скрипта"},{view:"icon",icon:"wxi-close",click:"$$('add_script_element_win').close();"}]},resize:!0,width:700,height:500,center:!0,position:"center",modal:!0,move:!0,body:{view:"form",id:"stage_elements_form",elements:[{view:"richselect",name:"type",label:"Тип",options:[{id:"button",value:"Кнопка"},{id:"text",value:"Текст"},{id:"webpage",value:"Веб-страница"},{id:"form",value:"Форма"},{id:"transfer",value:"Выбор сотрудника для переадресации"},{id:"sms",value:"Отправить SMS клиенту"},{id:"email",value:"Отправить Email клиенту"}],on:{onChange:function(e){switch($$("label").hide(),$$("action").hide(),$$("text").hide(),$$("url").hide(),$$("form_elements").hide(),$$("form_to").hide(),e){case"button":$$("label").show(),$$("action").show();break;case"text":case"sms":case"email":$$("text").show();break;case"webpage":$$("url").show();break;case"form":$$("form_elements").show(),$$("form_to").show()}}}},{view:"text",name:"label",label:"Лейбл",id:"label",hidden:!0},{view:"nic-editor",config:{},label:"Текст",name:"text",id:"text",hidden:!0},{view:"text",name:"url",label:"URL",id:"url",hidden:!0},{view:"datatable",id:"form_elements",autowidth:!0,editable:!0,hidden:!0,height:200,columns:[{id:"name",header:"Название",width:250,editor:"text"},{id:"type",header:"Тип",width:80,editor:"select",options:[{id:"text",value:"Текст"}]},{id:"placeholder",header:"Подсказка",width:250,editor:"text"}],data:[{}],on:{onItemClick:function(e){this.editColumn(e),this.focusEditor(e)},onBeforeContextMenu:function(e){webix.delay((function(){this.select(e)}))}},ready:function(){}},{view:"text",id:"form_to",name:"form_to",label:"Email",hidden:!0},{hidden:!0,view:"richselect",name:"action",label:"Действие",id:"action",options:[{id:"jump",value:"Переход к другому скрипту"},{id:"next",value:"Переход к другому блоку"},{id:"transfer",value:"Переадресация вызова"},{id:"email",value:"Отправка Email"},{id:"sms",value:"Отправка SMS"}],on:{onChange:function(e){switch($$("action_script").hide(),$$("action_block").hide(),$$("action_text").hide(),$$("action_transfer").hide(),e){case"jump":$$("action_script").show();break;case"next":$$("action_block").show();break;case"transfer":$$("action_transfer").show();break;case"email":case"sms":$$("action_text").show()}}}},{view:"combo",label:"Скрипт",name:"action_script",id:"action_script",hidden:!0,options:"/legacy/ext/scripts/list"},{view:"combo",label:"Блок",name:"action_block",id:"action_block",hidden:!0,suggest:{body:{view:"tree",url:"/legacy/ext/scripts/liststages/"+t}}},{view:"textarea",label:"Текст",name:"action_text",id:"action_text",height:"400",hidden:!0},{view:"text",label:"Номер",name:"action_transfer",id:"action_transfer",hidden:!0},{cols:[{view:"button",label:"Сохранить",click:function(){var e=$$("stage_elements_form");if(e.validate()){e.disable();var t=e.getValues();t.stage_id=i,o&&(t.id=o),"form"==t.type&&(t.form=JSON.stringify($$("form_elements").serialize())),webix.ajax().post("/legacy/ext/scripts/save/stageelements",t,(function(t,o,s){e.enable(),1==(o=o.json()).result?($$("add_script_element_win").close(),$$("script_elements").clearAll(),$$("script_elements").load("/legacy/ext/scripts/list/stageelements/"+i)):webix.message({type:"error",text:o.message})}))}else webix.message({type:"error",text:"Заполните обязательные поля"})}},{view:"button",label:"Удалить",hidden:!o,click:function(){webix.confirm({title:"Подтверждение удаления",ok:"Удалить",cancel:"Отмена",text:'Вы действительно хотите удалить элемент этапа "'+e.label+'"?',type:"confirm-error",callback:function(e){if(e){var t={id:o,delete:1};webix.ajax().post("/legacy/ext/scripts/save/stageelements",t,(function(e,t,o){1==(t=t.json()).result?($$("add_script_element_win").close(),$$("script_elements").clearAll(),$$("script_elements").load("/legacy/ext/scripts/list/stageelements/"+i)):webix.message({type:"error",text:t.message})}))}}})}}]}],rules:{type:webix.rules.isNotEmpty,label:webix.rules.isNotEmpty,action:webix.rules.isNotEmpty,url:webix.rules.isNotEmpty,action_script:webix.rules.isNotEmpty,action_block:webix.rules.isNotEmpty,action_text:webix.rules.isNotEmpty,action_transfer:webix.rules.isNotEmpty}},on:{onShow:function(){$$("stage_elements_form").setValues(e),e.type&&"form"==e.type&&($$("form_elements").clearAll(),$$("form_elements").parse(e.form),0==$$("form_elements").count()&&$$("form_elements").add({}))}}}).show():webix.message({type:"error",text:"Выберите этап скрипта перед добавление элементов этапа скрипта."})}else webix.message({type:"error",text:"Выберите скрипт"})}i.r(t),i.d(t,{default:()=>s});class s{constructor(){this.loaded=0,webix.Manager.setComponent("scripts",this)}roleAllowed(){return["phc.admin","erpico.admin"]}getView(){return{id:"scripts",hidden:!0,type:"clean",rows:[{rows:[{cols:[{view:"organogram",id:"script_stages",borderless:!0,select:!0,scroll:"xy",data:[],on:{onSelectChange:function(){$$("script_elements").clearAll();var e=$$("script_stages").getSelectedId(!1);e&&$$("script_elements").load("/legacy/ext/scripts/list/stageelements/"+e)},onItemDblClick:function(e){$$("script_stages").getItem(e)}}},{view:"resizer"},{rows:[{type:"space",responsive:"e1",margin:0,padding:0,cols:[{view:"label",label:"<strong>Элементы этапа скрипта</strong>"},{view:"button",label:"Добавить",click:function(){o([])}},{view:"button",label:"Изменить",click:function(){var e=$$("script_elements").getSelectedId();if(e){var t=$$("script_elements").getItem(e);t&&o(t)}else webix.message({type:"error",text:"Выберите элемент этапа скрипта для редактирования."})}}]},{id:"script_elements",view:"treetable",resizeColumn:!0,resizeRow:!0,select:!0,columns:[{id:"id",header:[{text:""}],template:"{common.treetable()} #value#",width:50},{id:"type",header:[{text:"Тип"}],width:150},{id:"label",header:[{text:"Содержимое"}],width:200}],on:{onItemDblClick:function(e,t,i){}}}]}]}]}]}}loadData(){webix.AppFilter.hide(),$$("scripts_toolbar").show()}}},480:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>u});var o=i(7880),s=i(3879),a=i(1647),l=i(7523),r=i(6358),n=i(3420),d=i(8821);const c="1.0.2";webix.proxy.channel_drivers={$proxy:!0,load:function(){return webix.ajax(this.source).then((e=>((e=e.json()).length>1&&$$("channel_drivers").show(),webix.channel_drivers=e,e)))}};class u{constructor(){this.loaded=0,webix.Manager.setComponent("setup",this),this.amocrmWindowId="amocrm_wnd",this.toolBarId="setup_toolbar",this.changes=0,this.remote_config_phone_addresses=null}roleAllowed(){return["erpico.admin"]}getThis(){return this}getId(){return this.setupsId}setId(e){this.setupId=e}static updateControlsAmocrm(){$$("amocrm.enable").getValue()?($$("amocrm_selectinstance").show(),$$("amocrm_row_1").show()):($$("amocrm_selectinstance").hide(),$$("amocrm_row_1").hide(),$$("amocrm_button").hide())}static updateControlsBitrix(){const e=["bitrix_row_1","bitrix_row_2","bitrix_row_3","bitrix_row_4","bitrix_users_sync","bitrix_bind_integration"];$$("bitrix.enable").getValue()?e.forEach((e=>$$(e).show())):e.forEach((e=>$$(e).hide()))}static updateControlsOneSignal(){const e=["onesignal.row"];$$("onesignal.enable").getValue()?e.forEach((e=>$$(e).show())):e.forEach((e=>$$(e).hide()))}getView(){let e=this.getThis();return{id:"setup",view:"form",css:"my_style",tooltip:!0,borderless:!0,elements:[{view:"tabview",id:"setup_tabs",css:"webix_setup_tab",cells:[{header:"Основные",body:{id:"primarySetup",view:"form",scroll:!0,minHeight:750,rows:[{cols:[{name:"web.url",id:"web.url",view:"text",label:"Адрес веб-сервера",inputWidth:300,value:""},{view:"combo",id:"timezone",name:"timezone",width:300,placeholder:"Выберите часовой пояс",label:"Часовой пояс",options:{keyPressTimeout:100,body:{dataFeed:function(e){this.clearAll();let t="/timezones";t+=e?"?filter[value]="+e:"",this.loadNext(0,0,{},t)},url:"/timezones"}}},{view:"combo",id:"channel_drivers",name:"channel_drivers",width:300,hidden:!0,placeholder:"Выберите канальный драйвер",label:"Канальный драйвер по умолчанию",options:{keyPressTimeout:100,body:{url:"channel_drivers->/config/channel_drivers"}}},{}]},{cols:[{name:"sip.url",id:"sip.url",view:"text",label:"SIP адрес станции",value:"",inputWidth:300,required:!0},{id:"remote.config.phone.deny",name:"remote.config.phone.deny",view:"switch",label:"Запрет удаленной конфигурации<span class='webix_icon fa fa-question'></span>",tooltip:"Смена конфигурации телефонов будет производиться только с определённых ip-адресов",inputWidth:300,on:{onChange(){const e="remote.config.phone.deny.addresses";$$("remote.config.phone.deny").getValue()?$$(e).getNode().style.display="inline-block":$$(e).getNode().style.display="none"}}},{view:"button",label:"Список адресов",id:"remote.config.phone.deny.addresses",inputWidth:300,click:()=>{(new d.RemoteConfigPhoneAddresses).show("main",this.remote_config_phone_addresses,(e=>{this.remote_config_phone_addresses=e}))},on:{onViewShow:()=>{$$("remote.config.phone.deny.addresses").getNode().style.display="none"}}},{}]},{name:"acdclient.homepages",id:"acdclient.homepages",view:"text",label:"Страница, отображаемая в ACD клиент по умолчанию",value:"",inputWidth:300},{cols:[{name:"bitrix.enable",id:"bitrix.enable",view:"switch",labelRight:"Интеграция с Bitrix24",inputWidth:300,on:{onChange:e=>{u.updateControlsBitrix()}}},{id:"bitrix_users_sync",view:"button",label:"Синхронизация пользователей с битриксом",inputWidth:300,hidden:!0,click:()=>{(new o.UsersSyncModals).show()}},{id:"bitrix_bind_integration",view:"button",label:"Привязать интеграцию",inputWidth:300,hidden:!0,click:()=>{webix.ajax().get("bitrix24/app?master=1",(e=>{1==(e=JSON.parse(e)).res?webix.message({type:"success",text:"Интергация привязана"}):e.link&&(document.location=e.link)}))}},{}]},{id:"bitrix_row_1",hidden:!0,cols:[{name:"bitrix.app_id",id:"bitrix.app_id",view:"text",label:"App ID Bitrix24",value:"",inputWidth:300,required:!0},{id:"bitrix_call_sync",view:"button",label:"Синхронизация звонков",inputWidth:300,click:()=>{(new r.CallsSyncModals).show()}},{name:"bitrix.leadshow",id:"bitrix.leadshow",view:"switch",label:"Карточка лида при звонке"},{}]},{id:"bitrix_row_2",hidden:!0,cols:[{name:"bitrix.secret",id:"bitrix.secret",view:"text",label:"Secret Bitrix24",value:"",inputWidth:300,required:!0},{name:"bitrix.leadcreate",id:"bitrix.leadcreate",view:"switch",label:"Создание лида в Битрикс24 после звонка"},{view:"checkbox",id:"bitrix.existing_outgoing",name:"bitrix.existing_outgoing",label:"Существующие исходящие<span class='webix_icon fa fa-question'></span>",tooltip:"Создавать в Битрикс24 исходящий звонок только если контак или лид существует"},{}]},{id:"bitrix_row_3",hidden:!0,cols:[{name:"bitrix.domain",id:"bitrix.domain",view:"text",label:"Домен Bitrix24",value:"",inputWidth:300,required:!0},{id:"bitrix.specific_phones_enabled",name:"bitrix.specific_phones_enabled",view:"switch",label:"Определенные номера<span class='webix_icon fa fa-question'></span>",tooltip:"Передавать в Битрикс24 входящие звонки только на следующие номера телефонов",inputWidth:300,on:{onChange(){const e="bitrix.specific_phones";$$("bitrix.specific_phones_enabled").getValue()?$$(e).getNode().style.display="inline-block":$$(e).getNode().style.display="none"}}},{view:"button",label:"Номера телефонов",id:"bitrix.specific_phones",inputWidth:300,click:()=>{(new n.SpecificPhonesModals).show()},on:{onViewShow:()=>{$$("bitrix.specific_phones").getNode().style.display="none"}}},{}]},{id:"bitrix_row_4",hidden:!0,cols:[{name:"bitrix.api_url",id:"bitrix.api_url",view:"text",label:"URL входящего вебхука Битрикс24",value:"",inputWidth:300,required:!0},{},{},{}]},{cols:[{name:"amocrm.enable",id:"amocrm.enable",view:"switch",labelRight:"Интеграция с amoCRM",inputWidth:300,on:{onChange:e=>{u.updateControlsAmocrm()}}},{id:"amocrm_selectinstance",view:"button",label:"Подключение интеграции",inputWidth:300,hidden:!0,click:()=>{e.selectAmoInstance((e=>{$$("amocrm_button").load("/amocrm/register?instance="+e),$$("amocrm_button").show(),$$("amocrm_selectinstance").hide()}))}},{id:"amocrm_button",view:"iframe",height:50,borderless:!0,hidden:!0},{}]},{id:"amocrm_row_1",hidden:!0,cols:[{id:"amocrm_users",view:"button",label:"Пользователи amoCRM",inputWidth:300,click:()=>{e.showAmocrmUsers()}},{},{}]},{cols:[{name:"onesignal.enable",id:"onesignal.enable",view:"switch",labelRight:"Интеграция с OneSignal",inputWidth:300,on:{onChange:()=>{u.updateControlsOneSignal()}}}]},{id:"onesignal.row",hidden:!0,cols:[{name:"onesignal.app_id",id:"onesignal.app_id",view:"text",type:"password",label:"OneSignal App ID",inputWidth:300,css:"webix_el_search",icon:"_showhide wxi-eye",required:!1,on:{onItemClick:function(e,t){webix.guiutils.togglePassword(t,this)}}},{name:"onesignal.rest_api_key",id:"onesignal.rest_api_key",view:"text",type:"password",label:"Rest API Key",inputWidth:300,css:"webix_el_search",icon:"_showhide wxi-eye",required:!1,on:{onItemClick:function(e,t){webix.guiutils.togglePassword(t,this)}}},{},{}]},{cols:[{name:"fcm.enable",id:"fcm.enable",view:"switch",labelRight:"Интеграция с FCM",inputWidth:300,on:{onChange:function(){this.getValue()?$$("fcm.server.key").getNode().style.display="inline-block":$$("fcm.server.key").getNode().style.display="none"}}},{name:"fcm.server.key",id:"fcm.server.key",view:"text",label:"Server key",type:"password",inputWidth:300,css:"webix_el_search",icon:"_showhide wxi-eye",required:!1,on:{onItemClick:function(e,t){webix.guiutils.togglePassword(t,this)},onViewShow:function(){this.getNode().style.display="none"}}},{},{}]},{cols:[{view:"button",label:"Сотрудники по умолчанию для очередей",inputWidth:300,click:function(){(new s.LinesUsersModals).show()}},{view:"button",id:"recruitment_rules",label:"Правила набора",inputWidth:300,click:function(){(new a.DialingRulesModals).show()}},{},{}]}]}},{header:"SMTP-сервер",body:{id:"smtpSetup",view:"form",scroll:!0,minHeight:750,rows:[{name:"smtp.server",id:"smtp.server",view:"text",label:"Адрес SMTP-сервера",value:"",inputWidth:300},{name:"smtp.port",id:"smtp.port",view:"text",label:"Порт SMTP-сервера",value:"",inputWidth:300},{name:"smtp.user",id:"smtp.user",view:"text",label:"Имя пользователя SMTP",value:"",inputWidth:300},{name:"smtp.password",id:"smtp.password",view:"text",type:"password",label:"Пароль SMTP",value:"",inputWidth:300},{name:"smtp.email",id:"smtp.email",view:"text",type:"email",label:"Почта-отправитель SMTP",value:"",inputWidth:300,on:{onFocus(){webix.html.removeCss($$("smtp.email").getNode(),"webix_invalid")}}}]}}]},{},{cols:[{view:"label",id:"version",label:"",on:{onAfterRender(){$$("version").setValue("Version: "+c)}}},{},{view:"button",label:"Экспорт",action:"/export",width:145,click:function(){webix.ajax().post("/export").then((e=>{let t=document.createElement("a"),i=function(e){let t=e.getDate();t<10&&(t="0"+t);let i=e.getMonth()+1;i<10&&(i="0"+i);let o=e.getFullYear();return o<10&&(o="0"+o),o+i+t}(new Date),o=new Blob([e.text()],{type:"application/json"});t.href=URL.createObjectURL(o),t.download="epbx."+i+".ecfg",t.click()}))}},{view:"uploader",value:"Импорт",name:"files",link:"mylist",borderless:!0,upload:"/import",multiple:!1,width:145,on:{onUploadComplete:function(e){e.result?($$("mylist").show(),$$("addSettings").config.width=145,$$("addSettings").resize(),webix.alert("Импорт завершен!")):webix.alert("Импорт прошел с ошибками!")}}},{view:"list",id:"mylist",type:"uploader",width:145,autoheight:!0,borderless:!0,hidden:!0},{view:"button",id:"addSettings",label:"Доп. настройки",width:300,click:function(){(new l.GetEditModals).show()}},{view:"button",label:"Сохранить",width:300,disabled:!1,click:()=>{const e=$$("setup_tabs").getValue(),t=$$(e).getValues();let i=[];return Object.entries(t).forEach((e=>{let t=e[0],o=e[1];i.push({handle:t,val:o})})),$$("smtp.email").getValue()&&!webix.rules.isEmail($$("smtp.email").getValue())?(webix.html.addCss($$("smtp.email").getNode(),"webix_invalid"),webix.message({type:"error",text:"Почта заполнена неправильно"}),!1):$$("setup").validate()?($$("setup").disable(),void webix.ajax().post("/settings/default/save",{settings:i}).then((function(e){var t=e.json();1==t.result?(webix.message("Информация сохранена."),$$("setup").enable()):webix.message({type:"error",text:t.message}),$$("setup").enable()}))):(webix.message({type:"error",text:"Заполните обязательные поля"}),!1)}}]},{}],elementsConfig:{labelPosition:"top",margin:10}}}showAmocrmUsers(){let e=this.getThis(),t={width:800,view:"form",id:"amocrmusers-form",minHeight:500,padding:17,scroll:!0,elements:[{elementsConfig:{labelWidth:100},width:600,view:"datatable",id:"amocrm-users",select:!0,tooltip:!0,resizeColumn:!0,scroll:!0,editable:!0,columns:[{id:"id",header:"ID пользователя",fillspace:1.5,minWidth:50},{id:"name",header:"Имя пользователя",fillspace:2,minWidth:150},{id:"phone",header:"Номер телефона",fillspace:2,minWidth:150,editor:"text"}]},{margin:10,padding:17,cols:[{},{view:"button",label:"Сохранить",type:"form",align:"center",width:120,click:function(){webix.confirm({text:"Все измененные данные будут сохранены. <br> Продолжить?",callback:function(t){if(!t)return;let i=$$("amocrm-users").serialize();webix.$$(e.amocrmWindowId).disable(),webix.ajax().post("/amocrm/users/save",{data:i}).then((function(t){webix.$$(e.amocrmWindowId).close()}))}})}},{view:"button",label:"Закрыть",align:"center",width:120,click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(t){t&&webix.$$(e.amocrmWindowId).close()}})}}]}]};webix.ui({view:"window",id:e.amocrmWindowId,position:"center",modal:!0,width:600,maxHeight:800,resize:!0,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Пользователи amoCRM",align:"left"},{view:"icon",icon:"wxi-close",click:function(){webix.confirm({text:"Вы не сохранили изменения! <br> Продолжить?",callback:function(t){t&&webix.$$(e.amocrmWindowId).close()}})}}]},body:webix.copy(t),on:{onShow:()=>{$$("amocrm-users").load("/amocrm/users").fail((e=>{$$(this.amocrmWindowId).close(),e=JSON.parse(e.responseText),webix.message({type:"error",text:e.message||"Проищошла ошибка при загрузке данных"})}))}}}).show()}selectAmoInstance(e){let t={width:800,view:"form",id:"amocrminstance-form",height:200,padding:17,scroll:!0,elements:[{view:"text",id:"amocrm_instance",label:"Instance",labelWidth:120,suggest:["demo"]},{margin:10,padding:17,cols:[{},{view:"button",label:"Продолжить",type:"form",align:"center",width:120,click:function(){let t=$$("amocrm_instance").getValue();t.includes("http")?(webix.$$("amocrm_select_wnd").close(),e(t)):webix.message({type:"error",text:'Поле Instance должно содержать "http"'})}},{view:"button",label:"Отмена",align:"center",width:120,click:function(){webix.$$("amocrm_select_wnd").close()}}]}]};webix.ui({view:"window",id:"amocrm_select_wnd",position:"center",modal:!0,width:600,height:200,resize:!0,move:!0,head:{view:"toolbar",paddingY:1,height:40,cols:[{view:"label",label:"Выбор экземпляра amoCrm",align:"left"},{view:"icon",icon:"wxi-close",click:function(){webix.$$("amocrm_select_wnd").close()}}]},body:webix.copy(t)}).show()}getToolBar(){return{id:this.getThis().toolBarId,hidden:!0,css:"top-menu-right-item",cols:[]}}setToolBar(){$$("top-menu").addView(this.getToolBar(),5),this.showToolBar()}showToolBar(){$$(this.toolBarId).show()}loadData(){webix.AppFilter.hide(),$$("setup")&&($$(this.toolBarId)?this.showToolBar():this.setToolBar(),this.loaded||(webix.extend($$("setup"),webix.ProgressBar),$$("setup").disable(),$$("setup").showProgress(),webix.ajax().get("/settings/default",((e,t)=>{(t=t.json()).forEach((e=>{void 0!==$$(e.handle)&&$$(e.handle).setValue(e.val),"remote.config.phone.addresses"===e.handle&&(this.remote_config_phone_addresses=e.val)})),this.loaded=1,$$("setup").hideProgress(),$$("setup").enable(),u.updateControlsAmocrm(),$$("bitrix.specific_phones_enabled").getValue()&&($$("bitrix.specific_phones").getNode().style.display="inline-block")}))))}}},4320:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var o=i(979);class s{constructor(e){this.app=e,this.loaded=0,webix.Manager.setComponent("users",this)}roleAllowed(){return["erpico.admin"]}getView(){let e=0;return{id:"users",view:"datatable",hidden:!0,resizeColumn:!0,resizeRow:!0,scrollY:!0,scrollX:!0,navigation:!0,select:!0,tooltip:!0,fixedRowHeight:!1,onContext:{webix_view:function(e,t){this.locate(e.target||e.srcElement)}},css:"my_style",columns:[{id:"id",header:[{text:"№"},{content:"serverFilter"}],width:50,template:function(e){return e.id}},{id:"fullname",header:[{text:"ФИО"},{content:"serverFilter"}],fillspace:1},{id:"state",header:[{text:"статус"},{content:"serverSelectFilter",options:[{id:"1",value:"Активный"},{id:"2",value:"Заблокирован"},{id:"3",value:"Удален"},{id:"4",value:"Скрытый"}]}],fillspace:1,template:function(e){var t="<span class="+webix.guiutils.getColorCicle(e.state)+"></span>";return t+='<span class = "state'+e.state+'">',t+=webix.guiutils.сallStateToTxt(e.state),t+="</span>"}},{id:"name",header:[{text:"логин"},{content:"serverFilter"}],fillspace:1},{id:"phone",header:[{text:"номер"},{content:"serverFilter"}],fillspace:1},{id:"user_groups",header:["группы",""],fillspace:1},{id:"description",header:[{text:"описание"},{content:"serverFilter"}],fillspace:1}],yCount:0,autoConfig:!0,on:{onItemDblClick:()=>{let e=$$("users").getSelectedItem();new o.ClientsWindow(this.app).show(e,this.$scope)},onAfterLoad:function(){this.adjustRowHeight("user_groups")},onAfterSelect:function(){e=this.getSelectedId()},onAfterContextMenu:function(e){e.row&&$$("users").select(e.row)}},ready:function(){var e=this.$scope;webix.extend(this,webix.ProgressBar),this.adjustRowHeight("user_groups"),this.getFilter("state")&&(this.getFilter("state").value=1);let t="cmenuusers";webix.ui({view:"contextmenu",width:180,id:t,data:[{id:"edit",value:"Изменить",icon:"wxi-pencil"},{id:"copy",value:"Копировать",icon:"fa fa-copy"},{id:"delete",value:"Удалить",icon:"wxi-trash"}],on:{onMenuItemClick:t=>{let i="/users/list?filter[id]="+$$("users").getSelectedItem().id,s=null;switch(t){case"edit":webix.ajax(i).then((e=>{s=e.json().data[0]})).then((()=>{s?new o.ClientsWindow(e.app).show(s,$$("users").$scope):webix.message({type:"error",text:"Выберите пользователя "})}));break;case"copy":webix.ajax(i).then((e=>{s=e.json().data[0]})).then((()=>{s?(s.id=0,new o.ClientsWindow(e.app).show(s)):webix.message({type:"error",text:"Выберите пользователя для копирования"})}));break;case"delete":$$("users").getSelectedId()?webix.guiutils.removeFromTable(parseInt($$("users").getSelectedId()),"/users/"+parseInt($$("users").getSelectedId())+"/remove","users","removeUser",(()=>{let e=$$("users").getSelectedItem();e.state="3",$$("users").updateItem(e.id,e)})):webix.message({type:"error",text:"Выберите группу для удаления"})}}}}),$$(t).attachTo(this),webix.extend(this,webix.ProgressBar)}}}loadData(){webix.AppFilter.hide(),$$("users_toolbar").show(),$$("users")&&(this.loaded||(webix.extend($$("users"),webix.ProgressBar),$$("users").load("/users/list","json",(e=>{$$("users").filterByAll(),this.loaded=1}))))}init(){this.win2=this.ui(WindowsView)}}},4334:()=>{webix.protoUI({name:"ckeditor",$init:function(){this.$view.className+=" webix_selectable"},defaults:{borderless:!0,toolbar:[["Bold","Italic","-","NumberedList","BulletedList","-","Link","Unlink"],["FontSize","TextColor","BGColor"]]},_init_ckeditor_once:function(){var e=this.config.textAreaID="t"+webix.uid();this.$view.innerHTML="<textarea id='"+e+"'>"+this.config.value+"</textarea>",window.CKEDITOR_BASEPATH=webix.codebase+"ckeditor/";var t={toolbar:this.config.toolbar,width:this.$width-2,height:this.$height-44};webix.extend(t,this.config.editor||{}),webix.require("ckeditor/ckeditor.js",(function(){this._3rd_editor=window.CKEDITOR.replace(this.config.textAreaID,t)}),this)},_set_inner_size:function(e,t){this._3rd_editor&&this._3rd_editor.container&&this.$width&&this._3rd_editor.resize(e,t)},$setSize:function(e,t){webix.ui.view.prototype.$setSize.call(this,e,t)&&(this._init_ckeditor_once(),this._set_inner_size(e,t))},setValue:function(e){this.config.value=e,this._3rd_editor?this._3rd_editor.setData(e):webix.delay((function(){this.setValue(e)}),this,[],100)},getValue:function(){return this._3rd_editor?this._3rd_editor.getData():this.config.value},focus:function(){this._focus_await=!0,this._3rd_editor&&this._3rd_editor.focus()},getEditor:function(){return this._3rd_editor.getData()}},webix.ui.view)},7695:()=>{webix.protoUI({name:"icon",$skin:function(){this.defaults.height=webix.skin.$active.inputHeight},defaults:{template:function(e){var t="<button style='height:100%;width:100%;line-height:"+e.aheight+"px' class='webix_icon_button'>";return t+="<span class='webix_icon fa-"+e.icon+"'></span>",e.value&&(t+="<span class='webix_icon_count'>"+e.value+"</span>"),t+="</button>"},width:33},_set_inner_size:function(){}},webix.ui.button)},7008:()=>{webix.type(webix.ui.tree,{name:"menuTree",height:40,icon:function(){return""},folder:function(e){return e.icon?"<span class='webix_icon icon fa-"+e.icon+"'></span>":""}}),webix.type(webix.ui.tree,{name:"menuTree2",height:40,icon:function(e){for(var t="",i=1;i<=e.$level;i++){if(i==e.$level&&e.$count)t+="<span class=' webix_icon fa-angle-"+(e.open?"down":"right")+"'></span>"}return t},folder:function(e){return e.icon?"<span class='webix_icon icon fa-"+e.icon+"'></span>":""}})},3395:()=>{webix.protoUI({name:"dhx-scheduler",defaults:{tabs:["day","week","month"]},getScheduler:function(){return this._scheduler},$init:function(){this.$ready.push((function(){var e=this.config.tabs,t=["<div class='dhx_cal_container' style='width:100%; height:100%;'><div class='dhx_cal_navline'><div class='dhx_cal_prev_button'>&nbsp;</div><div class='dhx_cal_next_button'>&nbsp;</div><div class='dhx_cal_today_button'></div><div class='dhx_cal_date'></div>"];if(e)for(var i=0;i<e.length;i++)t.push("<div class='dhx_cal_tab"+(0===i?" dhx_cal_tab_first":"")+(i==e.length-1?" dhx_cal_tab_last":"")+"' name='"+e[i]+"_tab' ></div>");t.push("</div><div class='dhx_cal_header'></div><div class='dhx_cal_data'></div></div>"),this.$view.innerHTML=t.join(""),webix.delay(webix.bind(this._render_once,this))}))},_render_once:function(){var e=this._scheduler=window.Scheduler?window.Scheduler.getSchedulerInstance():window.scheduler;this.config.init&&this.config.init.call(this),e.init(this.$view.firstChild,this.config.date||new Date,this.config.mode||"week"),this.config.ready&&this.config.ready.call(this)}},webix.ui.view)},2403:(e,t,i)=>{var o={"./appconfig":3559,"./appconfig.js":3559,"./appfilter":3264,"./appfilter.js":3264,"./apptoolbar":7795,"./apptoolbar.js":7795,"./appview":261,"./appview.js":261,"./main":1354,"./main.js":1354,"./manager":4551,"./manager.js":4551,"./menu":7713,"./menu.ts":7713,"./menus/list":2836,"./menus/list.js":2836,"./menus/profile":7291,"./menus/profile.js":7291,"./models/BlacklistWindow":5006,"./models/BlacklistWindow.js":5006,"./models/GroupsWindow":3566,"./models/GroupsWindow.js":3566,"./models/PBXChannelsWindow":5944,"./models/PBXChannelsWindow.js":5944,"./models/PhonesWindow":4471,"./models/PhonesWindow.js":4471,"./models/ReportsWindow":5226,"./models/ReportsWindow.js":5226,"./models/SyncCallsWindow":4834,"./models/SyncCallsWindow.js":4834,"./models/analysis_outgoing_calls_layout":6411,"./models/analysis_outgoing_calls_layout.js":6411,"./models/api_keys_wnd":9958,"./models/api_keys_wnd.js":9958,"./models/call_recording_tables":3609,"./models/call_recording_tables.js":3609,"./models/clientwnd":979,"./models/clientwnd.js":979,"./models/contact_cdr_report":8336,"./models/contact_cdr_report.js":8336,"./models/contact_group_wnd":1465,"./models/contact_group_wnd.js":1465,"./models/journal_wnd":7422,"./models/journal_wnd.js":7422,"./models/mediafilesForm":223,"./models/mediafilesForm.ts":223,"./models/menudata":3199,"./models/menudata.ts":3199,"./models/option_client_wnd":4389,"./models/option_client_wnd.js":4389,"./models/phones_window":2235,"./models/phones_window.js":2235,"./models/record_contact_center":2298,"./models/record_contact_center.js":2298,"./models/settings_wnd":4340,"./models/settings_wnd.js":4340,"./modules/dashboardnps":2869,"./modules/dashboardnps.js":2869,"./modules/npsTooltip":5631,"./modules/npsTooltip.js":5631,"./modules/phones_groups_toolbar":8257,"./modules/phones_groups_toolbar.js":8257,"./modules/queues_toolbar":5315,"./modules/queues_toolbar.js":5315,"./modules/scripts_toolbar":5116,"./modules/scripts_toolbar.js":5116,"./modules/users_toolbar":4710,"./modules/users_toolbar.js":4710,"./outgoingcampaign":8354,"./outgoingcampaign/":8354,"./outgoingcampaign/form":3998,"./outgoingcampaign/form.js":3998,"./outgoingcampaign/importFileWnd":6957,"./outgoingcampaign/importFileWnd.js":6957,"./outgoingcampaign/index":8354,"./outgoingcampaign/index.ts":8354,"./outgoingcampaign/journal/journalLeadsWnd":986,"./outgoingcampaign/journal/journalLeadsWnd.js":986,"./outgoingcampaign/journal/journalWnd":1478,"./outgoingcampaign/journal/journalWnd.js":1478,"./outgoingcampaign/leadsWnd":421,"./outgoingcampaign/leadsWnd.js":421,"./outgoingcampaign/outgoingcampaigns":1537,"./outgoingcampaign/outgoingcampaigns.js":1537,"./outgoingcampaign/ruleswnd":8800,"./outgoingcampaign/ruleswnd.js":8800,"./outgoingcampaign/statisticsWnd":9307,"./outgoingcampaign/statisticsWnd.js":9307,"./outgoingcampaign/toolbar":7155,"./outgoingcampaign/toolbar.js":7155,"./script":8897,"./script.js":8897,"./views/aliases":8555,"./views/aliases.js":8555,"./views/analysis_outgoing_calls":3283,"./views/analysis_outgoing_calls.js":3283,"./views/api_keys":1331,"./views/api_keys.js":1331,"./views/blacklist":8495,"./views/blacklist.js":8495,"./views/cdr_reports":6068,"./views/cdr_reports.js":6068,"./views/channels":3454,"./views/channels.js":3454,"./views/chat":9542,"./views/chat.js":9542,"./views/chatModal":2122,"./views/chatModal.js":2122,"./views/checklist":4909,"./views/checklist.js":4909,"./views/clients":6846,"./views/clients.js":6846,"./views/compare_calls":530,"./views/compare_calls.js":530,"./views/contact_groups":4938,"./views/contact_groups.js":4938,"./views/cti":5021,"./views/cti.js":5021,"./views/daily_report":8948,"./views/daily_report.js":8948,"./views/dashboard":7719,"./views/dashboard.js":7719,"./views/ext_dashboard":7824,"./views/ext_dashboard.js":7824,"./views/ext_incoming_external":7798,"./views/ext_incoming_external.js":7798,"./views/ext_incoming_internal":1318,"./views/ext_incoming_internal.js":1318,"./views/ext_outgoing":9409,"./views/ext_outgoing.js":9409,"./views/extended_calls":2223,"./views/extended_calls.js":2223,"./views/extended_contact_calls":6020,"./views/extended_contact_calls.js":6020,"./views/grouped_reports":2101,"./views/grouped_reports.js":2101,"./views/grouped_reports_by_agents":3202,"./views/grouped_reports_by_agents.js":3202,"./views/grouped_reports_by_queues":8830,"./views/grouped_reports_by_queues.js":8830,"./views/groups":2172,"./views/groups.js":2172,"./views/hourly_load":8075,"./views/hourly_load.js":8075,"./views/interval_reports":7933,"./views/interval_reports.js":7933,"./views/journal":252,"./views/journal.js":252,"./views/lost_calls":8733,"./views/lost_calls.js":8733,"./views/mediafiles":79,"./views/mediafiles.ts":79,"./views/modals/setup/RemoteConfigPhoneAddresses":8821,"./views/modals/setup/RemoteConfigPhoneAddresses.js":8821,"./views/modals/setup/SpecificPhonesModals":3420,"./views/modals/setup/SpecificPhonesModals.js":3420,"./views/modals/setup/callsSyncModals":6358,"./views/modals/setup/callsSyncModals.js":6358,"./views/modals/setup/dialingRulesModals":1647,"./views/modals/setup/dialingRulesModals.js":1647,"./views/modals/setup/getEditModals":7523,"./views/modals/setup/getEditModals.js":7523,"./views/modals/setup/linesUsersModals":3879,"./views/modals/setup/linesUsersModals.js":3879,"./views/modals/setup/usersSyncModals":7880,"./views/modals/setup/usersSyncModals.js":7880,"./views/month_traffic":2482,"./views/month_traffic.js":2482,"./views/operators_work_report":6232,"./views/operators_work_report.js":6232,"./views/phone":1293,"./views/phone.js":1293,"./views/phones":3016,"./views/phones.js":3016,"./views/phones_groups":5663,"./views/phones_groups.js":5663,"./views/queues":9410,"./views/queues.js":9410,"./views/reports":5733,"./views/reports.js":5733,"./views/scripts":393,"./views/scripts.js":393,"./views/setup":480,"./views/setup.js":480,"./views/users":4320,"./views/users.js":4320,"./webix/ckeditor":4334,"./webix/ckeditor.js":4334,"./webix/icon":7695,"./webix/icon.js":7695,"./webix/menutree":7008,"./webix/menutree.js":7008,"./webix/scheduler":3395,"./webix/scheduler.js":3395};function s(e){var t=a(e);return i(t)}function a(e){if(!i.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}s.keys=function(){return Object.keys(o)},s.resolve=a,e.exports=s,s.id=2403}},t={};function i(o){var s=t[o];if(void 0!==s)return s.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,i),a.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var o in t)i.o(t,o)&&!i.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";i(6324),i(3489);var e=i(9587),t=i(4389);class o{constructor(){this.token=0,this.name="unauth",this.fullname="Не авторизован",this.instance_id="unregistered",this.tokenFromGet=webix.guiutils.getUrlParameter("token"),this.OptionWindow=new t.OptionWindow}authUser(e){var t=this;webix.ui({view:"window",id:"loginWindow",css:"login_window",fullscreen:!0,borderless:!0,modal:!0,move:!0,head:{},body:{id:"loginForm",view:"form",borderless:!0,elements:[{rows:[{},{},{cols:[{},{width:430,height:160,id:"logobox",css:"logobox",align:"middle",borderless:!0,template:"<img src='../assets/imgs/erpico-logo-pbx.png' valign='middle' style=\"width: 100%\">"},{}]},{},{cols:[{},{},{view:"text",label:"Логин",value:"",name:"login",invalidMessage:"Укажите логин",id:"auth_login",height:96,width:390,inputWidth:390,inputHeight:60,css:"input_sign input_login",on:{onFocus:function(e){webix.html.addCss($$("auth_login").getNode(),"selected")}}},{},{}]},{cols:[{},{},{css:"input_sign ",cols:[{css:"input_sign input_password",view:"text",type:"password",label:"Пароль",name:"password",invalidMessage:"Укажите пароль",id:"auth_password",height:96,width:390,inputWidth:390,inputHeight:60,on:{onFocus:function(e){webix.html.addCss($$("auth_password").getNode(),"selected")}}}]},{},{}]},{cols:[{view:"label",label:"",inputWidth:390,height:70,align:"center",id:"message",css:"login_message"}]},{cols:[{},{},{view:"button",value:"Войти",hotkey:"enter",id:"auth_enter",height:86,width:390,click:function(){var i=$$("loginForm");i.disable();var o=i.getValues();webix.ajax().post("/auth/login",o,{error:function(e,t,i){webix.message({type:"error",text:e})},success:function(o,s,a){var l=s.json();i.enable(),l&&void 0!==l.error?0==l.error?($$("loginWindow")&&$$("loginWindow").close(),t.token=l.token,webix.storage.cookie.put("token",l.token),t.check(e)):$$("message").setValue("Неверный логин или пароль"):webix.message({type:"error",text:"Unknow error: "+o})}})}},{},{}]},{},{},{}]}]},on:{onShow:function(){}}}).show()}check(e){var t=this;if(!this.token&&!webix.storage.cookie.get("token")&&!t.tokenFromGet)return this.authUser(e);webix.ajax().get("/auth/info",{token:t.tokenFromGet},{error:function(e,t,i){webix.message({type:"error",text:e})},success:function(i,o,s){var a=o.json();a&&void 0!==a.error?a.error?t.authUser(e):(t.tokenFromGet&&webix.storage.cookie.put("token",t.tokenFromGet),t.roles=a.roles,t.name=a.name,t.fullname=a.fullname,t.instance_id=a.instance,t.photo=a.photo,e&&e()):webix.message({type:"error",text:"Unknow error: "+i})}})}logout(e){var t=this;webix.ajax().get("/auth/logout",{error:function(e,t,i){webix.message({type:"error",text:e})},success:function(e,i,o){var s=i.json();s&&void 0!==s.error?s.error?webix.message({type:"error",text:"Ошибка: "+s.message}):(t.token=0,webix.storage.cookie.put("token",""),document.location.reload()):webix.message({type:"error",text:"Unknow error: "+e})}})}settings(e){this.OptionWindow.showWindow()}getFullname(){return this.fullname}getPhoto(){return this.photo}isAllowedRoles(e){return!webix.auth||!webix.auth.roles||webix.auth.roles.filter((t=>e.includes(t))).length}}class s{constructor(){this.filter_grouped_reports=1,this.queue_grouped_reports="",this.type_grouped_reports=1}yesterday(e){return e.setDate(e.getDate()-1),e}hideAllToolbars(){$$("ext_dashboard_toolbar")&&$$("ext_dashboard_toolbar").hide(),$$("grouped_reports_toolbar")&&$$("grouped_reports_toolbar").hide(),$$("extended_calls_trafic")&&$$("extended_calls_trafic").hide(),$$("extended_calls_toolbar")&&$$("extended_calls_toolbar").hide(),$$("extended_contact_calls_toolbar")&&$$("extended_contact_calls_toolbar").hide(),$$("reportDateRange").hide(),$$("cdr_toolbar")&&$$("cdr_toolbar").hide(),$$("analysis_outgoing_calls_toolbar")&&$$("analysis_outgoing_calls_toolbar").hide(),$$("grouped_reports_toolbar")&&$$("grouped_reports_toolbar").hide(),$$("phoneExcelButton")&&$$("phoneExcelButton").hide(),$$("lost_calls_toolbar")&&$$("lost_calls_toolbar").hide(),$$("agents_grouped_reports_toolbar")&&$$("agents_grouped_reports_toolbar").hide(),$$("queues_grouped_reports_toolbar")&&$$("queues_grouped_reports_toolbar").hide(),$$("operators_work_report_toolbar")&&$$("operators_work_report_toolbar").hide(),$$("interval_reports_toolbar")&&$$("interval_reports_toolbar").hide(),$$("daily_report_toolbar")&&$$("daily_report_toolbar").hide(),$$("month_traffic_toolbar")&&$$("month_traffic_toolbar").hide(),$$("hourly_traffic_toolbar")&&$$("hourly_traffic_toolbar").hide(),$$("compare_calls_toolbar")&&$$("compare_calls_toolbar").hide(),$$("ext_incoming_external_toolbar")&&$$("ext_incoming_external_toolbar").hide(),$$("ext_incoming_internal_toolbar")&&$$("ext_incoming_internal_toolbar").hide(),$$("ext_outgoing_toolbar")&&$$("ext_outgoing_toolbar").hide(),$$("checklist_toolbar")&&$$("checklist_toolbar").hide(),$$("dashboard_toolbar")&&$$("dashboard_toolbar").hide(),$$("reports_toolbar")&&$$("reports_toolbar").hide(),$$("outgoingcampaign-toolbar")&&$$("outgoingcampaign-toolbar").hide(),$$("users_toolbar")&&$$("users_toolbar").hide(),$$("aliases_toolbar")&&$$("aliases_toolbar").hide(),$$("groups_toolbar")&&$$("groups_toolbar").hide(),$$("contact_groups_toolbar")&&$$("contact_groups_toolbar").hide(),$$("phones_toolbar")&&$$("phones_toolbar").hide(),$$("queues_toolbar")&&$$("queues_toolbar").hide(),$$("channels_toolbar")&&$$("channels_toolbar").hide(),$$("scripts_toolbar")&&$$("scripts_toolbar").hide(),$$("clients_toolbar")&&$$("clients_toolbar").hide(),$$("phones_groups_toolbar")&&$$("phones_groups_toolbar").hide(),$$("blacklist_toolbar")&&$$("blacklist_toolbar").hide(),$$("api_keys_toolbar")&&$$("api_keys_toolbar").hide(),$$("journal_toolbar")&&$$("journal_toolbar").hide(),$$("mediafiles_toolbar")&&$$("mediafiles_toolbar").hide()}removeFromTable(e,t,i,o,s){t&&e&&($$(o)&&(webix.extend($$(o),webix.ProgressBar),$$(o).disable(),$$(o).showProgress()),webix.ajax().post(t,{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка обращения к серверу"}),$$(o)&&($$(o).enable(),$$(o).hideProgress())},success:function(t,a,l){a=a.json(),$$(o)&&($$(o).enable(),$$(o).hideProgress()),a.result?(webix.message({type:"success",text:a.message}),s?s():$$(i)&&$$(i).remove(e)):webix.message({type:"error",text:a.message})}}))}loadTable(e,t,i=void 0){if(!$$(e))return!1;t?(i&&i(),$$(e).load(t,"json",(()=>{}))):$$(e)._feed_last.url&&$$(e).load($$(e)._feed_last.url,"json",(()=>{i&&i()})),$$(e).filterByAll()}loadAliasesTable(){$$("aliases").clearAll(),$$("aliases").loadNext(null,null,null,"/aliases/list")}loadUserTable(){$$("users")&&($$("users").clearAll(),$$("users").loadNext(null,null,null,"/users/list"))}loadBlacklistTable(){$$("blacklist").clearAll(),$$("blacklist").loadNext(null,null,null,"/blacklist")}loadApiKeysTable(){webix.extend($$("api_keys_table"),webix.ProgressBar),$$("api_keys_table").showProgress(),$$("api_keys_table").disable(),$$("api_keys_table").clearAll(),webix.guiutils.loadTable("api_keys_table","/api_key",(()=>{$$("api_keys_table").hideProgress(),$$("api_keys_table").enable()}))}loadJournalTable(){webix.extend($$("journal_table"),webix.ProgressBar),$$("journal_table").showProgress(),$$("journal_table").disable(),$$("journal_table").clearAll(),this.loadTable("journal_table","/journal/list",(()=>{$$("journal_table").hideProgress(),$$("journal_table").enable()}))}getDateRange(e){var t=$$(e).getValue(),i=t.start,o=i.getMonth()+1,s=i.getFullYear()+"-"+o+"-"+i.getDate()+" "+i.getHours()+":"+i.getMinutes()+":"+i.getSeconds(),a=t.end;if(a)var l=a.getMonth()+1,r=a.getFullYear()+"-"+l+"-"+a.getDate()+" "+a.getHours()+":"+a.getMinutes()+":59";else r="";return{start:s,end:r}}billing_analysis_outgoing_calls_refresh(){var e=webix.guiutils.getDateRange("reportDateRange"),t="?filter[t1]="+e.start+"&filter[t2]="+e.end;$$("traffic_for_period").load("/legacy/traffic_for_period"+t),$$("popular_city_for_period").load("/legacy/popular_city_for_period"+t),$$("popular_longdistance_over_period").load("/legacy/popular_longdistance_over_period"+t),$$("popular_cell_for_period").load("/legacy/popular_cell_for_period"+t),$$("most_calling_employees_for_period").load("/legacy/most_calling_employees_for_period"+t)}checklistFillWindow(e,t,i){webix.ui({id:"checklist_fill_win",view:"window",title:"",head:{view:"toolbar",margin:-4,cols:[{view:"label",label:i?"Результаты заполнения чеклиста":"Заполнение чеклиста"},{view:"icon",icon:"wxi-close",click:"$$('checklist_fill_win').close();"}]},resize:!0,width:700,height:500,center:!0,position:"center",modal:!0,move:!0,body:{rows:[{view:"datepicker",label:"Дата",labelWidth:100,labelAlign:"right",editable:!0,timepicker:!1,format:"%D, %d.%m.%Y",value:i?t:new Date,id:"questions_answers_date",stringResult:!1},{view:"richselect",id:"questions_answers_agent",label:"Менеджер",labelWidth:100,labelAlign:"right",options:"/legacy/ext_dashboard_agentslist/"+e+"/short"},{view:"richselect",id:"questions_answers_checklist",label:"Группа",labelWidth:100,labelAlign:"right",options:"/legacy/ext/checklists/groups/",on:{onChange:function(e,t){$$("questions_answers").clearAll();var i=$$("questions_answers_checklist_block");i.getList().clearAll(),i.getList().load("/legacy/ext/checklists/groups/"+e),i.setValue(0),i.show()}}},{view:"richselect",id:"questions_answers_checklist_block",label:"Блок",labelWidth:100,labelAlign:"right",options:[],hidden:!0,on:{onChange:function(i,o){$$("questions_answers").clearAll(),i?($$("questions_answers").load("/legacy/ext/checklist/list/"+i+"/"+e+"/"+t),$$("questions_answers_save").enable()):$$("questions_answers_save").disable()}}},{view:"datatable",id:"questions_answers",autowidth:!0,editable:!0,columns:[{id:"question",header:"Вопрос",width:250},{id:"answer",header:"Ответ",width:80,editor:"select",options:["0","3","5"]},{id:"comment",header:"Комментарий",width:250,editor:"text"}],on:{onItemClick:function(e){this.editColumn(e),this.focusEditor(e)}}},{cols:[{},{id:"questions_answers_save",view:"button",label:"Сохранить",disable:!0,click:function(){var e=[];$$("questions_answers").editStop();var t=$$("questions_answers_agent").getValue();$$("questions_answers").data.each&&$$("questions_answers").data.each((function(i){i.user_id=t,e.push(i)}));var i=JSON.stringify(e),o=webix.Date.dateToStr("%Y-%m-%d")($$("questions_answers_date").getValue());webix.ajax().post("/legacy/ext/checklists/fill/"+o,i,{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка при сохранении."})},success:function(e,t,i){webix.message({type:"success",text:"Операция сохранения успешно завершена."}),$$("checklist_fill_win").close()}})}},{view:"button",label:"Закрыть",click:"$$('checklist_fill_win').close();"},{view:"button",id:"delete_change_answers",label:"Удалить запись",click:function(){var e=[];$$("questions_answers").editStop();$$("questions_answers_agent").getValue();$$("questions_answers").data.each&&$$("questions_answers").data.each((function(t){e.push(t)}));var t=JSON.stringify(e);webix.Date.dateToStr("%Y-%m-%d")($$("questions_answers_date").getValue());webix.ajax().post("/legacy/ext/checklist/deleteanswer",t,{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка при удалении"})},success:function(e,t,i){webix.message({type:"success",text:"Успешно удалено."}),$$("checklist_fill_win").close();var o=$$("ext_checklist_table"),s=o.getSelectedItem();o.remove(s.id);var a=$$("ext_checklist_start").getValue(),l=$$("ext_checklist_finish").getValue();o.load("/legacy/ext/checklist/tree/"+a.getFullYear()+"-"+(a.getMonth()+1)+"-"+a.getDate()+"/"+l.getFullYear()+"-"+(l.getMonth()+1)+"-"+l.getDate()+"/"+s.$parent)}})}},{view:"button",id:"save_change_answers",label:"Сохранить изменения",click:function(){var t=[];$$("questions_answers").editStop();$$("questions_answers_agent").getValue();$$("questions_answers").data.each&&$$("questions_answers").data.each((function(i){i.user_id=e,t.push(i)}));var i=JSON.stringify(t),o=webix.Date.dateToStr("%Y-%m-%d")($$("questions_answers_date").getValue());webix.ajax().post("/legacy/ext/checklists/change/"+o,i,{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка при изменении."})},success:function(e,t,i){webix.message({type:"success",text:"Успешно изменено."}),$$("checklist_fill_win").close();var s=$$("ext_checklist_table"),a=s.getSelectedItem();o!=a.date&&s.remove(a.id),1==a.open&&s.remove(a.id);var l=$$("ext_checklist_start").getValue(),r=$$("ext_checklist_finish").getValue();s.load("/legacy/ext/checklist/tree/"+l.getFullYear()+"-"+(l.getMonth()+1)+"-"+l.getDate()+"/"+r.getFullYear()+"-"+(r.getMonth()+1)+"-"+r.getDate()+"/"+a.$parent)}})}}]}]},on:{onShow:function(){0==i&&($$("delete_change_answers").hide(),$$("save_change_answers").hide()),0!=i&&($$("questions_answers").clearAll(),$$("questions_answers").load("/legacy/ext/checklist/list/"+i+"/"+e+"/"+t),$$("questions_answers_save").hide(),$$("questions_answers_agent").hide(),$$("questions_answers_checklist").hide(),$$("questions_answers_checklist_block").hide())}}}).show()}getNpsFilter(){if($$("rangePickerFilter")){var e=$$("rangePickerFilter").getValue();if(e.start)var t=webix.Date.dateToStr("%Y-%m-%d %H:%i:%s")(new Date(e.start));if(e.end)var i=webix.Date.dateToStr("%Y-%m-%d %H:%i:%s")(new Date(e.end))}if($$("filialFilter"))var o=$$("filialFilter").getText();if($$("cityFilter"))var s=$$("cityFilter").getText();if($$("channel"))var a=$$("channel").getText();webix.ajax().headers({"Content-type":"application/json"}).get("legacy/nps/count",{filter:{end:i,start:t,city:s,filial:o,channel:a}},{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка при выполнении запроса.<br/>"+e})},success:function(e,t,i){var o=t.json();$$("countList").clearAll(),$$("countList").parse(o)}}),webix.ajax().headers({"Content-type":"application/json"}).get("legacy/nps/count",{filter:{end:i,start:t,city:s,filial:o,channel:a},byCities:1},{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка при выполнении запроса.<br/>"+e})},success:function(e,t,i){var o=t.json();$$("countListByCities").clearAll(),$$("countListByCities").parse(o)}}),webix.ajax().headers({"Content-type":"application/json"}).get("legacy/nps/promoters",{filter:{end:i,start:t,city:s,filial:o,channel:a}},{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка при выполнении запроса.<br/>"+e})},success:function(e,l,r){webix.ajax().headers({"Content-type":"application/json"}).get("legacy/nps/detractors",{filter:{end:i,start:t,city:s,filial:o,channel:a}},{error:function(e,t,i){webix.message({type:"error",text:"Произошла ошибка при выполнении запроса.<br/>"+e})},success:function(e,t,i){var o=l.json(),s=t.json(),a=[],r=[];if(s&&o){for(var n in s)s[n].sales==o[n].sales&&0==o[n].sales||(a.push(o[n]),r.push(s[n]));$$("detractorsList").clearAll(),$$("detractorsList").parse(r),$$("promotersList").clearAll(),$$("promotersList").parse(a)}}})}})}getPdfChart(e){webix.require("https://cdnjs.cloudflare.com/ajax/libs/dom-to-image/2.6.0/dom-to-image.min.js").then((function(){domtoimage.toJpeg($$(e).$view,{quality:.95,bgcolor:"#fff"}).then((function(e){pdfjs.load("//cdn.webix.com//extras/pt-sans.regular.ttf",(function(t,i){var o=new pdfjs.Document;pdfjs.load(e,(function(e,t){var i=new pdfjs.Image(t);o.image(i);var s=o.render(),a=new Blob([s.toString()],{type:"application/pdf"}),l=$$("rangePickerFilter").getValue();if(l.start)var r=webix.Date.dateToStr("%d.%m.%Y")(new Date(l.start));else if(l.end)r=webix.Date.dateToStr("%d.%m%Y")(new Date(l.end));if(l.end)var n=webix.Date.dateToStr("%d.%m%Y")(new Date(l.end));else n=r;webix.html.download(a,"NPS_Dashboard_"+r+"-"+n+".pdf")}))}))}))}))}getExtDashboardFilterData(e=0){var t=$$("reportDateRange").getValue(),i=t.start,o=i.getMonth()+1,s=i.getFullYear()+"-"+o+"-"+i.getDate()+" "+i.getHours()+":"+i.getMinutes()+":"+i.getSeconds(),a=t.end;if(a)var l=a.getMonth()+1,r=a.getFullYear()+"-"+l+"-"+a.getDate()+" "+a.getHours()+":"+a.getMinutes()+":59";else r="";var n=$$("queues-select").getValue(),d=$$("agents").getValue(),c=$$("hours").getValue();return e?"filter[t1]="+s+"&filter[t2]="+r+"&filter[queues]="+n+"&filter[agents]="+d+"&filter[hours]="+c:{"filter[t1]":s,"filter[t2]":r,"filter[queues]":n,"filter[agents]":d,"filter[hours]":c}}getUrlParameter(e){var t=decodeURIComponent(window.location.search.substring(1));t||window.location.href.split("?")[1]&&(t=window.location.href.split("?")[1]);var i,o,s=t.split("&");for(o=0;o<s.length;o++)if((i=s[o].split("="))[0]===e)return void 0===i[1]||i[1]}formatTime(e){const t=Math.floor(e/3600),i=e-3600*t,o=Math.floor(i/60),s=i-60*o;return(t>9?t:"0"+t)+":"+(o>9?o:"0"+o)+":"+(s>9?s:"0"+s)}timeFilterConfig(){return{mode:"number",conditions:[{id:"greater",value:"больше",batch:"counter",handler:(e,t)=>e>t},{id:"less",value:"меньше",batch:"counter",handler:(e,t)=>e<t},{id:"between",value:"между",batch:"rangeslider",handler:function(e,t){return e>=t[0]&&e<=t[1]}}],inputs:["text",{view:"counter",batch:"counter",on:{onChange:function(){this.queryView("filter","parent").applyFilter()},onTimedKeyPress:function(){this.queryView("filter","parent").applyFilter()}}},{view:"rangeslider",max:120,min:0,step:1,moveTitle:!1,batch:"rangeslider",title:function(e){const t=e.value;return(t[0]===t[1]?t[0]:t[0]+" - "+t[1])+" сек."},on:{onChange:function(){this.queryView("filter","parent").applyFilter()}}}]}}sqlDate(e=new Date){return webix.Date.dateToStr("%Y-%m-%d")(e)}sqlDateTime(e=new Date){return webix.Date.dateToStr("%Y-%m-%d %H:%i:%s")(e)}сallReasonToTxt(e){var t="";switch(e){case"EXITWITHTIMEOUT":t="Не дождался ответа";break;case"ANSWERED":t="Разговор состоялся";break;case"COMPLETEAGENT":t="Завершен оператором";break;case"RINGNOANSWER":t="Оператор не ответил";break;case"NO ANSWER":t="Нет ответа";break;case"ABANDON":t="Брошенный";break;case"FAILED":t="Ошибка набора";break;case"BUSY":t="Занято";break;case"TRANSFER":t="Переведен";break;case"COMPLETECALLER":t="Завершен клиентом";break;default:t=e}return t}сallStateToTxt(e){var t="";switch(e){case"1":t="активный";break;case"2":t="заблокирован";break;case"3":t="удален";break;case"4":t="скрытый";break;default:t=e}return t}getColorCicle(e){var t="";switch(e){case"1":t="greencircle_state";break;case"2":case"3":t="redcircle_state";break;case"4":t="disablecircle_state";break;default:t=e}return t}roundNumber(e,t){if((""+e).includes("e")){var i=(""+e).split("e"),o="";return+i[1]+t>0&&(o="+"),+(Math.round(+i[0]+"e"+o+(+i[1]+t))+"e-"+t)}return+(Math.round(e+"e+"+t)+"e-"+t)}getMenuData(e){let t=[];return e.forEach((e=>{if(e.hasOwnProperty("rules")&&e.rules){if(webix.auth.isAllowedRoles(e.rules))t.push(e);else if(e.subrules){let i=webix.guiutils.getMenuData(e.data);i&&i.length&&(e.data=i,t.push(e))}}else t.push(e)})),t}updateControls(){let e=$$("cfwd.noanswer.switch"),t=$$("cfwd.all.switch"),i=$$("cfwd.divert"),o=$$("cfwd.duration.of.redirection"),s=$$("cfwd.notify");e&&t&&(1==e.getValue()?($$("cfwd.noanswer.timeout").enable(),$$("cfwd.noanswer").enable()):($$("cfwd.noanswer.timeout").disable(),$$("cfwd.noanswer").disable(),$$("cfwd.noanswer").setValue(""),$$("cfwd.noanswer.timeout").setValue("")),1==t.getValue()?$$("cfwd.all").enable():($$("cfwd.all").disable(),$$("cfwd.all").setValue("")),i&&o&&(o=o.getValue(),1==i.getValue()?("2"==o?($$("cfwd.limit.from").enable(),$$("cfwd.limit.to").enable()):($$("cfwd.limit.from").setValue(""),$$("cfwd.limit.to").setValue(""),$$("cfwd.limit.from").disable(),$$("cfwd.limit.to").disable()),$$("cfwd.limit.days").enable(),$$("cfwd.duration.of.redirection").enable()):($$("cfwd.limit.from").disable(),$$("cfwd.limit.to").disable(),$$("cfwd.limit.days").disable(),$$("cfwd.duration.of.redirection").disable(),$$("cfwd.limit.from").setValue(""),$$("cfwd.limit.to").setValue(""),$$("cfwd.duration.of.redirection").setValue(1),$$("cfwd.limit.days").setValue("")),s&&("2"==s.getValue()?$$("cfwd.notify.message").enable():$$("cfwd.notify.message").disable())))}clearDuplicate(e){const t=[],i=[];$$(e).serialize().map((o=>{let s=0;if(o.phone&&(s=t.find((e=>e.phone.replace(/[^+0-9]/g,"")===o.phone.replace(/[^+0-9]/g,"")))),s){let t=$$(e).getItem(o.id);t.phone="",t.name="",t.description="",i.push(o)}else t.push(o),i.push(o)})),$$("oc-queues").parse(i)}clearEmptyRowsAtTheAndOfTable(e){let t=[];$$(e).eachRow((i=>{let o=$$(e).getItem(i);o.hasOwnProperty("phone")||o.hasOwnProperty("name")||o.hasOwnProperty("description")||t.push(i)}));for(let i of t)$$(e).remove(i)}cleanTableToUtf8(e){let t=[];$$(e).eachRow((i=>{let o=$$(e).getItem(i),s="";if(o.name)for(let e=0;e<o.name.length;e++)(o.name.charCodeAt(e)<=127||o.name.charCodeAt(e)>=1040&&o.name.charCodeAt(e)<1103)&&(s+=o.name.charAt(e));o.name=s,t.push(o)})),$$(e).parse(t)}removeDuplicatesPhones(e,t){const i=[],o=`field${t.phone}`;return(e=e.filter((e=>(e.hasOwnProperty(o)&&(e.phone=e[o]),e.phone&&""!==e.phone&&void 0!==e.phone)))).map((e=>{i.find((t=>(e.hasOwnProperty(o)&&(e.phone=e[o]),t.hasOwnProperty(o)&&(t.phone=t[o]),t.phone.replace(/[^+0-9]/g,"")===e.phone.replace(/[^+0-9]/g,""))))||i.push(e)})),i.length>0&&(e=i),e}showDuplicates(){const e=[],t=[];$$("oc-queues").serialize().map((i=>{if(!i.phone)return;e.find((e=>e.phone.replace(/[^+0-9]/g,"")===i.phone.replace(/[^+0-9]/g,"")))?($$("oc-queues").getItem(i.id).$css="duplicate-row",t.push(i)):(e.push(i),t.push(i))})),$$("oc-queues").parse(t)}generatePassword(e){for(var t=e||10,i="abcdefghijklmnopqrstuvwxyz",o="0123456789",s="!@#$%^&*()_+~`|}{[]:;?><,./-=",a="",l="";a.length<t;){const e=Math.ceil(26*Math.random()*Math.random()),t=Math.ceil(10*Math.random()*Math.random()),r=Math.ceil(29*Math.random()*Math.random());let n=i.charAt(e);n=a.length%2==0?n.toUpperCase():n,l+=n,l+=o.charAt(t),a=l+=s.charAt(r)}return(a=a.split("").sort((function(){return.5-Math.random()})).join("")).substr(0,e)}checkPassword(e){return/^(?=.*\d)(?=.*[!@#$%^&*()_+~`|}{\[\]:;?><,./-=])(?=.*[a-z])(?=.*[A-Z]).{12,}$/.test(e)}hintCss(e){const t=e.getNode().querySelector("label");t.style.position="relative";const i=t.querySelector("span");i.style.right="45px",i.style["padding-left"]="5px",i.style["font-size"]="12px"}togglePassword(e,t){if(e.target.className.indexOf("_showhide")>-1){const i=t.getInputNode();i.focus(),webix.html.removeCss(e.target,"wxi-eye-slash"),webix.html.removeCss(e.target,"wxi-eye"),"text"===i.type?(webix.html.addCss(e.target,"wxi-eye"),i.type="password"):(webix.html.addCss(e.target,"wxi-eye-slash"),i.type="text")}}consolidationJournalData(e){if(!e)return e;if(void 0!==e.changes)return e.changes;const t=[];for(let i in e)t.push({before:"",after:e[i],key:i});return t}loadFilterOptions(e,t,i,o=void 0){const s=$$(e),a=s.getColumnIndex(t);-1!==a&&webix.ajax().get(i,(function(e){let t=JSON.parse(e);t.hasOwnProperty("data")&&t.hasOwnProperty("pos")&&(t=t.data);const i=s.config.columns;i[a].header[1].options=t,s.refreshColumns(i),o&&o()}))}}var a=i(3559),l=i(4551),r=i(3264);const n={"Add members":"Добавить в чат","Are you sure to leave this chat?":"Вы точно хотите выйти из чата?",Avatar:"Аватар","Are you sure to delete this member?":"Вы точно хотите удалить участника?",Cancel:"Отменить","Change avatar":"Изменить аватар","Chat info":"О чате","Chat name":"Имя чата",Chats:"Чаты","Create group":"Создать группу",Delete:"Удалить","Delete member":"Убрать участника","Edit chat":"Редактировать",Leave:"Выйти","Leave chat":"Покинуть чат",member:"участник",members:"участники",Members:"Участники","New chat":"Новый чат","No people to add":"Некого добавить",People:"Люди",Save:"Сохранить",Search:"Поиск","Show all members":"Показать всех",Users:"Участники",You:"Вы",Ringing:"Звонок...","Active call":"Активный звонок","Is calling you":"Звонит Вам...",Accept:"Принять",Reject:"Отклонить","Start call":"Начать звонок","Join call":"Присоединиться к звонку","End call":"Завершить звонок","Ended call":"Звонок завершён","Incoming call":"Входящий звонок","Outgoing call":"Исходящий звонок","Rejected call":"Отклонённый звонок","Missed call":"Пропущенный звонок","Could not find your":"Не обнаружен(а)","Error opening your":"Ошибка подключения:",microphone:"микрофон",camera:"камера","Type here..":"Введите сообщение..."};webix.codebase="/webix",webix.ready((function(){webix.CustomScroll.init(),webix.ui.fullScreen();const t=new e.JetApp({id:"erpicopbx",name:"ErpicoPBX",version:"4.0",start:"/main/cti",debug:!0});webix.guiutils=new s,webix.AppConfig=new a.default,webix.Manager=new l.default,webix.AppFilter=new r.default,webix.Manager.initViews(t);const i=new o;webix.auth=i,webix.i18n.setLocale("ru-RU"),webix.Date.startOnMonday=!0,webix.ui.datafilter.customFilterSelect=webix.extend({inputtype:"combo"},webix.ui.datafilter.serverRichSelectFilter),t.attachEvent("app:error:resolve",(function(e,t){window.console.error(e,t),webix.delay((()=>{this.show("/main/cti")}))})),webix.startDayDateTime=new Date,webix.startDayDateTime.setHours(0),webix.startDayDateTime.setMinutes(0),webix.startDayDateTime.setSeconds(0),webix.endDayDateTime=new Date,webix.endDayDateTime.setHours(23),webix.endDayDateTime.setMinutes(59),webix.endDayDateTime.setSeconds(59),i.check((()=>{t.render().then((()=>{let e=document.location.hash.split("/")[document.location.hash.split("/").length-1];e.indexOf("?")&&(e=e.split("?"),e=e[0]),e.length?$$("sidebar")&&($$("sidebar").getItem(e)?($$("sidebar").select(e),$$("sidebar").getSelectedItem().$parent&&$$("sidebar").open($$("sidebar").getSelectedItem().$parent)):(webix.guiutils.hideAllToolbars(),$$("sidebar").select("cti"))):(webix.guiutils.hideAllToolbars(),$$("sidebar")&&$$("sidebar").select("cti"))})),$$("person_template")&&$$("person_template").refresh()})),chat.locales.ru=n}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,